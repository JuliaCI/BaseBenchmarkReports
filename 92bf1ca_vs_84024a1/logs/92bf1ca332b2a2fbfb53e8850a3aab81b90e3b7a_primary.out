cset: moving following pidspec: 702
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.233862669 seconds)
loading group "string"... done (took 0.460532308 seconds)
loading group "linalg"... done (took 7.570651595 seconds)
loading group "parallel"... done (took 0.170230757 seconds)
loading group "find"... done (took 1.169707465 seconds)
loading group "tuple"... done (took 2.084837092 seconds)
loading group "dates"... done (took 1.321363075 seconds)
loading group "micro"... done (took 0.244965639 seconds)
loading group "io"... done (took 0.653490052 seconds)
loading group "scalar"... done (took 40.692203692 seconds)
loading group "sparse"... done (took 12.474357172 seconds)
loading group "broadcast"... done (took 1.113538364 seconds)
loading group "union"... done (took 13.691932685 seconds)
loading group "simd"... done (took 4.775432737 seconds)
loading group "random"... done (took 9.638380912 seconds)
loading group "problem"... done (took 1.972661999 seconds)
loading group "array"... done (took 22.439393842 seconds)
loading group "misc"... done (took 1.418522984 seconds)
loading group "sort"... done (took 3.579716238 seconds)
loading group "collection"... done (took 19.415134779 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.514964857 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137367601 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132073626 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146387671 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203931492 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143719844 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15757273 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11421229 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.972550897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181094072 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153942637 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513810401 seconds)
done (took 5.117371004 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224250806 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094488032 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102855699 seconds)
  done (took 0.862659093 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07752993 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14488256 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094661639 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078226472 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094689574 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078748785 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095017516 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078931046 seconds)
  done (took 1.342128216 seconds)
done (took 3.188747203 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734783559 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279141754 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202832337 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46104108 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195198564 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213022293 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686064068 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.406203184 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253352218 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100273949 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144344847 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388676236 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13553979 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687355518 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090020212 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123118295 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.184619966 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46183278 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082839593 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110208052 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11703818 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14146965 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128553038 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090397004 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184388816 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082394913 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192885065 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108331342 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080250931 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288825183 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200284277 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.6973439 seconds)
  done (took 10.965708468 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110149356 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133226172 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096921379 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138435977 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133096648 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099199543 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086406455 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096726742 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119926363 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174996878 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113894001 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135149983 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093512679 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082655638 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113909593 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243239779 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119324098 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103043327 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099915982 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103673212 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12166695 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111415505 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108157323 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092522127 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166094427 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219665597 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109876647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125053418 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096382963 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112581963 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143657746 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141300389 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094850693 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08045583 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171244174 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124089696 seconds)
  done (took 5.104212028 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186527999 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120554434 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167454765 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164403452 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139583234 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159309264 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113146648 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246365073 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.115458469 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165928716 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14085767 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12783817 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116629597 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081527147 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099420255 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079443315 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.694918514 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122906111 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147669452 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114772387 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102063698 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083657497 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.725951013 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102206918 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080046537 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098393868 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065039539 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158653531 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099310895 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140791918 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120011909 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082274547 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134133137 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206583623 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114282698 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134253701 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095579641 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079560215 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178010385 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105247417 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080268806 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121083493 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076469735 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134044968 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098817836 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096663207 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204603478 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13405642 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082399273 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113523803 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.120992159 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.956309708 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181292631 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089144371 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095374144 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32058406 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098303399 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096976347 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077335925 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287347057 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181260158 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093789736 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080796958 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098296927 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078641853 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098835922 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.746567843 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096081368 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.828005604 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082731467 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105532716 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08182322 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096154138 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103189781 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08736445 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114379265 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079666337 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099019985 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078237089 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095825442 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081298581 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108152797 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101839085 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080416149 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163873267 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078895374 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114468149 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126554894 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083293129 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094843379 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12923671 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083534317 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096757967 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133134518 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080994868 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109064514 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098487948 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14277898 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081934053 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19482547 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080973396 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127202332 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098918295 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113630754 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112756306 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098601431 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084815423 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095417941 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077739584 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164591114 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079812201 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097053533 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081730686 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11083859 seconds)
  done (took 23.42466418 seconds)
done (took 40.171280934 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32728176 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102650005 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103126538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103492011 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100744749 seconds)
  done (took 1.482445285 seconds)
done (took 2.204190805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289282871 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172161901 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09445015 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167263725 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092927829 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173491568 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160105436 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112277948 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218919354 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077621894 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16334085 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094737274 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077308271 seconds)
  done (took 2.642792591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095358187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11506639 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08306842 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110464763 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076583033 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111301049 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092260547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116926212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109055886 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085235231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094272781 seconds)
  done (took 1.810521969 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094564105 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113517378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081785074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109842128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077026973 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110831609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093227179 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115657961 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109827967 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086015539 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094489086 seconds)
  done (took 1.806940104 seconds)
done (took 6.973961285 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091856186 seconds)
  done (took 0.805296556 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.923165341 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.891111848 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11263999 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149808516 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299726382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192204917 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.477104878 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12503331 seconds)
  done (took 11.096625993 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.144932449 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083320283 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104139694 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083791519 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103930843 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0839008 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101262322 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098600355 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083861899 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101672821 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086603558 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099948305 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101633738 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083339077 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099414359 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086293318 seconds)
  done (took 2.327250582 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119785958 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119353694 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105812639 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108119579 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087935034 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105840978 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105911054 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089162304 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100738015 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104292756 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0909848 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10553985 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103779222 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07980937 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10577175 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108464797 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08592841 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105479121 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107379062 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090692443 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106425844 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095975798 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087691286 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106762269 seconds)
  done (took 3.252765172 seconds)
done (took 18.20095993 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160233343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108748998 seconds)
  done (took 0.991237573 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094881889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113347131 seconds)
  done (took 0.934799635 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098511952 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095719294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122719383 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11015797 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080846988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095953198 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119416123 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081097825 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096312419 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080877939 seconds)
  done (took 1.711624918 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082328978 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11030818 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102138313 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095712282 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105581918 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095181304 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088703277 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098845295 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109609918 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076584175 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102462584 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113947725 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085901905 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116973338 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105169068 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084781385 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10253433 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099310845 seconds)
  done (took 2.5066868 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079547301 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096950264 seconds)
  done (took 0.910033591 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081128963 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09389357 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081204203 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097380494 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094151885 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077182727 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094688437 seconds)
  done (took 1.351950137 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.472694974 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135113105 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.254433125 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085851805 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119782322 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30222835 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09807361 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085008776 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103145813 seconds)
  done (took 2.445853949 seconds)
done (took 11.580764309 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093173274 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117786087 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112198431 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465714922 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107531063 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096892704 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160158342 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250677992 seconds)
done (took 2.139901741 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149547112 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326048764 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113936839 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067018846 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095957502 seconds)
  done (took 1.343701308 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080100242 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099939128 seconds)
  done (took 0.917116418 seconds)
done (took 3.146512613 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081140295 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097884905 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077626138 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097369067 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078054817 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095231522 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079865701 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097301157 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131145805 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.08003462 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098534827 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080098583 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096178722 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077708446 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097279671 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077737651 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094572514 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077822161 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094720603 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077972238 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097383896 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078607237 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094950584 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08086469 seconds)
  done (took 2.9121279 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100083986 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098047714 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104025032 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086005758 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102157284 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086088767 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103009825 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096864351 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08618178 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099286397 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100350948 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084776697 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100042689 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084871287 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099783519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101282821 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085900705 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098003973 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082769162 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100676464 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10330334 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081248649 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100984181 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103148751 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084413595 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101656193 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083059518 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09730932 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102925244 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084494061 seconds)
  done (took 3.585535732 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085182485 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094088644 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078781367 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102378031 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077328478 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097271312 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078085839 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096123635 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079203038 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094592295 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080109035 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094779427 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078539719 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09649334 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079943548 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098553677 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108402858 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077891209 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09571855 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078785316 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098421384 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078041296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096018672 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077665221 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094852507 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079102949 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094938516 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078526493 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096276146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078311621 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097572725 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080918682 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094369949 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084777417 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098677685 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077525594 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099454016 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077640849 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095427423 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095173092 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077620835 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094920983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078793573 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101571219 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078597193 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097995375 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077960549 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096934116 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078795493 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098530385 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07759285 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095368445 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08061221 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096101667 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099367359 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078172687 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096281142 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078056631 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096915785 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077719659 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095242361 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07809469 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09728694 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079351732 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11186743 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085587656 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094916105 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080137215 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095925217 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081210744 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096301348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109551757 seconds)
  done (took 7.155511105 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084381023 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106810404 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080557072 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097478198 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07704594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096616078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099560212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079537207 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097644776 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085648214 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097082265 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080427527 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097250064 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108317441 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079362614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097663559 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085651157 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093175432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079321985 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099271219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079611439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099456959 seconds)
  done (took 2.749111987 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209925175 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105229448 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141845682 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108278102 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084935334 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106717964 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101877426 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087562029 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103078351 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084551908 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101284458 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101873255 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083891749 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100633452 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10165636 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085330361 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102994539 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085116033 seconds)
  done (took 2.64835965 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093609316 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098665089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102559916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098195029 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098591594 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084362584 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103932106 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107719428 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08399134 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098869854 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090528868 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101375183 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10192832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081569446 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100953203 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081223493 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101199452 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080986757 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1074455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104037867 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104779789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091324422 seconds)
  done (took 2.870851205 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097961027 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10061084 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118377952 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084834034 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095619598 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079934756 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106076236 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081510682 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106255695 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100465892 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081618064 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097794823 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088414596 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097827662 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104455456 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082024297 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100879056 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081241416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100643993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078301913 seconds)
  done (took 2.639298889 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102656019 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100122207 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099367482 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092412282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09952101 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082929992 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109163839 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100542978 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082500992 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12624514 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099715985 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082896097 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109968372 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105723841 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099878164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092433168 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10914647 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109797854 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083316896 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100136372 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126065046 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084813398 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109424826 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100422277 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.192848306 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100317136 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100881689 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088088124 seconds)
  done (took 3.647625329 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080767495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098502372 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078940834 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096366072 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078961655 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096614874 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078957013 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096747045 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08213595 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096149053 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080946715 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098613978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080874425 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099252425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08375447 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098926698 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081542506 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096558501 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078887616 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09639979 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081822512 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09861374 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081368663 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096898035 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079810054 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09918358 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079146598 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09670305 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081539794 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096923734 seconds)
  done (took 3.431082232 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091050245 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106944105 seconds)
  done (took 0.957365655 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079749302 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114681094 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079949943 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103246288 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087172605 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09917878 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108172619 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087373076 seconds)
  done (took 1.517423496 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096084404 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110362569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083392945 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112062511 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110200444 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095575672 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160679287 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101081065 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088234241 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098376279 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094787118 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09883795 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105202992 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081892991 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104743184 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088927867 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097232098 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088789126 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102368538 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098068433 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083514931 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110262814 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084649889 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097115366 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083782936 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109628522 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108460988 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083177175 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103121814 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108812888 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087608406 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09362021 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082283377 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100637959 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080675814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108793855 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111936891 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084627324 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109224822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084698352 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111295462 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095455256 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088771221 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106519869 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093317147 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100205095 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083845588 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094838654 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09770082 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084777395 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095319316 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081881716 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094551559 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089560433 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103904295 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112891779 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080667158 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101167107 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086020354 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102468936 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0884349 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.1022566 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085341747 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099538261 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106171356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086696845 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107757481 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077115777 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094223055 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080457951 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108638214 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122262626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090877248 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101340677 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083542405 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097678634 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103834424 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084506845 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107760391 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090796507 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100867293 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107835265 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091016234 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100933826 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085518437 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107749352 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09840413 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085239185 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097423553 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096963481 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099549329 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080322559 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097338606 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108199276 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086421247 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099755026 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080765543 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107223773 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079238534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100961148 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084174495 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100948906 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108330968 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089035152 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106351732 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108206408 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089780749 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099722624 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086637131 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096954067 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083419584 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103203677 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088720271 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094244311 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103494321 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084927836 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101760267 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08993426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097782391 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083571671 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108356819 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107317002 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080962135 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096941125 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085836873 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100256701 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087172558 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107952893 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099028074 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077241598 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094900184 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086626898 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10094915 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087737261 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106552235 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103815992 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077052573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099127021 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088737269 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107019044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100329439 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083428808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104467231 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083402311 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099627768 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08869114 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102739175 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081392756 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104535523 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102011327 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077876894 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104365961 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085614836 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098755418 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086545619 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104969035 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103136001 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084445224 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098970425 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088806466 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101972852 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081576899 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101211077 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080681384 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109715218 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102204581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078579543 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097033136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090391785 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098567156 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082653437 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098857089 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102710247 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084086084 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098161914 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083196389 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101931479 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095105 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105618022 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102748277 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088536284 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110054614 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08354153 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10245407 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100786898 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085095317 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102303265 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090064388 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106163616 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106375898 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085633782 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097516656 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088650597 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108069774 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082423939 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098736284 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082522499 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103859416 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107038567 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087140912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.1019305 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080220972 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101424329 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104836341 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085576686 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100269238 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0820848 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105684931 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082401828 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108069845 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101832802 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093024769 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104407005 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078832898 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10464372 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098855631 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088924092 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096068341 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08034147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098944657 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083808346 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099784289 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085515182 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094736808 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089920192 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108498999 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101011595 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082380039 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101020415 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091436922 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101851599 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086853907 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103869569 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10610879 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09583184 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099359397 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086024798 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109659277 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101337464 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076780243 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10670811 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081680171 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100463129 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081805395 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098835568 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085865377 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10986366 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105523193 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077015127 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104296732 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081831457 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099404368 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079148236 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10770753 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10497927 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084991266 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111350307 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084399435 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103363338 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087611066 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101752784 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102202452 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084279907 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105081894 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084605036 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103515769 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08259027 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103218785 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100402242 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081065831 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103151089 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086195609 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101652541 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088915586 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101141936 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083369353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103624186 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10188978 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084359297 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10132042 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082920537 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104300266 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084343281 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102583701 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085689549 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097279462 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109646523 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08333581 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109365901 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083283962 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097583918 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089018896 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.1041556 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107823682 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084582714 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102065263 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08478773 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102394116 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086025828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111081838 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098617879 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092681842 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107587546 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084201532 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104997924 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082732408 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103124303 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082868879 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10273965 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102197231 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083794013 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101039647 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087679045 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103958998 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083709837 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104002284 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10282425 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083063126 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103577123 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077519053 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10076227 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083276146 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10265717 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09106105 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101997509 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104529851 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082662793 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103394405 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083187968 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099074143 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091856259 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111370211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102391011 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091491124 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100983606 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085020096 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110741048 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095477425 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081610748 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099274566 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080856123 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109697455 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084533382 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109375697 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083702476 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101242765 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098829287 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084145511 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101098415 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077087477 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099517409 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08682603 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103633548 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08300568 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10151882 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085967702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103372487 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108570963 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08310409 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103360779 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08446933 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098891619 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082609389 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100896655 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087040456 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102475997 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098892516 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080990311 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102531125 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085788177 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102792042 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084588221 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102832098 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09874802 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102537 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104668787 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088075068 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096191397 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086692975 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101260552 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083717085 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101026044 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087693216 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105989722 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10343426 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090651712 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101378471 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084109866 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102300288 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081793876 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102399937 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101765171 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084215003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100603899 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084969232 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110807562 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081571037 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10442905 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082863764 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102310384 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106986436 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085173889 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104161522 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091713122 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10554901 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10297852 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089634168 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106612668 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087404766 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103798203 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08497868 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108815209 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101435437 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091373225 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101677683 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08455521 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103926121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081865003 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101868713 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083183851 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101103459 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106947483 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085401865 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101316138 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082424598 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099963271 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085570743 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106926462 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110182247 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086102447 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106323055 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080026301 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098982954 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085227805 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099334556 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085795157 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106004325 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108520046 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086100746 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102308783 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082541574 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109652808 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089374959 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107016369 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100266624 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08852403 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103382871 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086752101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103363924 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083969296 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104308704 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107271262 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08481368 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101103834 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092034451 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106067537 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084884966 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103967862 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084005948 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102173499 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098465801 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085473851 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104482297 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090765792 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105067777 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083223553 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112263636 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102185284 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084116861 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107249702 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083888482 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108882193 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079377272 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102961221 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104024121 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085950464 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097599423 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083630578 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099896079 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086776779 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101709533 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079877358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11224719 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109457171 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086497752 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102339562 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08242195 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097644962 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079886898 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102049669 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085047693 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10497769 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111989607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083801762 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102109653 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080106453 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103199313 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086782324 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106393126 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081333613 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099375753 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082193846 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104935315 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109312434 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083773021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10317664 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08817491 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105282112 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082075023 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107265104 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099222161 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088614101 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113371362 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085710119 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103642689 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089034765 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111288615 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103889648 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079885611 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104347019 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086678288 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103377236 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085638688 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104298958 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116155767 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087694115 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101528414 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082500082 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105772103 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083018059 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109684611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104443027 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085236312 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108492688 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08566711 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111856441 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10565509 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089946461 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104880149 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086789912 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101209254 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084336652 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101611293 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081994098 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104727223 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10359469 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089041609 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111984057 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083348033 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113105497 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111178562 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08976163 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100302666 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083748938 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102719127 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07982462 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104043418 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081759903 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101208592 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100684562 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083300119 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103283527 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090485818 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104349616 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085565435 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10324686 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078548484 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104723118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105129744 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087755187 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099410774 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084986617 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104415939 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090027189 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107526572 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08458694 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104953279 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104775937 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086060968 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098841687 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091018183 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101893833 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086357419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102297139 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084916053 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104958839 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107521609 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090315128 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105079179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087579265 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115662391 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106934903 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082505108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100523685 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090462097 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101806902 seconds)
  done (took 57.848633794 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14692421 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081643369 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099232878 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079919071 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114138557 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099677073 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080741797 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099846363 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081256378 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102331654 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079627041 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098639335 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108342296 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125239054 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093741718 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1041717 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079122959 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101019558 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098622128 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081163208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109376127 seconds)
  done (took 2.873450328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105472004 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11734841 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115150228 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119985441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091696319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115777575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11564591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116178729 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100782735 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111423376 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119605883 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115213472 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092804488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111680203 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110965952 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094562451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119659388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109707996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116900168 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095717098 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113234271 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11694777 seconds)
  done (took 3.232405923 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084698569 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102630344 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086565565 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097668086 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084403388 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097873026 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088171347 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101659981 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087675986 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101897579 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082572259 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102795241 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104761382 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080223695 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102878198 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082332255 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154577797 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107810628 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084729037 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105353585 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100273588 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08679567 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098814354 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080672455 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103345744 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089558712 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105069242 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082751413 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10343204 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083025927 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104094655 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082151386 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105898029 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103972881 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083246635 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102828354 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08463334 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103023784 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079836119 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101846215 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085885979 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099087064 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085275118 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105457581 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082194034 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101769719 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085456378 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104107704 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099167874 seconds)
  done (took 5.483567593 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105470284 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161453202 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086387857 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143380242 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121378299 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113376081 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088350615 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143189144 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103390386 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084118296 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12459738 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121667716 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104065797 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089502585 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108005981 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104420038 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087135742 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103652256 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089442289 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104166009 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108864458 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091013006 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120770463 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119173062 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108671009 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084628934 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103993426 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108686874 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099041389 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110355533 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10976599 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091326496 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122396536 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109493501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084143718 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107820759 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123057107 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104619064 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088107011 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101767108 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088205204 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109916448 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111498326 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103396445 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105324077 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10923898 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085156061 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101351762 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118696308 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087859985 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113745619 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121201151 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108928825 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08617425 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110375808 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121700299 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085474472 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10221008 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088165624 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118110291 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101601776 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089415162 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120225342 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106405751 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112206479 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100668063 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11018019 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108632496 seconds)
  done (took 8.163647264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094896743 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111678107 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121996184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122905169 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092647096 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111919666 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1115162 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092271099 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111770726 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117054269 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111594718 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13571592 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087303067 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115915236 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111576395 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09186274 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111612079 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111674215 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091754213 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111713456 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11168785 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12205125 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091968925 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121452112 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142231202 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106821311 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09115406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113082321 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122984773 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111259329 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123588785 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092463585 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11291442 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123299702 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125067668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091305515 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104158287 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112043561 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092618961 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111474181 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106506088 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103038514 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112897139 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107145528 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092130535 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111697762 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121367519 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125251027 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115379721 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098665176 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112374162 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122404396 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112122864 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092603817 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122377349 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148727552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122143484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122152934 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112639074 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102582687 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122192838 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130441431 seconds)
  done (took 7.732316299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108540009 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115691077 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119201638 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100615277 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082963102 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109273361 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083195563 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102795324 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114484928 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096170498 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11817556 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109471638 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113066183 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098174694 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109770217 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112475677 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090616691 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109706885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115707483 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110037871 seconds)
  done (took 2.945586896 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094730455 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124549466 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085230368 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112443899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108559316 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091581392 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108471609 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108356213 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086918771 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108009206 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097521117 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117016497 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105559669 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092626577 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118261761 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112259799 seconds)
  done (took 2.497669127 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096767811 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117894997 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121045906 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084991 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105057824 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080719477 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106776898 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101112856 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082313608 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121220446 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086005625 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108937265 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106195469 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086190568 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101626891 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089214609 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101493841 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083324551 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10596767 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119158824 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096623891 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105146636 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105954851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08745558 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105852708 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091396811 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106933303 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103358324 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08334457 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105798 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08685325 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113102112 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101995645 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085166139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103668439 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083478755 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105431237 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085558832 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109177116 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105385704 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085183614 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105954359 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086937585 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107002102 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080958318 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106405876 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10099716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092285665 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103982805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085623965 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106255481 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108065086 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086990291 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116593531 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089179777 seconds)
  done (took 6.268443004 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101052678 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109421396 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081816014 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103115172 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088694306 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107875679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108752188 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088180513 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10787367 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083670461 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107462022 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090331408 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107617668 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109660998 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08853602 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109400516 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081143036 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106992395 seconds)
  done (took 2.615684647 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091142146 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105423072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093260403 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106206792 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085523739 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109581796 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080720666 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104616346 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104046934 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085978251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105433814 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089033713 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104566485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087885469 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106887628 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085442822 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108989296 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103669663 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086688678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101298847 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088680457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104227443 seconds)
  done (took 2.972017555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118677458 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125332034 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093534647 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230433735 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103678281 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133101502 seconds)
  done (took 1.638102854 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110207813 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121260823 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106578655 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108415667 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116180731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107786406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088546045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108259537 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118754097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102846205 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109046874 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118633156 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118883563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097446293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115262544 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11547903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107762848 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0889776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106303185 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12969137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088105141 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119324077 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107712591 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10851616 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119740687 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118570461 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121986283 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088524868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118161894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114478971 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088438666 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119328578 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124410871 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109887026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098849812 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108798685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129493066 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115581647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097881295 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110174547 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11533999 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098438433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115800652 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119765906 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108939378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093398481 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109568234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108239284 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136977665 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095352629 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118849587 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115636967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119132481 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119539904 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135812129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102299296 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119737954 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116552358 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123311129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118501531 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095489464 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118690743 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12334953 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115276927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118344242 seconds)
  done (took 8.192330886 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10333877 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126139312 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109208989 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123059419 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098327353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109200212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10872513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088330298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108653341 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107228696 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153378656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088930129 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118899967 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118196155 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108374433 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088765492 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108891376 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118374356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088536832 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136929761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108415999 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11856955 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118562262 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098145856 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124026299 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116735008 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108563294 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089774357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108932662 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108505417 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095279237 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109162222 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118110641 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086937435 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119533136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109076147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088612742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115517662 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108403295 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115523931 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099023937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129832838 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109016031 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109354377 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123036447 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089331704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108993285 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087537008 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110039949 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107761561 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102786084 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124790048 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123669012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118893997 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108334153 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089498243 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109883959 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109430868 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088798965 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11663249 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118244419 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108915434 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1353314 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089191579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108563312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118885904 seconds)
  done (took 8.065592687 seconds)
done (took 155.380275783 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099079011 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136656847 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097365533 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168813554 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107033851 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120579241 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139420806 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098190916 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106914831 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086397147 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106773715 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088231581 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171678994 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086695207 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107439635 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108430438 seconds)
  done (took 2.670264552 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200948006 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256320364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103556335 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105798001 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089466454 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110852809 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105559071 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092060283 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110074272 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08633059 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109563066 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087318916 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107384673 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087617936 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11070836 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089448762 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107487703 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088686366 seconds)
  done (took 2.895548953 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114455361 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147001781 seconds)
  done (took 1.111899045 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119866369 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182281567 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319361292 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156502961 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107327559 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128113364 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157972018 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.1313902 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198580143 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122952027 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123670677 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09781619 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140923678 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116352854 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095297765 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119353463 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142612681 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093897729 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116557969 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116609858 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117738177 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108206248 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116254241 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094561635 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18167115 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120627016 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085528044 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107084604 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116296096 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095771257 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113918839 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125551451 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099458342 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175575081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102838421 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177903303 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098603033 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115091641 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115559303 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092539627 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120317596 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119979472 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104882708 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119355725 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08548216 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120319314 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106426104 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086960102 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115561965 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09858256 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116415182 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11394917 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158087565 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120059358 seconds)
  done (took 7.579530359 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797702462 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165133412 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091854872 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888721542 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139352785 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103363011 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783605277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133767668 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234722759 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763514072 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135088041 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122651443 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229752382 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240533439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957376981 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312719957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673230316 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103489582 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150160121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154214634 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120143324 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138621237 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13191353 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431155577 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095510951 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113879104 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117904032 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100600091 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159718151 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125799851 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115049212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179920526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.272433326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186466793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117067432 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090089458 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112972084 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170312714 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270136748 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216526983 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183442989 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087904839 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112285227 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122255374 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112616525 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110292991 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16442791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196899 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175415655 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093590661 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122057741 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120791314 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12109102 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167743146 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120576041 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296962797 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326388568 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112380534 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121277216 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107184941 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26643199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123848565 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225405954 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119082361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214569739 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112107101 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779022444 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191787342 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091341287 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118707258 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120765907 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096144159 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122226644 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168952901 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39374872 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125727058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093588865 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112643233 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216771111 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126717377 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112468547 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163909127 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116726368 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100994581 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126654375 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123614862 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171941686 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233890974 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125478529 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120656429 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094654891 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127345532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117235473 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213611537 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221728589 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164810436 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211516736 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124134674 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165595499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191080024 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098772673 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196519311 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098539822 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126670841 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123689703 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218790485 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146524813 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101295697 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117808568 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119413893 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150070624 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127368589 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098727461 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193082877 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460334367 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170001908 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109625934 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12930475 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099951497 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183334495 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097713644 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259090591 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122455761 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171262612 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120571342 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089072327 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121404633 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165688444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124406501 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12293551 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101844503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119831707 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23892786 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219606332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124000554 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222490209 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186306057 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120504663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17343886 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122826547 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168667666 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120834599 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122456491 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096489647 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785705847 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125645637 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099523328 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117093256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188741453 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1121966 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103477813 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126105501 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109257412 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750507505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128547681 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122220124 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102485062 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119815828 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121290878 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096976416 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117433384 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163324979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235271049 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122242015 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119918126 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103985257 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182155149 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095871392 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126345251 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126447818 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126082028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100964696 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116066991 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125131575 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172491474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164467637 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223687126 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598608769 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091754409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125773381 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231646481 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090857893 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292790593 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120699339 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228006724 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166979377 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122479393 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320669233 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167777601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188898464 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127827576 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175719767 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087520313 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119662343 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166570829 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113526708 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118808012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165021148 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125829833 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102281452 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.988838181 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113099683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226895551 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109067327 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173184051 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094843854 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122449288 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296182114 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11244675 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108338581 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188100197 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093773434 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126376154 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.732569759 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105357841 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123213441 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119592738 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224518504 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166455927 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097131161 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120176961 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122585896 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164545232 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208460929 seconds)
  done (took 44.353621828 seconds)
done (took 59.457367101 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276245823 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214218499 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258789214 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173203739 seconds)
  done (took 1.871608325 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170501152 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149074407 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120902188 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108464006 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150890435 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085607423 seconds)
  done (took 1.660751715 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353254097 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272725103 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239516594 seconds)
  done (took 1.744420531 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289264802 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253158671 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.3555403 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.422219603 seconds)
  done (took 2.314178875 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208945512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13289378 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111573829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105048159 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197402545 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251138827 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141738358 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203101783 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122193167 seconds)
  done (took 2.398024935 seconds)
done (took 10.868532001 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.253527731 seconds)
    (2/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.155055797 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119335925 seconds)
    (4/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.23937165 seconds)
    (5/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.204400631 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09464656 seconds)
    (7/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120166638 seconds)
    (8/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.171912546 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102876821 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128119404 seconds)
    (11/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12338439 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09974989 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116951257 seconds)
    (14/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.265478346 seconds)
    (15/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125550748 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.194160212 seconds)
    (17/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11560316 seconds)
    (18/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.170349155 seconds)
    (19/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120607948 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214123795 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104435651 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.230651683 seconds)
    (23/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077439633 seconds)
    (24/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110173924 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120356028 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.229630235 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110916376 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11807782 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117849053 seconds)
    (30/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.197985706 seconds)
    (31/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.259597288 seconds)
    (32/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116929001 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13733652 seconds)
    (34/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23435247 seconds)
    (35/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182842929 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15269551 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.137754724 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094610744 seconds)
    (39/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.202919577 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118692809 seconds)
    (41/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.250606358 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094688791 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117808476 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093423298 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13287292 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.186094483 seconds)
    (47/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17310115 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077310748 seconds)
    (49/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118682431 seconds)
    (50/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.175968615 seconds)
    (51/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184596623 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111673043 seconds)
    (53/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161198703 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122108275 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111223069 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087695608 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137743276 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148377968 seconds)
    (59/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101848146 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169877999 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086616625 seconds)
    (62/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172746616 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094509684 seconds)
    (64/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.224856515 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.173664085 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125567574 seconds)
    (67/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093794742 seconds)
    (68/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.177340357 seconds)
    (69/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140495043 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.190863167 seconds)
    (71/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.133130907 seconds)
    (72/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.127757014 seconds)
    (73/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15749969 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.136368484 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195454557 seconds)
    (76/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068898993 seconds)
    (77/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067288849 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.110433451 seconds)
    (79/286) benchmarking ("sort", Float64, true)...
    done (took 0.233470796 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11437047 seconds)
    (81/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089882163 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140054047 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095128335 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.181142216 seconds)
    (85/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092740051 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.151018432 seconds)
    (87/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111701744 seconds)
    (88/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.120274417 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08995851 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.179727031 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110826515 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139461379 seconds)
    (93/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091329429 seconds)
    (94/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.092730739 seconds)
    (95/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06745716 seconds)
    (96/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077506372 seconds)
    (97/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104678969 seconds)
    (98/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.129266876 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.216791783 seconds)
    (100/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.153792762 seconds)
    (101/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098337961 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124557106 seconds)
    (103/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076908787 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.191788305 seconds)
    (105/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067320692 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117914612 seconds)
    (107/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169740855 seconds)
    (108/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158902601 seconds)
    (109/286) benchmarking ("sort", Int8, false)...
    done (took 0.188265478 seconds)
    (110/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092259729 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095674678 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092854857 seconds)
    (113/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093772048 seconds)
    (114/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.145262677 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091099118 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.181682124 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119176702 seconds)
    (118/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06858342 seconds)
    (119/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128956593 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132055759 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.098083714 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11711913 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110513759 seconds)
    (124/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135654702 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143817182 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093318686 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118681952 seconds)
    (128/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184237495 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093072406 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118455397 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184156749 seconds)
    (132/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086847004 seconds)
    (133/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076237074 seconds)
    (134/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122496943 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086925046 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11779956 seconds)
    (137/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067475385 seconds)
    (138/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093098991 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093653937 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.11545418 seconds)
    (141/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089104977 seconds)
    (142/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.099856069 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096718502 seconds)
    (144/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147534546 seconds)
    (145/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.23461467 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1013773 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182654772 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136288783 seconds)
    (149/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067354507 seconds)
    (150/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168172596 seconds)
    (151/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068884378 seconds)
    (152/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172726377 seconds)
    (153/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08965671 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110208204 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06787416 seconds)
    (156/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.094612656 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092935123 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110766556 seconds)
    (159/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096750095 seconds)
    (160/286) benchmarking ("sort", Float64, false)...
    done (took 0.173606896 seconds)
    (161/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109872382 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068689124 seconds)
    (163/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095147814 seconds)
    (164/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151397229 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117543207 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094596952 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175003659 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068241827 seconds)
    (169/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121678505 seconds)
    (170/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.121023093 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120744832 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138640874 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06777808 seconds)
    (174/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162961927 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087413512 seconds)
    (176/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067173522 seconds)
    (177/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153676666 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 0.224231524 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085497301 seconds)
    (180/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.101917503 seconds)
    (181/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069008361 seconds)
    (182/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.101902183 seconds)
    (183/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098363871 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138709464 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086328905 seconds)
    (186/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092708673 seconds)
    (187/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067177196 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110003889 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097254679 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117341588 seconds)
    (191/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068123396 seconds)
    (192/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111447954 seconds)
    (193/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096781427 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111776069 seconds)
    (195/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.14988844 seconds)
    (196/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115847923 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.126451212 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110773223 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13746381 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08734226 seconds)
    (201/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181131755 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086841019 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117371925 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068345646 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109916719 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086669794 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171568904 seconds)
    (208/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117524764 seconds)
    (209/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067496964 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101191744 seconds)
    (211/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090718175 seconds)
    (212/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079282093 seconds)
    (213/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090811909 seconds)
    (214/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06794586 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087834972 seconds)
    (216/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090561631 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.309565085 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110078579 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087902347 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090956206 seconds)
    (221/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091490962 seconds)
    (222/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091396729 seconds)
    (223/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067663703 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067390273 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091318959 seconds)
    (226/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220622312 seconds)
    (227/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068258742 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111196729 seconds)
    (229/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089178729 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091868903 seconds)
    (231/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067915619 seconds)
    (232/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068394616 seconds)
    (233/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125095414 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087641766 seconds)
    (235/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138865596 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109868796 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.113189974 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116199201 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08895634 seconds)
    (240/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109632611 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087146272 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118380571 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067796999 seconds)
    (244/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090216047 seconds)
    (245/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08968763 seconds)
    (246/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127947675 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068224403 seconds)
    (248/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112219897 seconds)
    (249/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066747736 seconds)
    (250/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086027257 seconds)
    (251/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122247227 seconds)
    (252/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.0680241 seconds)
    (253/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117115686 seconds)
    (254/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068202776 seconds)
    (255/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089814066 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06775848 seconds)
    (257/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187373522 seconds)
    (258/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.068029564 seconds)
    (259/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182406352 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088347347 seconds)
    (261/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.11042352 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087466037 seconds)
    (263/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091315582 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095022511 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110521193 seconds)
    (266/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094566955 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10810349 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086937847 seconds)
    (269/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.142105291 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095468335 seconds)
    (271/286) benchmarking ("sort", Float32, false)...
    done (took 0.174759295 seconds)
    (272/286) benchmarking ("sort", Int8, true)...
    done (took 0.224368734 seconds)
    (273/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117786301 seconds)
    (274/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114756136 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116959635 seconds)
    (276/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076792167 seconds)
    (277/286) benchmarking ("sort", Float32, true)...
    done (took 0.233617099 seconds)
    (278/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113632597 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092966121 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118568877 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087590402 seconds)
    (282/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092095167 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093338825 seconds)
    (284/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067243607 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164444502 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112106091 seconds)
  done (took 36.183205175 seconds)
done (took 37.064956023 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10050144 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148899854 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096677851 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136972877 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124775518 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091773826 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118821776 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098063172 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123512346 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125542255 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098611103 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093188558 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097264107 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121802144 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09760012 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139470681 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124055857 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09455217 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118940581 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086219681 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118836566 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088903626 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111777073 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070401155 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122077929 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094570747 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117516213 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120814205 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08770558 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110767639 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090767732 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117277718 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087388601 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124242656 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093699532 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119291715 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09750923 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121192638 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112234633 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087325406 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118134049 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087289178 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117811279 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094505271 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116047106 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093121771 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119830635 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10014277 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140354157 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115727686 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095578808 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120518032 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097772226 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118339907 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091779418 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119948915 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092605257 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140962304 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119827224 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09289981 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119170963 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094703819 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117286105 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095059395 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119770314 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12133228 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098321446 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116572633 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097702119 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116790959 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087472648 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120754302 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090352906 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112241419 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096120399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121221481 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08639335 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117290259 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118667351 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091681374 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110374649 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090155203 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112494261 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093418384 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113356209 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070165075 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115134002 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094094637 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110903231 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096336738 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.1174256 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094711018 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11379477 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099717103 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11178587 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093448729 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111708838 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087834544 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113355356 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092394415 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111274444 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090297948 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120457471 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088961597 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116640869 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12411566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087278377 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11772208 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087444994 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110435652 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102976065 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121667038 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08736588 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116735808 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086835987 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119949736 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086904079 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111012972 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087680542 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112373848 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093570701 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112181667 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114551916 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094813633 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126236899 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086851418 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114723643 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090574367 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110659442 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093896778 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112266799 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088260814 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11370218 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078097234 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114149306 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088355179 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11855418 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090244322 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120392457 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089868712 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120976948 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091846639 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117574037 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092994023 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110696232 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075451566 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116909283 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090613858 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113716192 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088151282 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113911975 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087514384 seconds)
done (took 17.000922183 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088303177 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184841145 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153145344 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142378191 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108425447 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112732258 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123002988 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11941719 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115283335 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143711585 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111532569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132447379 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149089645 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088017218 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112529803 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092555699 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114136419 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102634651 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146703975 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133914912 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165048149 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087395219 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147839903 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135671231 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121497438 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105913321 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112892264 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092288714 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115925221 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112608704 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132748982 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116386193 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088778169 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134456643 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105157492 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121200585 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088486237 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119768801 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088572151 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112796802 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142262201 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134686375 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094031684 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118650946 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091942751 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115191544 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089711274 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121860104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099196598 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117215192 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126448836 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157855051 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092489429 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122619398 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088064319 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124324488 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122060478 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090826429 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112979813 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091165995 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111805839 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091514083 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127590309 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142608 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092732663 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122719451 seconds)
  done (took 8.65442185 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105850219 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140301407 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105951106 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132002726 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111988027 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089531303 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11381386 seconds)
  done (took 1.743039036 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088785062 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135732788 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112163687 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137368356 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132552547 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11281253 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123855914 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089674536 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133876187 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09050623 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13514175 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150957816 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091100591 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122075525 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138364528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089448943 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138098631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090283078 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117824718 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113705521 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117144286 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136233474 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092418077 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114708578 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103564981 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115449601 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163197766 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095219007 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115499898 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093401226 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112905865 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152915767 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104127965 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125686792 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08915644 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130039578 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130087039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088016773 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126464913 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094863986 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12900547 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090449553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115971233 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087787414 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119150183 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099939601 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118670691 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090562222 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117572892 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135025108 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090422247 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146631768 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090448744 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118577807 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091144502 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12004175 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099307862 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115877528 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134025153 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091911476 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131929197 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107012137 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128400709 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130772272 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092490765 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12859443 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103504751 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117090676 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09154533 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118131719 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105758153 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113089869 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091391341 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125987269 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116170873 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112915065 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138991384 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091798276 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126025233 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08928415 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115175772 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11452327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112569801 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119188457 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090493813 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118549379 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093704305 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113014297 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089132125 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118881372 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088130364 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117094706 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0955957 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116148863 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092735537 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132157062 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115720464 seconds)
  done (took 11.898761671 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09053657 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115548444 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093110422 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115176943 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091125375 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116147861 seconds)
  done (took 1.575973992 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115967797 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118271788 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105235146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121346829 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157221424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105191069 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131136542 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12469571 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109753074 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128173538 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130349073 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106687069 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136443033 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121566683 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104803325 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122428747 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130620525 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10086939 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128291112 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097375026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137840012 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121137233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098199473 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133217051 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119664267 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096773568 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126492536 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103224323 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128437938 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123913513 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097368721 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119383851 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09826411 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124283661 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131890267 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09739566 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121228179 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119767067 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10113004 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118921678 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106620403 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122128976 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126935683 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09406338 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125379161 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121667122 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095439923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125641749 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103908174 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120581713 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11945396 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096693471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121405623 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09445862 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124376413 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126139489 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09492164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130869625 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122396588 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09726902 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119483475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094144275 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126796347 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120317157 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106318127 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12099393 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121780696 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097264485 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123509546 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097423302 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120673045 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094362987 seconds)
  done (took 9.286410662 seconds)
done (took 34.099824842 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691729737 seconds)
  done (took 1.646731848 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815739944 seconds)
  done (took 1.772308932 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.867039907 seconds)
  done (took 17.849350271 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493414361 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579289406 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997003779 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179152709 seconds)
  done (took 3.202553548 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942663368 seconds)
  done (took 1.915466038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28360522 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235911171 seconds)
  done (took 1.477389308 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769114056 seconds)
  done (took 1.739215926 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.361245146 seconds)
  done (took 2.319496061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328721775 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184564771 seconds)
  done (took 1.480511487 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54935127 seconds)
  done (took 1.516695474 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.952574585 seconds)
  done (took 10.92438341 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26813388 seconds)
  done (took 1.248531271 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308482443 seconds)
  done (took 1.279443941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.499980779 seconds)
  done (took 4.476514638 seconds)
done (took 53.815660291 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099287034 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127722211 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10274733 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12538529 seconds)
  done (took 1.424224411 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102660019 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121368472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101354606 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121149969 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127013491 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097694063 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124647324 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10306763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121421535 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097794313 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12303596 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121620259 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099820137 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123959691 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093735728 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125665923 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100265248 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12200502 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125084553 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09713848 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119529542 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09898849 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12537958 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094896537 seconds)
  done (took 3.667650684 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10216513 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120212197 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097058212 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119043582 seconds)
  done (took 1.417546159 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100914227 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13213413 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106454516 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126383969 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132725708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106378004 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118636407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09260396 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11984174 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101334455 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117048089 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139631646 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106904053 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125502674 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103920103 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11490346 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091805073 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131676589 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125986053 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101215985 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118693609 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100567371 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116137816 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110420096 seconds)
  done (took 3.717118423 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171741417 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127926956 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140002629 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09600551 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160915593 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142110202 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088818455 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141269081 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088630923 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131540087 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118971858 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133580741 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130818893 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089498547 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114826708 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08869372 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130625094 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130412096 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092293916 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128442137 seconds)
  done (took 3.430057815 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098825812 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118588478 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088982727 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116494633 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099051209 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121423671 seconds)
  done (took 1.625438657 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091911623 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114829401 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090726146 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115317077 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094386603 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115626489 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089839336 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115160303 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090662373 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115951495 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090656891 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114292293 seconds)
  done (took 2.221827617 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507780902 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120784054 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121939793 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089507773 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125062595 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089974579 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130399207 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09356268 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141760113 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089177521 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117744468 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091909719 seconds)
  done (took 2.700877687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236999659 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126403155 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285329766 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369318682 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156686969 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166642025 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280646379 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162492174 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199726982 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151769322 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231289231 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197691112 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153721323 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193393037 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138708644 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146255748 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189967649 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2525545 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153941781 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212090935 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207743533 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168135684 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179618899 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152486296 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112455777 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194162451 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096002181 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130950297 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210905797 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206782259 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190410816 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162463125 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148377556 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238444161 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249192289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197163427 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279711625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134603857 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143245083 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167470757 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266096134 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13998827 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234917234 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156945422 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105148921 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222352869 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167136262 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178819898 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146517971 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138858334 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199430504 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242207191 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194391967 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139056772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302282552 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148101568 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158221348 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189926783 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253033868 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2279237 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190342606 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121516643 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190043441 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192469361 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212623825 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.12739358 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.211240089 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149811694 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18362121 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189787722 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166807458 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206064712 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180546172 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140166219 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172378006 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174142609 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174809154 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260016379 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186142772 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122894302 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171567526 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150424172 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10548124 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196666838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126488572 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217269921 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144705742 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164719784 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21063701 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160150237 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162596013 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221630974 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18549289 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149544397 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084329639 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154553717 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155542927 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177068815 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141068506 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159658344 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158097542 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129841236 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169567064 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098569575 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211750142 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092914852 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175005662 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18436214 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12776814 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162572392 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154566762 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151511997 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179489088 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201493429 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141795369 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133970579 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210020648 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179858444 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142811816 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177791864 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229100328 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118405908 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149570619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228350398 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218916107 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141394274 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230245523 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154445446 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109541972 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134993547 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182198928 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156584425 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164196394 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133693066 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185981686 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23413072 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10038933 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139821176 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196841354 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135295588 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132625534 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155807239 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121839336 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138797258 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143463199 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146417278 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176771542 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180971643 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155375858 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168624865 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151415418 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249787012 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141051959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151065838 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123548722 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12321855 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194968252 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227005109 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104707879 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234740295 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173665305 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199928992 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197681232 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108654976 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178282355 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131744234 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094248082 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222443003 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169052298 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163476441 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197379051 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223591147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182498292 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183676201 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166325676 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202321394 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138463926 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184224021 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111833729 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161609215 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159938341 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123577551 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111952524 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136250681 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151270615 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143704162 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133201061 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200719144 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172608066 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217166261 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159813795 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122393345 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208054229 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103435645 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177107537 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207414807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119563423 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227061539 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194274388 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213555531 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117568147 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22961028 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094405016 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127178417 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143270001 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172368948 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133752575 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109229538 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162638771 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181365435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208903015 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171350351 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209532382 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202038908 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191764604 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095383752 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170121661 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185038752 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204288856 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153862479 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140893178 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151962202 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178864161 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156168104 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255979335 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170557026 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177551026 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205461467 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152139217 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132530218 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151200062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17927708 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154652725 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177483653 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147610779 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139980883 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162094551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103050846 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160579254 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213527398 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164860481 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189735157 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150903183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185549044 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129210509 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162724269 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160706191 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166880396 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081608436 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203752115 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206007851 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147990958 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168192272 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189919767 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132204486 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308315535 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236394236 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196751576 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139352577 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156459751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162209102 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164311774 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172986463 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180113318 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161497775 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189391132 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160785058 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136904968 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112940033 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150918143 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152774986 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133321186 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150355949 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179004092 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138255117 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190859416 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155804442 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15947469 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173986265 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150633624 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117660031 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150847638 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244622697 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184648577 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242157606 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150688238 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180447774 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208049648 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126730462 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105129383 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135451078 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179690945 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137457474 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192313319 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213451085 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201082451 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182393959 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206361753 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112920909 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121955447 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158909561 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169106794 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205060572 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149343534 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147230249 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231737134 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110883398 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134737167 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168441916 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290726497 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145897726 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196531709 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108692182 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280794894 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099996419 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132451547 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164929523 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235284075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110099558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179205682 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171388686 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162258688 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165546952 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15105665 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191679063 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23789922 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201127845 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213473749 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106089207 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158187638 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175373035 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22161368 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157568411 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112319311 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232567209 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196587138 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196895054 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143541352 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170069693 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16903825 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1593477 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216444121 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107586401 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235885605 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135441013 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193347938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15412961 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139510723 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178255781 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189396157 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14124979 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188483683 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21025295 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108231129 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135777714 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16775794 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17953458 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155824406 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129539352 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182631349 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126537168 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198352805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262621228 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134956871 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157106904 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119771141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137220661 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156415474 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159685363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140281504 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141515311 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229635266 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135104081 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192942051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229584437 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17245657 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175502332 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146608274 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694089204 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103867123 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223183466 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12165795 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235925418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153182258 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174568812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160623249 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169420672 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19524318 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162136483 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234169608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222382763 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181271474 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132749692 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158989011 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156896427 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145811818 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126211954 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169024152 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16155468 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146066031 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178865221 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192934015 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108782872 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140836728 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19939362 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14926174 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186331612 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180131316 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140416786 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173731153 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216322827 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106311438 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208215954 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209142384 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144161723 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14999857 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134091381 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149399472 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235236879 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126091407 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190152383 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213182041 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132481327 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195791431 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120771686 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222061353 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159291837 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187414432 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143641353 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159623964 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157535954 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139478635 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103233241 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158221526 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167986664 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151980424 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161692045 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165359 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196808048 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096769641 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144576635 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310796845 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179468765 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217526992 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137499575 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136906505 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163297267 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122101546 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205457352 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180641227 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137033573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10860383 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137435935 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129927105 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13674492 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155978753 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194213079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166645392 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23553216 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109948561 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282579768 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141875051 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155950361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090417164 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134647283 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151090801 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147301595 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15656234 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195057354 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265727052 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149700066 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106796526 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15010578 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125927217 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109611324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166034436 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166838947 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178304171 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146237945 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109449701 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156882349 seconds)
  done (took 82.908376022 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164698499 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132504428 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148287278 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20275677 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176956397 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270898355 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210007746 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255369152 seconds)
  done (took 2.630954895 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094839428 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147068236 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158288728 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133297287 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092837577 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119902559 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345482671 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134313884 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116962763 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122961949 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175912554 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094357898 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551934347 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092234725 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120320352 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108373096 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093389614 seconds)
  done (took 3.76718047 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.164293409 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.498663298 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.951848971 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194629577 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159988105 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118218978 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.709353563 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095603275 seconds)
  done (took 11.968573845 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116299178 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136579714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124603749 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152637427 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142102647 seconds)
  done (took 1.759988169 seconds)
done (took 124.209904442 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097767725 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128109139 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099455711 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13190294 seconds)
  done (took 1.523411916 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095084365 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071264772 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101310389 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075882208 seconds)
  done (took 1.418436809 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190941808 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169086308 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40282053 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071727919 seconds)
  done (took 1.580725089 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115112704 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133120149 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105340689 seconds)
  done (took 1.440114778 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106820253 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130097604 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104008588 seconds)
  done (took 1.423931211 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106751535 seconds)
  done (took 1.189445507 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108972901 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137904186 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109615002 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137366083 seconds)
  done (took 1.576481736 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099009293 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128035913 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110102299 seconds)
  done (took 1.418238205 seconds)
done (took 13.008386223 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104430619 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424179684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.447465489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118281451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722153097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415124193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032898175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147028834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166605242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094651809 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140079445 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67333062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023749652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379830914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983882842 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471907807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677513435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122062032 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1194238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095029696 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017387288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09311112 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122600159 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093402303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703708793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427052076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095757513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471492028 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093244398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12691863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38450975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123194338 seconds)
  done (took 17.182867028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096215762 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174596165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099000106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138203029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124022148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095462048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12745629 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093917729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180684745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122815494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110863289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121330932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127180915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095933467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142340964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09337452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12622275 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092657549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121898026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122417239 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113068363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120988087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094862976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121479232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094391512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136347663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123287255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094292219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121716744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100169633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128737358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095040819 seconds)
  done (took 4.837417891 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142021352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183839074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12868118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128355638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169406803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124792151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200018609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118887623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183714103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123398488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139726017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094269905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157787915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12382007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115443643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121267926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097434825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122141362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093474207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123322097 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140065499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094276163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122655157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094322512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123536759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108727401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124513752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120642101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094366187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127485981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099653472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123616801 seconds)
  done (took 5.159177221 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097571003 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12631117 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109363395 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138667416 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095928339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.1260943 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098055883 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12540224 seconds)
  done (took 2.007518167 seconds)
done (took 30.271253981 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111113948 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127133089 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107177733 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135411604 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103169932 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133183296 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091934671 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134514584 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134177775 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103566628 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137715305 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092946594 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123420501 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092424167 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13593313 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09845898 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133021994 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102423984 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134174149 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131909019 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094880469 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133443316 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103156551 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133307832 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104835802 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134255653 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13742984 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100676386 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122482459 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095212492 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124325437 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103763941 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125198315 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105699555 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12678649 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097547561 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124098854 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094798438 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133243411 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132842254 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100167208 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133231036 seconds)
  done (took 6.008187669 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107454186 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139659874 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105299747 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081666011 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117493172 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08082638 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138150376 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080390994 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11022378 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108372287 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074384413 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107063475 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080013094 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10180599 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077868207 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075541525 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108085093 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076528491 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076393142 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106307714 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079968994 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072886998 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108340352 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07868624 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075111018 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111026371 seconds)
  done (took 3.575701426 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10051728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135116241 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113313044 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184979208 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161746705 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100469487 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132397451 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13980812 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10968321 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120090326 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096872771 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149850257 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110806452 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130207693 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091943411 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13817771 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136033896 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094844219 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12819296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113176727 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138901422 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103406566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141466105 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133942703 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093180435 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123396237 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097793178 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135527219 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097934894 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131884984 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097245091 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124979309 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122831654 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105828725 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127678351 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09478827 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141664477 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104441013 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130948862 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121494936 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101422692 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121949186 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114197301 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161294656 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092396106 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129825943 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124201636 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1047433 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121771176 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111609375 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131097194 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092091306 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126210847 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092222637 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122949105 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106943769 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124839718 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095695746 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131856953 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128161592 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106617003 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125465545 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110620884 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122965169 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101144058 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122818272 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094205784 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121338373 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144497214 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095883995 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162872736 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094195068 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125010842 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102379445 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130415827 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129132339 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094407592 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137933231 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103058023 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12598044 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102901506 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126688814 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09582644 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141301518 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123793884 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096406329 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122654437 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100816639 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124071462 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094605986 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136859722 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093217162 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126914229 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111187032 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122466721 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12297475 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.0996806 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126615157 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093685649 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136187203 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099236799 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124418646 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132117593 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094442002 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124241564 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104065807 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127697647 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092869867 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127529921 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101129252 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124026029 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095187102 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127539606 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095178568 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13275714 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129494234 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099601877 seconds)
  done (took 14.881377546 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229315865 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217984089 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207482279 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.2952347 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137129762 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115910266 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.246697767 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.127373912 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124946993 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1612726 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172837802 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181655211 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171050522 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18177623 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171388465 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094085717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144476757 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164780729 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215902939 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259314057 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145122776 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101516314 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162781279 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160639698 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136964616 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133286552 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111048482 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135254698 seconds)
  done (took 5.819971696 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109274696 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156538262 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.0989766 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145622164 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150371235 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093716992 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129477311 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09498877 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136214899 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137289655 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093863499 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130584009 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101021736 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133232724 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123569018 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104229134 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132602895 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09566837 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126818219 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097859382 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133649882 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103063377 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128169451 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12275306 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103918209 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123137636 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088156904 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144006838 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122946071 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116896991 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122588468 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103051648 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137953227 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095336004 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124204392 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096448058 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126548676 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096673366 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126147309 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092411596 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124014505 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077878852 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123729391 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138548855 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101077141 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080380103 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130034979 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129534132 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095925057 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120833972 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097080566 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125651902 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098183131 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130498858 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097332289 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124389997 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097813508 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116257847 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101909709 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12553039 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085854069 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122349389 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099413261 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118874607 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102398567 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128237459 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093190265 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126230026 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098198407 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130521024 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095752206 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130931548 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091339652 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126295898 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096107745 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129360889 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126008371 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093209467 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123199364 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095483008 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075488089 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12414328 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074537854 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126850305 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092967612 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123475211 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09589681 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131342288 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139283641 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096399348 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133771415 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094889178 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12301979 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097313841 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114437403 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0980801 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141744097 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142870555 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095101685 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122615699 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108359846 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127184055 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.0932434 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107087128 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102826816 seconds)
  done (took 13.050603552 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132085868 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154535122 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125756829 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112879943 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157580889 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159488798 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101806335 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131129615 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096103023 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142935624 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094758814 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133012877 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094334391 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138577918 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158365232 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105074599 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12648647 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109094586 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129381402 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171377699 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112965979 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143361894 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110815502 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124428271 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129289043 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111086026 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162642751 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108428916 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137795685 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142694773 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109162706 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161858444 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144958722 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099750623 seconds)
  done (took 5.503893626 seconds)
done (took 49.930316389 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.21711914 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.433541726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18732209 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.112865621 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.226885096 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215534115 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199868959 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.186450547 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.739272479 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.18840183 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.456678504 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.753827259 seconds)
done (took 60.03524839 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.209570706 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.341017898 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474379465 seconds)
  done (took 3.928942125 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.723808414 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.125756286 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.450835914 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188873792 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189382829 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485040535 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.832743267 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.525525928 seconds)
  done (took 27.910711746 seconds)
done (took 41.888053008 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.187959432 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.261046267 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223273239 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.169767759 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301487019 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213953421 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.557123918 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.222400115 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.206908495 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.167404141 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.217248589 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.191548459 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.206285889 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.527983294 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.191597857 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189999161 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.198229717 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.731243359 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.595244246 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.195837636 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.195526178 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.23916477 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.211347392 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193167752 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.280402804 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.203815277 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191975263 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.215069266 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.784894102 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195054655 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204837411 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.752311415 seconds)
  done (took 190.539851285 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191969204 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.201236854 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.287404621 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246247939 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.7099215 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393475155 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340578569 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.903543803 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209266729 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.19279604 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.515553709 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.192625456 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.569133313 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164242106 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220485428 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.260670919 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.426011477 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.546915445 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229664725 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357739091 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21554186 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.439584159 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.342288601 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.444755995 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219473941 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.211565593 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206959933 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.214274361 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.38590638 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.354586867 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.251371078 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.210706251 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819212727 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048391088 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212560352 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219899129 seconds)
  done (took 150.072870262 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191273836 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19245112 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193831753 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225858197 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193382931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.77239531 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780211047 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.709928415 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.568667009 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.611575108 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456193681 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194152212 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194032323 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288739925 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207732948 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195009484 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210388042 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239155172 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197122125 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195882095 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777262007 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211135542 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.178574577 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.391837267 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212161385 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228079273 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585956696 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194953171 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22770068 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528340097 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244264216 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196406242 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.593137308 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.4644741 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308260822 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19766707 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227905008 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195519994 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477187439 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196565834 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195695992 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.198528418 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.196071127 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.195557265 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.775135159 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200390519 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.150243102 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898410615 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199492591 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197145764 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.196289426 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.474418449 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.911089748 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.216022374 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195949722 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200269032 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197530973 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197034956 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228930988 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.515882038 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.2931742 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21483023 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.197268366 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200230825 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228943443 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197251972 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.426880516 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200821035 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.77589896 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270606205 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303478435 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78234966 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200240426 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296808924 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319055333 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198107757 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197771253 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197899988 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197409034 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310089604 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199027576 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.610303877 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375513381 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21553864 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.614286287 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.299585786 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.197853542 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60617038 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20232773 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199323515 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947773014 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295889824 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199094131 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197878329 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198941781 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.613672366 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784676994 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479518655 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202160773 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.527797583 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202660107 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.630641649 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758041945 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.863117846 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19856867 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313684851 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.376252757 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218243836 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199710519 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.620184758 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203828508 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25850479 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200675541 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597673061 seconds)
  done (took 365.738595521 seconds)
done (took 707.468022225 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.788353786 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.779825731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.889069784 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.768338845 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.736685025 seconds)
  done (took 10.085290377 seconds)
done (took 11.20994246 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387053372 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387089836 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26177252 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388802409 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232789909 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40534118 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.367338529 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221116299 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301541822 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284082416 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301881635 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253207548 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234222023 seconds)
  done (took 18.151972518 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515365857 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505183524 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264071166 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504640992 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23943608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515315611 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401062916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.410560769 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419415216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233767628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213142464 seconds)
  done (took 16.347909864 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517414329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536496072 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268769139 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519963872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242143971 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542838502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409428851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.442425696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416509455 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23370639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21413732 seconds)
  done (took 16.469267638 seconds)
done (took 52.095275696 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210290718 seconds)
  done (took 2.335704815 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24684522 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412719893 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231140055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.217774665 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212725391 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212850297 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216879428 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21190478 seconds)
  done (took 11.08966094 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211170404 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208438835 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210603373 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208395001 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211713579 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20805733 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20953239 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206874859 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208722043 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210516916 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.21003671 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208786161 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210917114 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209937618 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208484575 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211180403 seconds)
  done (took 20.481754509 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210374352 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209580021 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210090977 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209585757 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20915362 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209870878 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210858679 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209349752 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209302557 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209638861 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210766956 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210117289 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210683803 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209574464 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209697947 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.2111224 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210374348 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209906007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213991066 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209316427 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211175948 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210943927 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210718081 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210659816 seconds)
  done (took 30.176875584 seconds)
done (took 65.210008948 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.821864055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.862645442 seconds)
  done (took 6.813084316 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212211202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.214126844 seconds)
  done (took 3.556545612 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213490021 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211487873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211991389 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211966543 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213027377 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213382677 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213018781 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212270085 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212991217 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212808479 seconds)
  done (took 13.256072623 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212718669 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213371267 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21146926 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214053566 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213316859 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210728017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213187083 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213367802 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213880728 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211206878 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212872857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211363797 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.214247388 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210991878 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213795562 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211435433 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212166988 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211128391 seconds)
  done (took 22.954868794 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21441306 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21405725 seconds)
  done (took 3.559055032 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.211698591 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212326615 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212200212 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212035795 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212419976 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211575156 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212206749 seconds)
  done (took 9.614822067 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.21540778 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384480005 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.478940558 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.839381146 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217806371 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220493199 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055483218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220472313 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220886163 seconds)
  done (took 13.984094437 seconds)
done (took 74.86871583 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.238394593 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.225206619 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.488039541 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.211997648 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.2281844 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.508959735 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.221333668 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.334904859 seconds)
done (took 37.589603105 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.22928481 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.187844628 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.01956547 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.206671658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.282123648 seconds)
  done (took 18.829614572 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.244300096 seconds)
    (2/2) benchmarking "read"...
    done (took 1.54509275 seconds)
  done (took 4.922300745 seconds)
done (took 31.114663851 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219336556 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216401189 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.215167583 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217573171 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.214038203 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214863739 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.218057894 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216477015 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217370967 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.216740638 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.217693471 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217823608 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215381685 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213099158 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216417708 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215464293 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215536794 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215138615 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215280558 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215012478 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217755438 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215326486 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215480587 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217643536 seconds)
  done (took 30.322249392 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219098449 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217239337 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218282894 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21867233 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.215930851 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.219866399 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21892939 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215477892 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217609561 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218544317 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216177108 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216342968 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.21880447 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216610666 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218692841 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217811011 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221043685 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214981224 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219977914 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217360542 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21983541 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217095994 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216622014 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218827998 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217119421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216561599 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219549546 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.217465863 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21952733 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216318198 seconds)
  done (took 37.670758084 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224468989 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225724027 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219342875 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220864721 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.218409769 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.220516369 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219790762 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220006952 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218998014 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.219232301 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219822131 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220616504 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220210191 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.219501613 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219639906 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221848603 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221120409 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219971913 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221293991 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.221054037 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.220897846 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.220242461 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221408096 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220150924 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220605956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220576088 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221090379 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221885691 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221344493 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220439404 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221375029 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221153861 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222012749 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221378863 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223315532 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221939027 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227054604 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229600347 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222236679 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.2217067 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22277595 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221470439 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.222865163 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222564186 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222193112 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223094725 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.221862382 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.22278451 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.222625612 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223095388 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22205187 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223710265 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2247032 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222794262 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22412475 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22337494 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223770891 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224447451 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.224169911 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223308098 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224408438 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224898347 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224313783 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223849678 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225333212 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22436257 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224251314 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224937386 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.224530017 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224307007 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.223620046 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224978898 seconds)
  done (took 89.145630226 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225217642 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222543172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221488516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22301618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222539688 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224845564 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222251138 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225304971 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222140822 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22616671 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224597547 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223696249 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221892925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22494438 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225748758 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222345413 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224622945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222419261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.224646458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225494706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226487799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223037141 seconds)
  done (took 28.067296502 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225806192 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228789125 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224082398 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226042834 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224603472 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225629054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22575908 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228866836 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226188076 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223196584 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223833199 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226572339 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223891638 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223054331 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224502666 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223604818 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226615306 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225694228 seconds)
  done (took 23.198277833 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223785916 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224774918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227095017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224293395 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224246299 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227062542 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223936061 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227746448 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227742935 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224100627 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229114707 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227323136 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226685672 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225874078 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226894872 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225182901 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228057071 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224082107 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227936167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224434586 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224331569 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227676547 seconds)
  done (took 28.115063776 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228919115 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228682916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225087821 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225109752 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.225221257 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.22902713 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.227601168 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225631526 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228635454 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229129444 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226881713 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22893519 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228104858 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227281401 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225819265 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22605057 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229255177 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228722362 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228737572 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226644304 seconds)
  done (took 25.694176327 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229519416 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23039237 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229933071 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2292844 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230038506 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230201501 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229596749 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229978258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231741734 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229675408 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23024966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232119961 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230438649 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230921695 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231066102 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230858845 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230322775 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231870607 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231106037 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23142784 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231304454 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230768781 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231898098 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23254319 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23139121 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231938785 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232139699 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231760497 seconds)
  done (took 35.60972462 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231807892 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231459244 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229207363 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229785713 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229887834 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229421138 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23065832 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230928346 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231642937 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230207211 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.232698621 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23197946 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233207286 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232106842 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231971452 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23365633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232173004 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229987961 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230025471 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230254424 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232664614 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232924838 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232941551 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229752204 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230254809 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233034614 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230959094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230678885 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234365638 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230700957 seconds)
  done (took 38.089641286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251265546 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252100651 seconds)
  done (took 3.652184073 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231089724 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233421067 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233647691 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231051514 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231808632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234523132 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234892875 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230681019 seconds)
  done (took 11.010482261 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234136697 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234121859 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234349302 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234251265 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236436346 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23582575 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241191682 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254050611 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235542499 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236454245 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243071769 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242230986 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23741199 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235244512 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.23573699 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237281179 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234505035 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236322239 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234980934 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235931851 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235292232 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23784297 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238347744 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232543413 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238234071 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247205354 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260568666 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236091256 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236226118 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240579732 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237110611 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23272552 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235810864 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23730504 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237778656 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.236567314 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245219191 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256379365 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.24262113 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257286636 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238181855 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233358109 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238502256 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239075691 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23883556 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237694828 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.237279097 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235349229 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238123346 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241417551 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242506148 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238599504 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235606564 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24165027 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238676404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244951017 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.256618851 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241584219 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248630608 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.248538432 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272280796 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263875142 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240791097 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23853471 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250560678 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262877535 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247714382 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.256194959 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235959923 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23920504 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245624825 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272378995 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266396785 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239195138 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239362518 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240588464 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240819614 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240247923 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247381295 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263417387 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239660736 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246689292 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251120567 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263709598 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239896165 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24041409 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241033633 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240102772 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24256168 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250775696 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.260741082 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241203156 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240816282 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24191039 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241482635 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241819479 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240525975 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241579829 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238947149 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241746282 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239987446 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245023259 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249646446 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240228387 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241532667 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247911268 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263233264 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241480093 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248003169 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241735093 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241840593 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244075543 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24860888 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238455061 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245398533 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251143751 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241707648 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243414628 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242547057 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242978518 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252766619 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268692716 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242058442 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243050561 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247545233 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254442552 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242488655 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246309909 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242974062 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239933567 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240776919 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2437804 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243973157 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.243932285 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24241859 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24464009 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.24115904 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.242958469 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.241990243 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244818754 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245429509 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245839847 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244960983 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246514467 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243854855 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245407675 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.248962875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264274121 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.24543311 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244666247 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241676185 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243343167 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24630842 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244381748 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245216469 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244069262 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.245212397 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243766774 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245334908 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246533505 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245104427 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245955146 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249769259 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243852608 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247221644 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245996672 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243083297 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245363053 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246683984 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245768541 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246165603 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245065255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249460428 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252902909 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246180896 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245902898 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247729167 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246210203 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246314616 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24602887 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249692241 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255050451 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246328437 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252453326 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267191504 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246696908 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247773084 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247098251 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.24584573 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246894225 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.249543682 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255541884 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25914833 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273588832 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248936609 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.250871224 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248131377 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250741312 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250339382 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246519305 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247548085 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24719198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248469503 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246847571 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249579835 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.247700487 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248037629 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248418658 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247171899 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248557013 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248280551 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249284723 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250553335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245118993 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247200434 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247985618 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.248663237 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24595647 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248495474 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248782045 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249305401 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249124665 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254419808 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246858583 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25028496 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251254136 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249542446 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249592545 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250868524 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251682306 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249346852 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256153876 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270037151 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250312314 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256746568 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26998294 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.250400169 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253148811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250528183 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247692312 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253249029 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259955897 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251504496 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251738043 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251996035 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25092279 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250063169 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257300881 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26992265 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.251300847 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.251446024 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251817466 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248681402 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252206762 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.25236872 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25140701 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253468577 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251532804 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251499745 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253373107 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251546841 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251608394 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251528001 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255411822 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259540545 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256614602 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251881765 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253885928 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253202514 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255256426 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253241887 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25265653 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251557877 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264394117 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2775824 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257752968 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.273937022 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254006102 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257882532 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.273676455 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257267021 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254446406 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252929288 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254145186 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.253593243 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250460574 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254211817 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253450033 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255099061 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254513564 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.258179405 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253829423 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253531499 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253487218 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253451723 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.254019982 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252802778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255287531 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.255875761 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255661256 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.253488599 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254523625 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260534068 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273822479 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254909856 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.254323528 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255164723 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254341587 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255327648 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254304243 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257189732 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262589677 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259039008 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263598951 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.256882013 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26399202 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.255129655 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258950585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262681818 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.253436373 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.253545746 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256622422 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256145716 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261939285 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276351396 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257646598 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26048971 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25603657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.256429341 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.2568921 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255911897 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257834222 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.256207721 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264082946 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276225441 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.260203772 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259621216 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25389339 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.255669936 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257171275 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25590865 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260285259 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25704057 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257381114 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25729413 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257333098 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.257428542 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257279633 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.256663121 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.254182922 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257954019 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264085113 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.279786282 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261505396 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25893517 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264641616 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279242749 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264591535 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277287003 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258927599 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258305244 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.257250827 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260730568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258061006 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260277677 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258588867 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.259702775 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.263082 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258551713 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.260885279 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.259499752 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258950973 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259003696 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267759051 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282680001 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.260806078 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263445267 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256274021 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260767785 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.264619395 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.25930285 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257504685 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262913588 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270725653 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267877813 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260013302 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.25998408 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260874126 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260808261 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.259725635 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260661314 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.259081036 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.261243674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261680016 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.261344473 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263936344 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.260324142 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260788855 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262473283 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.261656818 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271273484 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.281476198 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262389629 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262336811 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.262860341 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.260931511 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.262307761 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261290734 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261284402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260670966 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.264330136 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268430807 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268048796 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.264693918 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260388754 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.261108233 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.261226896 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262125269 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262451779 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.261583236 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261519133 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262675142 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.2618476 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.262020993 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.262505418 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.262787129 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263631109 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262779799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265712361 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.270154599 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263545876 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260978154 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.262139091 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263397816 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26186923 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.263822955 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269291728 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288028387 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272934462 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271590534 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266669904 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263574094 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266605815 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271474565 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262664565 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.26479504 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.264334974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.263833165 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264703783 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266173128 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265278792 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270360209 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284743793 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26386386 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272892133 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284230277 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264122233 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.265416566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268703461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265103255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262389726 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.265271027 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.264095501 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271520997 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286265022 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265263169 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266756566 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264236787 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266574328 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269392866 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265664635 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.265858019 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263213843 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265984929 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265544696 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266378622 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263238818 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265091924 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266273163 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.268894942 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273293954 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26367132 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267034214 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266163754 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.265925272 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268064097 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265756162 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263585379 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.265799298 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265545623 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26612511 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266635776 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26850424 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266197321 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268269842 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.26623487 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266906319 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269290105 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277274264 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.273826473 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263480952 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.266612664 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269080756 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.269231843 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266465408 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.267437808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269034861 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267637036 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.267873953 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266647927 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.266991528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271766001 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283275508 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287531755 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268447965 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268579252 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270840277 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.268271491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266279667 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.269832231 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270405081 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271463958 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275843807 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.26930841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275226634 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28844359 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269459526 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272940032 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.272628649 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276213147 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.271561614 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269033472 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.269047194 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275506683 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284797899 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269802682 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279457132 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300109739 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289777979 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270436239 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.270052053 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267999092 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268385561 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271266489 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269958909 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.269669463 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270799018 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270404678 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271016099 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275493921 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271358878 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272451235 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.270220633 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.270088392 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271791026 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268324578 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.271334003 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270969106 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26999105 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.270359391 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272204279 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271875994 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284657425 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299617355 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.271917724 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.272364648 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269373802 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.27475002 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.274823549 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282226833 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280640192 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.27109017 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.270411881 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272112688 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271542794 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269326228 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272421383 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272820677 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270463804 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270680985 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.284982443 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299767116 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276395989 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272367167 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272766344 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.273749631 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273797854 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272456411 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271897789 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274232733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275663324 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275649903 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273497108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.272538341 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.277632439 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279184799 seconds)
  done (took 750.422655235 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269882458 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270905208 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271544653 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270705077 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270680674 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270437319 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270956283 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27153477 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270916096 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271250762 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270632426 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271158778 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271847046 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272094564 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271721421 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271793952 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272664649 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271408199 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272939252 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270750765 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272733714 seconds)
  done (took 27.884135633 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274348755 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.272660882 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274020564 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27480303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272471669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27443741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273395293 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275063829 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275002113 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27360411 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277254843 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275192056 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272728258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.272998895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273357242 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275605425 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276185838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273880201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27599356 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272805043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276339641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274531106 seconds)
  done (took 29.223618893 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.276245422 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276818813 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275994519 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.273306055 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2767607 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.273711405 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276645138 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.276748113 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276984801 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.276314486 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.276083773 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.278478735 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283568177 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.282086488 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.278313769 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.276866264 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.423563255 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276465567 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276665222 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.276891731 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.273636662 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281660145 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.296349468 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.276593247 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.277307382 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.27702645 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278478162 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.27752498 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277221087 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.278051248 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.280395271 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.277426818 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277419512 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279912216 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.276953671 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.279168287 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281242169 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277974086 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.274352061 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.277607701 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288069942 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29723788 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279108344 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284206109 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299387202 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278565378 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281377666 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285983482 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.276732317 seconds)
  done (took 64.0246531 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.278755765 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279206047 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276336536 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278617438 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.279039605 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.279904421 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279227106 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278557817 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277431038 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.276354818 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279675111 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.277468489 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27709633 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.279664587 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280452519 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277302107 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27732833 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277591589 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278869154 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278080368 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278820364 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.280314368 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.281419486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27771773 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280018272 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278702219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278673897 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281155384 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279124197 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.278583405 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281958884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281728951 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282187307 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279478378 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279543101 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281367779 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.281768653 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279414157 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281153743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.278725605 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282483635 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280887576 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281715849 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282199072 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280289962 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279935336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279617745 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.27906649 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279764783 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282055232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.282253657 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279267656 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282345571 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.281052016 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28196719 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.282342086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.281658464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279894515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.282813071 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28083545 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.28018863 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281946751 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282052894 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.281812273 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283519285 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281263119 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.280318011 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283404836 seconds)
  done (took 88.237510764 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28169721 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28177499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280896043 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282309229 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282512236 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282336477 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283394898 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28302039 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283049311 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282778971 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281760093 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282989421 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.282601938 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283371608 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283154941 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283430028 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283011994 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282401682 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282920603 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282166667 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.282325308 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283668258 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284739694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283212895 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281751024 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282289903 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282154722 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281464484 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282698175 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283558745 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28429152 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.281842197 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280713532 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281231282 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.280803553 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.282108833 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281940584 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281349831 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282961061 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280725307 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281157004 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281797943 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281989764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.280252578 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281059328 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28175925 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282775199 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280483378 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280452074 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28166072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.280335792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281419184 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281260824 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281998744 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28012721 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281574035 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28075593 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281245029 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281375791 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280839501 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280557322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283033665 seconds)
  done (took 80.680862195 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281460646 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.280809311 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279499859 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.27932294 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282448724 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280350001 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282213012 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.280736523 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281941213 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282618627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281564765 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278769256 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278886538 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282549131 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278711457 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279034184 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279650189 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278519022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28166395 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280243367 seconds)
  done (took 26.804017627 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279631815 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281665232 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.279240648 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279898467 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.282378139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.280694406 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283377227 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281980473 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281274097 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282558361 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282888164 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283183819 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280166486 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280844117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284237557 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28057761 seconds)
  done (took 21.696846531 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.281105832 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283298344 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283049554 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282313405 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28051709 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280585778 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284180058 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.280505866 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.280722039 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284290818 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.283705913 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.284017242 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283598375 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.283176019 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281500387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284394007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281778663 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.281086805 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.286013158 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283223249 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282145344 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282344606 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.28503937 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284782807 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280462992 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.282356677 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281514849 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.281982594 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.281800605 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.285904264 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283022506 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282541538 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282611963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283226665 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285004874 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282070176 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284848083 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.285686141 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285497236 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285120424 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.285251426 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282486094 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286230923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285269328 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283742335 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285481231 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283039729 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283646785 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282263424 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284344844 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.285973875 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285712721 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.286092656 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286384626 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.287361905 seconds)
  done (took 71.790203157 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286354595 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286063487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284359656 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287092683 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286261173 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282803241 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286937186 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287029937 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285352647 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286015458 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286371513 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289037251 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285951306 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286734914 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284910501 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286833468 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285164805 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28471651 seconds)
  done (took 24.344017788 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28643875 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285776095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289222293 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286610774 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.28532194 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288173216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285776244 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288966685 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288582914 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286265952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285873542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289323082 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289311376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.290114936 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286406887 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285165776 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288843527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288833444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286232821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284892588 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288556333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288735823 seconds)
  done (took 29.521270836 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.288488868 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.288014208 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.287866663 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.305864498 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.307783141 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.311597403 seconds)
  done (took 8.98805064 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2972389 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289566228 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287481267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290742449 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288653602 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287622211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286624258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287083187 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290480874 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286713323 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287784582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291144416 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290326144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287205697 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289299505 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291377114 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286718536 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287245507 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289286117 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292557697 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288541808 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290957269 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28744631 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289178021 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288564821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288359763 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292241635 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289766719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2869136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290414116 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29100552 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288591047 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290603476 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289579202 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292269598 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29240187 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28797336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292051949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290959809 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291586228 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292008624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291076114 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291707024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289905777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29229387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289128904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289117783 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289465954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289117113 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291776709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292604396 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289098366 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292345821 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292894602 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292598528 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292553745 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290836415 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290096424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292911518 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290532544 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290152624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292640725 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29011795 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291690188 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292444923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290068139 seconds)
  done (took 86.377927875 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289031392 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288864897 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28876712 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291472547 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290717419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290150108 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288712701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291196046 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289132428 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289768198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29275503 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288703138 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289729452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289451504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290440199 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290653748 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28916175 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290777384 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290731332 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294505053 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290384082 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290842708 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290885504 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291721816 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291587928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292583861 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292314977 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290235267 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291540201 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290910914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291117692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290044386 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291022521 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29161336 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291919595 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291375209 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291832292 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291643554 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291782209 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294313872 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29107389 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294673047 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292872104 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292025571 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292053708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291516873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292108153 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291326355 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29317277 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293271508 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29253352 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292379969 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291957995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291222183 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292155048 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292979137 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29279791 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29378948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293138464 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294534108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293659173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294059473 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296829566 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294088877 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294829699 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294567697 seconds)
  done (took 86.458825337 seconds)
done (took 1748.16424645 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45930464 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410103804 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294786218 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.296281362 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29466404 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.297342891 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.298357934 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295484321 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294477048 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.294390872 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.293969784 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.483352806 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.291978843 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295186878 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295755023 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391855954 seconds)
  done (took 42.493543916 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324449974 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.303994283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418035409 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322781569 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324578016 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.492708131 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.358449176 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301423334 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.479229627 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.344101194 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.90239711 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.324602518 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.3012022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.443095602 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319465456 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493533599 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.55570086 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.907814133 seconds)
  done (took 30.125285825 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.772699697 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.32633605 seconds)
  done (took 9.307553514 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321463554 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.301756089 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302492026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.30018188 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.29307307 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.311146698 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.301200447 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.298661459 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.138048002 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.437432928 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308408751 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310928314 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321744395 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303568352 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298811625 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340002813 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.456329653 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.299012935 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297659676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.307863476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300779549 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392432879 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.343128913 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300185481 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432049892 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.110364641 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.305851461 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.3090559 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.434529296 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299726494 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300552641 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.300656354 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303625541 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.935029581 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.835648463 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.316498929 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.326812566 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.310628816 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299374404 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.466097877 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302281962 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308526287 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.294677206 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.819473281 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456704532 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423662609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.620409681 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32610746 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.302976024 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36854515 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.302670748 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30269938 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.33130583 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.093134165 seconds)
  done (took 110.343079629 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.30765349 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.685318733 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462418284 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315253644 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994658667 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.034039268 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318412567 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.602033897 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329090917 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296086629 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.586567889 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824398454 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318347848 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.336459742 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.497075136 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.304469599 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295955034 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.105583152 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.316380288 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.301950037 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802217957 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298962114 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315499362 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.42962349 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330338066 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.747443231 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.720025772 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.798459913 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313869154 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292677597 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765429505 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31739677 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.341644972 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.296626339 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.563294013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.654511213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646247348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.312306047 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326748854 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293174665 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330999047 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742222314 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649813198 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309856439 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309855854 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760080939 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316433205 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300515835 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.296987453 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496825831 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.225158717 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293268888 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.634684365 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293326147 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.577529247 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.381922886 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36345222 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777964086 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312588306 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.439103966 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350878793 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.289166293 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289714227 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290300893 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297398821 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.634731807 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685926736 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.290248143 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.620068047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.754645672 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.3244479 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804346435 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.083977396 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289715151 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.340572519 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.288167134 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.870853423 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762739193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.35251394 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287597953 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.605563174 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.309541138 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.561687428 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303536258 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289364898 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799529418 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.293441798 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.287993417 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297482115 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.286481914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.955719145 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288819895 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.54418769 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.315599114 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.287381447 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.284670441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.318089254 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285599525 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301026895 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.29285954 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792960739 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.311148799 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.386385226 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3017749 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287907777 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307664928 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.286732271 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.287227925 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501343475 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.733043461 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.308654293 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286112968 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.286592784 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.286727593 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.437800591 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.289416301 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.575298253 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.307762745 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286453197 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309626041 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938752163 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343004099 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285781001 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.289673385 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.166877316 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.49322966 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302956073 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.287703699 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288508975 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308412999 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.417619592 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305220719 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.361181567 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.288828734 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968313465 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3469648 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.291866095 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.873899562 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297736928 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.061991383 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310136285 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.287311534 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.572716043 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.544405469 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.559174881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292107087 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.309637998 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95798722 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.330480358 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424446489 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305503977 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.395941178 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.484696781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393305934 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290654398 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.892531606 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.289826108 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498641381 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289786273 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580025976 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.75749838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312288213 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.295582993 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973084857 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015372389 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.938011812 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.289316294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.553909187 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.258758734 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.773069408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.29119517 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29094356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.767428712 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.292829001 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.297739381 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291152507 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.290613941 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.446044362 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.461647253 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.910546251 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.294904979 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.723158155 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.37537313 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290390112 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.30260387 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292634104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.638146688 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.388824743 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.291900622 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.324593994 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.289710455 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.295405428 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745547631 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.098131462 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.297097995 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440960031 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.896094262 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.311783337 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292502495 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.875574723 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.690100253 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783367803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.333948383 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.580211527 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.322620009 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.329245315 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894811328 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336434467 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745802199 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315133308 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.291887981 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865584685 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.313500935 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.392596884 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.292897334 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293909854 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813261927 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314140813 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.295818642 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.428743141 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30900841 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561994535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.292963489 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.298359387 seconds)
  done (took 1101.214248581 seconds)
done (took 1294.68963827 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.293512155 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.300103924 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.278225268 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304804543 seconds)
  done (took 26.384911772 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304295978 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.3003928 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301809449 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.299665574 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.302799207 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.301842938 seconds)
  done (took 9.019284116 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.329625412 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299790269 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299638279 seconds)
  done (took 19.138892089 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.491208174 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.516615262 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.606111399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.431224624 seconds)
  done (took 10.255044774 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.305307732 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.306668663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.305242263 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.309834818 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308185776 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.312042264 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.309806228 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.310229072 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.311805212 seconds)
  done (took 12.993768241 seconds)
done (took 79.001174589 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.486824388 seconds)
    (2/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.326623732 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.306593187 seconds)
    (4/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.282776842 seconds)
    (5/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.480043565 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.325989642 seconds)
    (7/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.401008681 seconds)
    (8/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.522315129 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.543684134 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.420632936 seconds)
    (11/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.326466184 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.340967872 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.326899671 seconds)
    (14/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.279723819 seconds)
    (15/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.302070851 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.170874757 seconds)
    (17/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.365576806 seconds)
    (18/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.384173804 seconds)
    (19/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.332566394 seconds)
    (20/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.283992621 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.996927017 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.281996432 seconds)
    (23/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.288599988 seconds)
    (24/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.303536715 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.392905709 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.305417037 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.694191791 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.452563247 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.328702005 seconds)
    (30/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.794370734 seconds)
    (31/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.933218408 seconds)
    (32/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.422631609 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.17475495 seconds)
    (34/286) benchmarking ("sort", BigInt, true)...
    done (took 6.301830353 seconds)
    (35/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.34438851 seconds)
    (36/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.073532942 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.99531699 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.407367426 seconds)
    (39/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.283049937 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.324854036 seconds)
    (41/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.784779583 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.421146333 seconds)
    (43/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.330577129 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.329404882 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.563683423 seconds)
    (46/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.282147421 seconds)
    (47/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.284338596 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.50183391 seconds)
    (49/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.325591693 seconds)
    (50/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.328084158 seconds)
    (51/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.286512318 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.362467104 seconds)
    (53/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.283561352 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.719372627 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.408057729 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.377970997 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.827059264 seconds)
    (58/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.28384805 seconds)
    (59/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.323735909 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.306401675 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.650680325 seconds)
    (62/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.248151116 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.408040996 seconds)
    (64/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.754875489 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.283117322 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.427991043 seconds)
    (67/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.33140313 seconds)
    (68/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.653277873 seconds)
    (69/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.326854239 seconds)
    (70/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.78940188 seconds)
    (71/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.412058594 seconds)
    (72/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.678272014 seconds)
    (73/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.500574294 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.92309976 seconds)
    (75/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.73709751 seconds)
    (76/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.284522137 seconds)
    (77/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.286185473 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.457359887 seconds)
    (79/286) benchmarking ("sort", Float64, true)...
    done (took 6.306298698 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.333451835 seconds)
    (81/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.509731944 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.314359398 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.332688317 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.289306675 seconds)
    (85/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.512642633 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.151576638 seconds)
    (87/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.413238633 seconds)
    (88/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.653505694 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.288321576 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.332735299 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.898015951 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.731721831 seconds)
    (93/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.34028964 seconds)
    (94/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.895840428 seconds)
    (95/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.556628847 seconds)
    (96/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.017289538 seconds)
    (97/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.285901174 seconds)
    (98/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.649946406 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.277596137 seconds)
    (100/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.500659764 seconds)
    (101/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.334462015 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.002035277 seconds)
    (103/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.047479726 seconds)
    (104/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.294613842 seconds)
    (105/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.293585451 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.522692909 seconds)
    (107/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.072691176 seconds)
    (108/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.407984649 seconds)
    (109/286) benchmarking ("sort", Int8, false)...
    done (took 4.326040979 seconds)
    (110/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.307223277 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.337641893 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.683080587 seconds)
    (113/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.667635861 seconds)
    (114/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.88662483 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.375737963 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.817706785 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.352526461 seconds)
    (118/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.287189794 seconds)
    (119/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.669648331 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.619433382 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.368297389 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.586095212 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.667963288 seconds)
    (124/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.324926409 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.180316675 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.020142702 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.572133438 seconds)
    (128/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.123223792 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344326271 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.439450721 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.121675778 seconds)
    (132/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.43301181 seconds)
    (133/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.65496218 seconds)
    (134/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.401995433 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.043113895 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.33531594 seconds)
    (137/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.290531168 seconds)
    (138/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.295339652 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043306591 seconds)
    (140/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.437851275 seconds)
    (141/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.359472408 seconds)
    (142/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.520021443 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.332776622 seconds)
    (144/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.376187708 seconds)
    (145/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.333168686 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.434270066 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.399666314 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.367423988 seconds)
    (149/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.30707395 seconds)
    (150/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.412556944 seconds)
    (151/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302148912 seconds)
    (152/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.465469444 seconds)
    (153/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.375432642 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.127924692 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.293285349 seconds)
    (156/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.29571449 seconds)
    (157/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.795042109 seconds)
    (158/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.312721213 seconds)
    (159/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.426068353 seconds)
    (160/286) benchmarking ("sort", Float64, false)...
    done (took 5.556663213 seconds)
    (161/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.658163259 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.78681247 seconds)
    (163/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.325505993 seconds)
    (164/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.662247616 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.133151953 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338915921 seconds)
    (167/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.292550123 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.809718351 seconds)
    (169/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.329941104 seconds)
    (170/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.886643918 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.360340908 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.145670173 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.313191388 seconds)
    (174/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.331483455 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.194353705 seconds)
    (176/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.490054042 seconds)
    (177/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.541161767 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 5.412145141 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.387243953 seconds)
    (180/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.032752637 seconds)
    (181/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.296971723 seconds)
    (182/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.532602127 seconds)
    (183/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.325670216 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.314613818 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.048427787 seconds)
    (186/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.777097799 seconds)
    (187/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.294496083 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.951603247 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.972310019 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531745721 seconds)
    (191/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.103529464 seconds)
    (192/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.313187882 seconds)
    (193/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.346158834 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.326218424 seconds)
    (195/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.302555878 seconds)
    (196/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.401719293 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.658895171 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.8761757 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.331269684 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.111863617 seconds)
    (201/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.978475179 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.055874991 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.341846315 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.296286012 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.358037816 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.716873514 seconds)
    (207/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.491069529 seconds)
    (208/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.341766173 seconds)
    (209/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.295732826 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.627243969 seconds)
    (211/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.911474614 seconds)
    (212/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.642871853 seconds)
    (213/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.311977034 seconds)
    (214/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.306946438 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.339374964 seconds)
    (216/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.257583357 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.920814212 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.661878971 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.343295089 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.29603578 seconds)
    (221/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.40653869 seconds)
    (222/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.314977725 seconds)
    (223/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.102539089 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.302299943 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.695531386 seconds)
    (226/286) benchmarking ("sort", BigInt, false)...
    done (took 6.323029327 seconds)
    (227/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.302596933 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.347160282 seconds)
    (229/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.320274064 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.569798602 seconds)
    (231/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.29853906 seconds)
    (232/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.110710021 seconds)
    (233/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.469847367 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.352768744 seconds)
    (235/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.576132019 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.52267593 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.712167461 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.34464792 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.448348873 seconds)
    (240/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.74457254 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.2095347 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.704806555 seconds)
    (243/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.305340319 seconds)
    (244/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.651969499 seconds)
    (245/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382624747 seconds)
    (246/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.09130947 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.954726342 seconds)
    (248/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.435132551 seconds)
    (249/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.07098423 seconds)
    (250/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.577490199 seconds)
    (251/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.442902571 seconds)
    (252/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298468678 seconds)
    (253/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.436544766 seconds)
    (254/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.867836947 seconds)
    (255/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.676455506 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.299683021 seconds)
    (257/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.426416837 seconds)
    (258/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.497768849 seconds)
    (259/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.342524524 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.423583235 seconds)
    (261/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.442768887 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.324561634 seconds)
    (263/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.141211027 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.402388222 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.147283445 seconds)
    (266/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.3310035 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.402970057 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.430306713 seconds)
    (269/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.524808479 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.1701103 seconds)
    (271/286) benchmarking ("sort", Float32, false)...
    done (took 5.31111746 seconds)
    (272/286) benchmarking ("sort", Int8, true)...
    done (took 6.33552676 seconds)
    (273/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.428969546 seconds)
    (274/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.320008841 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.363374972 seconds)
    (276/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.679091824 seconds)
    (277/286) benchmarking ("sort", Float32, true)...
    done (took 6.326821043 seconds)
    (278/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.44345012 seconds)
    (279/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.335870523 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34764004 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.724470815 seconds)
    (282/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.32403698 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.3467496 seconds)
    (284/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.786991416 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.309327839 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.324575261 seconds)
  done (took 926.539092151 seconds)
done (took 927.755356829 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.353807553 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349895406 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.329796186 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.352588371 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.44219292 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.355636124 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.340292726 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.333743869 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.379626628 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.381735961 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.331930212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.355431266 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.334459595 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.332343896 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.33252283 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348036605 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330957801 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.334189177 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.350610828 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.341778274 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.349273494 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.331800249 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.382229137 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.356323307 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.33630453 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.336430453 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.336899614 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.352025987 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.44467196 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.335768068 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.336564239 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.346186296 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.330330858 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.331605288 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.328278075 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.353452102 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.345641874 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.343933887 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.337493162 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.366291163 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.721554444 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353489444 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.337161229 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.335099855 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334715309 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.338669374 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.336901786 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343074266 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349597547 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35002461 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.722190182 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.367406044 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.337618504 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.334412364 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.34430112 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.336132931 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338342398 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353644633 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.35544168 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350575268 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.316799811 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.341127829 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.338074611 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.354125251 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.34411937 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.73266026 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.346038633 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.340870178 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.716115946 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.355828544 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.736397272 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358854159 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.336970428 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.349517398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368246722 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.343672249 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.334859877 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.335562228 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.344340424 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.332994645 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.346868074 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352190489 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.341360962 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.3384262 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352316631 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360185008 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347464108 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.340228936 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.347756429 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.358731979 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.34609998 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.349489678 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.340340771 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.332240447 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.348255012 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.341882275 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.339765201 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.3418132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.343038168 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.350590625 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.722469344 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378282116 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.334559484 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.334535491 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.337782695 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.352712766 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.722139116 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.360602267 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.361213264 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.385572406 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.338656008 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.332655495 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.347448277 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356934875 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.347401754 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.343746548 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.333969891 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.33083172 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.730913955 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.374729839 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.341055676 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.338205831 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35802692 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.341083419 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.336975078 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.350043166 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.3439255 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354446697 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.461746251 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.349377947 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.371748796 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.337722354 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.343615836 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.364694996 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35758519 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.370650364 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.342465065 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359018111 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.356877458 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337370778 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.353350701 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.351926461 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.342964778 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348802521 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.336216976 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.365378922 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357181547 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356137908 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.362396057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.463128902 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.338755295 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.33733984 seconds)
done (took 225.380107645 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401260231 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.339335468 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.423094131 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.338010281 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44357795 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.435529603 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337605059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.336908058 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.336608626 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.714291764 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.338615503 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.336425995 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.333862733 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33583928 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.42147472 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.339709103 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.336997984 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.677004764 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340212148 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.411100024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.333025908 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.337274766 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.339395566 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.720396175 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.336615823 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.337239859 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.412376117 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.341166949 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.687011329 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.338548394 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.338840561 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.687192945 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.429255372 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.357549528 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.34995723 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.347182593 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446400484 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.359480254 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423248987 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.421920749 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.42554417 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378150123 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335879269 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340669773 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.344041528 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341656635 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.336681208 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370582486 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.339478259 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.339993882 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.679786045 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.350900981 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.340525854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340357315 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.339456622 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.371294786 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.339836646 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.343388348 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.428063489 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.343105812 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.402943885 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.723495647 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.718859381 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.34226329 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.341500577 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.341123094 seconds)
  done (took 148.866128234 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.410857763 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413918237 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.452447808 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358244516 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39253566 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.45745005 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.35822532 seconds)
  done (took 11.08910439 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.349077607 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34282332 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392654141 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393081704 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342914721 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520835411 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345352178 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.354209708 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.341970023 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.396462805 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.345205166 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344458614 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.349866045 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343373546 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393009474 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356016919 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.459450025 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.344827308 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.345163889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.500133686 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341045149 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.351269793 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.397106776 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.355441295 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347793405 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.350275953 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.157026155 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343522012 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343034175 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.345179481 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34236463 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422832098 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.343931185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.345532335 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342682367 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.459517493 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.344028444 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343948814 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.345698195 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.337538337 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346485034 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.345920156 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.345001903 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.342503818 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.345904571 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.368967214 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.345726983 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.345963059 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.345895808 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346509943 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.398263515 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346534787 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.343761583 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.343150985 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.401824854 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352318771 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346134794 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343406811 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34778791 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344483975 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503038302 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395179723 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.346977593 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.394176938 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346602694 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347280593 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.346956691 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.348069415 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402206762 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.346620064 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396637041 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.346559911 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535485771 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.370275652 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349261405 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.350665629 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.349822388 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348289996 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.348494043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353544426 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.345483314 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.350605213 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.355064337 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347104896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347122552 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.518819808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458294721 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345395402 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36116386 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.353708387 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.347173096 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.402932862 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.349288332 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.347515434 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401143128 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.461365896 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.403871929 seconds)
  done (took 154.840193448 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.353217556 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357389943 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.351268008 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.365443421 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35111754 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351303324 seconds)
  done (took 9.383298539 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351946627 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.349049452 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34919916 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350666249 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.35026478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351611935 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.349646212 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350136273 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352587625 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.350142858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.351356769 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.351489775 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.352156364 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.350248012 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.349126824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.34983815 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.349242262 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349191424 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35171861 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350429316 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446263837 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.350749491 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349275417 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352810329 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.355533445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.351170656 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.359545527 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.350429561 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.351450994 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.360984831 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.367397776 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.350702911 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.351770095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.356156406 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.354858161 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.35193671 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353767294 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.354263449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349397692 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353602198 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354479537 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352092544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.351402722 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.353760392 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350533459 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.356917953 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.357664033 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36211185 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.352399812 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.354233375 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353951414 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353489849 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355167278 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.355178427 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.356285606 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370933897 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358536354 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.350558879 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.353246854 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.355399275 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35447969 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.355118366 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356961391 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.355118723 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.361778289 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356840262 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.356165564 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357457362 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353529903 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355179199 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.357030258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.351250084 seconds)
  done (took 99.817064559 seconds)
done (took 425.239095065 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.644340994 seconds)
  done (took 7.903220579 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.569357336 seconds)
  done (took 7.828153385 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.345685547 seconds)
  done (took 21.609324978 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.416176669 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.449479503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.347575773 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.34985359 seconds)
  done (took 26.81745761 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.468693181 seconds)
  done (took 7.72114178 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.346016197 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345637134 seconds)
  done (took 13.949595719 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.872215405 seconds)
  done (took 8.124042447 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.013075712 seconds)
  done (took 8.267326876 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.34115116 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.350945775 seconds)
  done (took 14.206896082 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.332096228 seconds)
  done (took 7.579350998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.172961743 seconds)
  done (took 11.420962299 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.355614636 seconds)
  done (took 7.605881937 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.341414487 seconds)
  done (took 7.588441856 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.076854598 seconds)
  done (took 9.326847991 seconds)
done (took 161.207754585 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.341056261 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.342418088 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.342370076 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.342501726 seconds)
  done (took 26.614372739 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.378774552 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.382514413 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390800378 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.391111362 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.384459784 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.384004628 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374244466 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.37275735 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.394596516 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.38640023 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.383638481 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.384986179 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.382381837 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.372912268 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.383311099 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385758364 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39274466 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.386188208 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374195695 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.384487595 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.350277856 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.394323942 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.384655285 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.350993926 seconds)
  done (took 34.399987248 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.870854033 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.420411688 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.503052004 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.403122646 seconds)
  done (took 7.450804998 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40236203 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.404641358 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.413399183 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.454248055 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.480665045 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.41104268 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.375667207 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370263048 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357702529 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.404751833 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.479194725 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.4187374 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.485531572 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.348728461 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.537882593 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350953407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.351402405 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.401312487 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.451649938 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.474323778 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.350901926 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.401105556 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.404918589 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.418778602 seconds)
  done (took 35.203511608 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.349426871 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.367744914 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.35068675 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.349893093 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.359373906 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.349888831 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.348250688 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.352196741 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.350776584 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.356280783 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.350447137 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.363146434 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352161305 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352118132 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.358940038 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.35186911 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.356244097 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.350172059 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.353203337 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.358112582 seconds)
  done (took 28.334782125 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.342096107 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.287354526 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697972773 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.600101159 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.345054619 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.345292824 seconds)
  done (took 28.871952042 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.418735408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.568132089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359146708 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.69000109 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.78379538 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.36994451 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.353905561 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.585649695 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.888648099 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.880540536 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.40858613 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.417562803 seconds)
  done (took 19.981577025 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.35902327 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.353901023 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.357578695 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.368396546 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.405665632 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371834467 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.361302761 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.346691619 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.411550739 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.420838859 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.369163721 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408223009 seconds)
  done (took 37.79058825 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443738366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392341449 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.24705506 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355661412 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082185233 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560042033 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399286974 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054233257 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.368080516 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620992977 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359977591 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446426939 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605018949 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348723136 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353657773 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.310279467 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590643209 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803921953 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351434824 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.261507564 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376844168 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357594617 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.345459345 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57484831 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580212545 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.326661797 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609476868 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.124299968 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624006903 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363039714 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360320828 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34765126 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62535518 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992143837 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460478041 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553631735 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376153631 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.895111457 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.346861756 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.252779643 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342809163 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370291147 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359931313 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350029653 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284823961 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357991781 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056517435 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.372027316 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.062959529 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351370332 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601438465 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44949159 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.355059817 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.920981696 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413743048 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.358094624 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.354315828 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445168562 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938650322 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658974723 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367635649 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.29276489 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363489858 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.18053375 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979138729 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.373925337 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357041818 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356641482 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286392638 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.237121714 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375350286 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501861414 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.377469571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003991899 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022364365 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369193657 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283198588 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875938335 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362451166 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.291499687 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58108995 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129406886 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28855692 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.29474512 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288796044 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026762252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360525081 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.714745584 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373801937 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059298694 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577796744 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3846779 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376355346 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576418416 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.232627375 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352407038 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.357865315 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479533275 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372665634 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052834039 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304326036 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359277343 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609212722 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.563669973 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35659701 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308317511 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838707539 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371773274 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.374248853 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362580364 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.565970286 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.927458779 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3850177 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664605249 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379466522 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.130308438 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055337532 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368036207 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.364834617 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35752185 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59512409 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.076035172 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239782814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423718756 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362844611 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360673247 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.285767075 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208251141 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.237315153 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.546163418 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379173103 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.370974762 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.358859458 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305850007 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.366713438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365541472 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.136507623 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58018015 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358167833 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63765054 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292326184 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506286325 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368687432 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582368402 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.529190771 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.378952781 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617536909 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369721123 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360930928 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387837954 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376356814 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458152406 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38111121 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.369942537 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617261331 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.362650546 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363014307 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.296951584 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.141750139 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360552182 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.36402598 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365813097 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941765029 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352125998 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362643653 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248652616 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.372607236 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426652734 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364999061 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565647317 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.128861111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381076815 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.384613197 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.358018818 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585722824 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369340427 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.292392467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445969007 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.820232442 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.94467421 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389481801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.295637999 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.07160647 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.053973388 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361133334 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.549150701 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36067287 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566896523 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390895096 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365705937 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921188473 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379559712 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.217841475 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.369900654 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372336202 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366166957 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362158433 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.084407423 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704589016 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365667564 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.375385084 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506669995 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37472352 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295815464 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.879111346 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367939267 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362894952 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.135472775 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398077378 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.211669046 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15100044 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6375529 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36409239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630032143 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.322020183 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.397521562 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.361133892 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36732887 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368018186 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.368214752 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37113536 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.374355508 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.229111307 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.804866712 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929678927 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064149404 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905668226 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633486065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.385334537 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270634171 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063349931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315775256 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.02063068 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546652774 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077881602 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327220091 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829038138 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.56714217 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124533202 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619431119 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597662711 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615786787 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.38465449 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622224569 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584753121 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399450297 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368676559 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297038903 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.646091922 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909262886 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391015297 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44931099 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062473815 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393656148 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.147398094 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.403309834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.026485509 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760507258 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.929164365 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.751989792 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370699028 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381242981 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155551651 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38825274 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.892443009 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979192531 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383819034 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.832502777 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321077014 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573217041 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.399386283 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.363442434 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.602047833 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.370757055 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624790025 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619462991 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306750387 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37457363 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884273324 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.238761233 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.372291554 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367951872 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078414606 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368946109 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648729883 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.370871504 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.095247918 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392161009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302168353 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301543188 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.062952758 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368485237 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343765868 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845037453 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.374085486 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402039362 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38742367 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216612895 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624138516 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.382752589 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930875617 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610941895 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381346795 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395330472 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.373589422 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3702096 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.351993487 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.250984972 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603980773 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428904665 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593511209 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.290970073 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.318436272 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372894015 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582209207 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293389919 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374012513 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609781339 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.098668978 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.377336352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051760609 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835217967 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368816219 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385504219 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388577894 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392267001 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458909439 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5795115 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.397738824 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382435154 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766873741 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394988868 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372933298 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.383210739 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46508912 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723109058 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.087159441 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.149534953 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941022295 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097373188 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955932294 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642722992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373218632 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371333233 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307632965 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521479588 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.897476243 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645322471 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502690657 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.386506356 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396255267 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37835851 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387461798 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588445255 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64750957 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.243819506 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381927638 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03601717 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.532772561 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385022846 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.584510201 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85290097 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925917262 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66294244 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372528961 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105278325 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664778944 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465296693 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373633471 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961994034 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.378802688 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.05244926 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.379166995 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374607927 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538655712 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624675182 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025309422 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.403649605 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.533638547 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.147597625 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.365864644 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630014742 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.812414407 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585168082 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968196005 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075017929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637345705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44468913 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584828272 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.498029897 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524880717 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.383807084 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257250896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376542007 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218834196 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.087193717 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.385679444 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947896829 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655997087 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.379473944 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.386051852 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399854875 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.385298374 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59804785 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060321928 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604197424 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386308315 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387074555 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.358077809 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945737074 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647579391 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316799846 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.380171515 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612139768 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631996411 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404034888 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.833569184 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.08996231 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922733672 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.350648087 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401580182 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379098212 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063437785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95321904 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.115328414 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868470068 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.03910241 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385268986 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655522388 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.382900972 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385915386 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657188419 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38159541 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389690684 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594209199 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.969232748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135981775 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.397018039 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.365298949 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.319958374 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.602874777 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393814302 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332283027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378766321 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.780953223 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398817202 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508674522 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390048854 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.381322932 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395458968 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.118188312 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663890695 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385133136 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.362419095 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.39005347 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38544605 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473526354 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93066866 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402914125 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054598103 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.731607909 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636365634 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38929238 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.36254004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.383046419 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380542279 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096903445 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.349921242 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380864343 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939544392 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.384619741 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.411875414 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385154046 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601687184 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589701052 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38101985 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595739778 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399167179 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397743267 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.279341086 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.145618849 seconds)
  done (took 1648.8555055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38036319 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.384340435 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.402299508 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.40676142 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415091914 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.436383253 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.394553583 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430707322 seconds)
  done (took 52.533746684 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.396355189 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.541753245 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.413444482 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.383450282 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.395994813 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.381709388 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.8327334 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.408286993 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.390730505 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.392925757 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.383385995 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.385763151 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.026882604 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.396225349 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.383025057 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.373046362 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.391441554 seconds)
  done (took 66.17078393 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.368973766 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.701839896 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.991469331 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.432147158 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.427720866 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.396882804 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.841446042 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.400810707 seconds)
  done (took 58.854567818 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.400699599 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.400978969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40275869 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.400285722 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.401519975 seconds)
  done (took 8.29859628 seconds)
done (took 2054.612465889 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.387914576 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.389948166 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387637343 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390192731 seconds)
  done (took 6.847210833 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.36409392 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.060178386 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.364556101 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.378458803 seconds)
  done (took 18.460444238 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.390626246 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.405633992 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.050183538 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.996205661 seconds)
  done (took 5.340426103 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.136108199 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.148947791 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.133584879 seconds)
  done (took 7.711885396 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.382884578 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.391253878 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.384867236 seconds)
  done (took 20.454474235 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.674092534 seconds)
  done (took 2.966652143 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.523986059 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.572636967 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.693558289 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.698768121 seconds)
  done (took 7.779774311 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.759607483 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.738232868 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.55086255 seconds)
  done (took 6.333336156 seconds)
done (took 89.98307888 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.079578468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.369707995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.523711371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.086637833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.58806235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.523683151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.571085021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.054034905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.555223518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.545676531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.045161779 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.586949811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.518421141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.368875502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.519601033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.745771958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.588919019 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.115810374 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.727462152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.923433538 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.57266101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.681798418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.875087731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.716520972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.597352503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.523865216 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.276018217 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.751196927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.902222593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.287921724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.522841313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.098553701 seconds)
  done (took 189.121270466 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.362660435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.377150146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.363626713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.383687266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.362328598 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362907547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.377467599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.380971655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.362695569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.378751502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.379400611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.363903626 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.380541133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.387206764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.363355055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.363609801 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.392309231 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.367544503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38011331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.363997238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.38397335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383193091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.36460393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.364335375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.368206109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364397921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388212582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.368168261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.370677843 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.375917692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.36984511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.368356967 seconds)
  done (took 205.199549589 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.363722538 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.365447641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.369125053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.368117842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.376592929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.369657249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.384779372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.368151492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.380959438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.385300498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.364618416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.374362389 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365997108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.365060533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.367435658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.372002401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.371400327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.368365959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.378050133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.369264325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.368681799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.3664089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.381649944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.393635903 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.374571604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.366376104 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.38641484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366562109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.366155519 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.384376836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.385999606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.369772766 seconds)
  done (took 205.214786691 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568078839 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.373392022 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373331589 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.329392477 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.375504539 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.374455169 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.36852976 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.562983125 seconds)
  done (took 14.602439939 seconds)
done (took 615.414706459 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.740769867 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.452128491 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.572584364 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.395652991 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.129983718 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.415164414 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.393574395 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.559840299 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.285414074 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.567466631 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576807413 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.409454152 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.71123882 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.392556014 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.645313627 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.492991005 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.229632194 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.350682807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.70065614 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.894393795 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.648297517 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.832854664 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.575536661 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.28469303 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.729830974 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.832989092 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.055679574 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.219216578 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.410090243 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.710059284 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.030693029 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.305604076 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.452485763 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.452324215 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.507154917 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.48730269 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.280003764 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.449409678 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.592010011 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.609918232 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.893238966 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.106284431 seconds)
  done (took 92.661248554 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.357931331 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.358841617 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.356807919 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.359662545 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.359748544 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.358352256 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.358798474 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.357997268 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.358191661 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.358122971 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.357430447 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.359242494 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.359098852 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.359929014 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.359001986 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.35825182 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.359101269 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.360312365 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.359024051 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.358230589 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.360896729 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.359112422 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.359498324 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.360141575 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.360096422 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.359814458 seconds)
  done (took 36.615288574 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.379253406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.618550909 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.778570921 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.388239837 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37993621 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.382142681 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.454576673 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.382923916 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.381435903 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.381771827 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.544776186 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.381921767 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414952336 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.804593591 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.38172758 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.380921769 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.379754655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380094288 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.630352273 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390225151 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.477725535 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.381974535 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.456400179 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.391264442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.40323702 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381783936 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.385827528 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.936910628 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.400531544 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.547273458 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.147644487 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.456221713 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.890136606 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.809028285 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.144811443 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.385609855 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.381762828 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.552121217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.382611706 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.38145802 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.458627365 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.383143669 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.788976381 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.029834075 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399703987 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.381886407 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.955187317 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.566531552 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.617411749 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390162195 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.815148633 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.38554276 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.383762972 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384094954 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.61695028 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.389248715 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.382691514 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.936265575 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.408677807 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.458083779 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.385863535 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.383420461 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.638658961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.383421342 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.62529067 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.385231508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.392216494 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.403643945 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.790141541 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.386869196 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.05774149 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.402181059 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.383746005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.547317288 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.625161371 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989943552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.405162666 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.6409566 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.903240656 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.474934933 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.390192599 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.928474607 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478890027 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.388217039 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.386337667 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.385461061 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.384300165 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.429295208 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.457890707 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.989214908 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062737627 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.962546389 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477382048 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.39964818 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.386399713 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.93880608 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.404010247 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.385108351 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.784986912 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054855105 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.402675635 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.393691874 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.056804353 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.405646295 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.46292829 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.391338509 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.799992794 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.385790567 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.432824538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.385540589 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.392790919 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.40880936 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.461300272 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.389730376 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.385990171 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.025920509 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.576148794 seconds)
  done (took 181.96572213 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.380249555 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.380188483 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.379821576 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.379808305 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.380457788 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.38807009 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.382072737 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.381504426 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.385648472 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.380273813 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.382522061 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.381014903 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.384318525 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.384762762 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.411543118 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.387907831 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.991715535 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.382230677 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.382222418 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.400728398 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.172852644 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.385482458 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.380318037 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.400336195 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.380982248 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.384683349 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.405868597 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.384657163 seconds)
  done (took 153.492515504 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.388546972 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.932600426 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.408091023 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.513826811 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.410701621 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.385579592 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.512364128 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.445871949 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.405969694 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.385861818 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.3857996 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.679297355 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.39035874 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.883706259 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.572487949 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.532339141 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.883604386 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.406694862 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.387007833 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.387934684 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.515939011 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.393727007 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.679510081 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.930811967 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.407393848 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.935078906 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.3749731 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.392857722 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388946047 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.939233068 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.407315349 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.683532412 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.465957583 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.447072298 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.954626791 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.908742263 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.909934912 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.533604333 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.389344392 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38784582 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.387513271 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.372267012 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.939361668 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410482272 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.391325508 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.928377194 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.410514175 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.390886145 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.39631785 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387988983 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.448085459 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.464598245 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.704175729 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.948531382 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.485733409 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.402806707 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.518621206 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.754324601 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.394674614 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.885607499 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374109011 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.945626811 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.412489948 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.373456546 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.391061859 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.396819574 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.534083241 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.520573145 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.893114549 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.412232617 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.89252209 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.552823739 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.39408292 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.390574231 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.394792506 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.944189355 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.913705177 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.555700643 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.524761238 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.580240679 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.378527395 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.39349674 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.376199822 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.468820267 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.39474969 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.947730424 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.912822357 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41211701 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.393716929 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.393670882 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.395238136 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.562896711 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.966488528 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.487518658 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.879484729 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.707061621 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.692477834 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.39740644 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.450471573 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.407217102 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.689943579 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.396260283 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.448500962 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.815960338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.691814629 seconds)
  done (took 165.119079083 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62803208 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.563629889 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.480901138 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.540659809 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.986440043 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.950472932 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.648899443 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.540955236 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.500371351 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.6547722 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.50940788 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.484970152 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.603605144 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.472438596 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.13272491 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.482410878 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.50028641 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540194068 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.54655539 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.378909275 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.058619047 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.674356334 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.584686645 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.222268059 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.485229906 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.132988066 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.94942653 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.921570676 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.568252746 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.650329807 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.918531612 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.500221228 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.34045115 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.062904389 seconds)
  done (took 66.513277213 seconds)
done (took 697.644308145 seconds)
SAVING RESULT...
DONE!
