cset: moving following pidspec: 10315
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369453567 seconds)
loading group "string"... done (took 0.562803172 seconds)
loading group "linalg"... done (took 7.753817557 seconds)
loading group "parallel"... done (took 0.174542413 seconds)
loading group "find"... done (took 1.193760473 seconds)
loading group "tuple"... done (took 1.876576098 seconds)
loading group "dates"... done (took 1.277347581 seconds)
loading group "micro"... done (took 0.236582695 seconds)
loading group "io"... done (took 1.110469614 seconds)
loading group "scalar"... done (took 42.583788769 seconds)
loading group "sparse"... done (took 14.345759835 seconds)
loading group "broadcast"... done (took 1.109778802 seconds)
loading group "union"... done (took 15.159555091 seconds)
loading group "simd"... done (took 5.049405311 seconds)
loading group "random"... done (took 10.220409684 seconds)
loading group "problem"... done (took 2.073805015 seconds)
loading group "array"... done (took 23.337901141 seconds)
loading group "misc"... done (took 2.047951825 seconds)
loading group "sort"... done (took 3.449279064 seconds)
loading group "collection"... done (took 19.88197585 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576929217 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145957718 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.154244635 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132221392 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207506969 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15851975 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15869425 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098566025 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.992566402 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175722606 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15296233 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526688347 seconds)
done (took 5.240986751 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.233870824 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097365825 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10704894 seconds)
  done (took 0.915379276 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078695589 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148925767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09680669 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079292642 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097523941 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078803448 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096830697 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07899182 seconds)
  done (took 1.395550087 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.089475201 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099659416 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082775241 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098703744 seconds)
  done (took 1.090195626 seconds)
done (took 4.429945602 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749435151 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282401639 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204828595 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466365993 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203234353 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.223133165 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67602368 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.357777143 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.26119418 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103253322 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147726121 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396808876 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140951048 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68465664 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089807082 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12831803 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181715662 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441782379 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08225814 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111661497 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118262218 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142540305 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128766962 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093355703 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188987003 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081063437 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197236072 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111549952 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08138879 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.281994515 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203074602 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690730047 seconds)
  done (took 11.012660947 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113225848 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138648706 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100095901 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140636643 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138131496 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103038484 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085665557 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100050803 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125407437 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182738259 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11619062 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140693008 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097517312 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083577446 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118659098 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249353194 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123011711 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101206199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103597747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089922216 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141990484 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115582184 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111705784 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095181781 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169475532 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22665902 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113910479 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127856663 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100056664 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114430951 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145429764 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145670561 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097275387 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082170103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177312259 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12758575 seconds)
  done (took 5.273889484 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101900542 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19592891 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124579083 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175685378 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082140581 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147946788 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09802701 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116460708 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26410012 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.115976102 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132229545 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165078794 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145522559 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116782412 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080366217 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099334267 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09718279 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.580988169 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156393097 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119147769 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117287824 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109756044 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102434567 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3506902 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105083304 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098309421 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082486623 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083708368 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165218183 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082215295 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.143154785 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122498206 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.128489274 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082585602 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137188935 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21685999 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078828771 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128119345 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137005888 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082396646 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097303725 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179296844 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089822413 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09960127 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103230521 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139701821 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136930894 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100009932 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099248997 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207673582 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081684139 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117558581 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.950722107 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181384636 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103304268 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097372284 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336516268 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100576255 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099556818 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078754337 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28126218 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187832356 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100692503 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081236508 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098613318 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082253838 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.407705162 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082644036 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.714147501 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085138697 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108453683 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084112697 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098869041 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105583467 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088872805 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118827359 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081490275 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101469763 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07975538 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099452346 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081723756 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111424212 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104864087 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08136208 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167668308 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080434872 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118020219 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127823512 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085462272 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097232268 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131161945 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083145706 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098811127 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137105891 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082414636 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111849672 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101474336 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143872385 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08238531 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094959914 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137982802 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080793454 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126849362 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101825392 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116155603 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115735874 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101482542 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085901615 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098495921 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07818178 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167717824 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079749203 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097404149 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080037241 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11061994 seconds)
  done (took 22.636820532 seconds)
done (took 40.740789774 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332933742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107729995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10802598 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106938511 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104672295 seconds)
  done (took 1.551225761 seconds)
done (took 2.304765671 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287768845 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173862932 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096456733 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166746282 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093221924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17565187 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162562631 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11194286 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201235985 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096544899 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166013255 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094786027 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079129893 seconds)
  done (took 2.69884585 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096511664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118573081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085243846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113212388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078353322 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114832713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094234182 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120010995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113018155 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086825198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096317355 seconds)
  done (took 1.877129585 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096254952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11647792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083938399 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114120431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078727986 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113995474 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094221566 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12004095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112556304 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088036639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09660657 seconds)
  done (took 1.874030226 seconds)
done (took 7.202399062 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09373463 seconds)
  done (took 0.848537691 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.960298839 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.85512478 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113485725 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153543638 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.310258608 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19719942 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484951136 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128733106 seconds)
  done (took 11.177709457 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118174403 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.117349021 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107502556 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087483288 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104877098 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086475024 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10260736 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101357925 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089034927 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105524607 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084299267 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102626962 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103496324 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088268096 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101896189 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084279535 seconds)
  done (took 2.41211803 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121046662 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11904046 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108491627 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108382016 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085790108 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106009219 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106007176 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088767518 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105552228 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105358763 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091033662 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108847762 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106303256 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081127717 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109380306 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110932899 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086967182 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108701628 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109195808 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091443722 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111258565 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097212388 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088680654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110064854 seconds)
  done (took 3.344421127 seconds)
done (took 18.542935084 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164317153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111942841 seconds)
  done (took 1.041327757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099241616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116036044 seconds)
  done (took 0.984224888 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101128971 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099041984 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12611749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112264964 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082535155 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09970973 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122208952 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082255518 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099938834 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081491477 seconds)
  done (took 1.779228502 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086310537 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11302801 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10428592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096800023 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108488054 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097242555 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091503349 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102815255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112445931 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079475752 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10507233 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116998371 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088676953 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119135437 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10799085 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084318821 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105560368 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101863179 seconds)
  done (took 2.595316442 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083392798 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099889493 seconds)
  done (took 0.956105822 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084255235 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09669452 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083471311 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100724067 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095976321 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080408375 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097188962 seconds)
  done (took 1.40939471 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.49724193 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138799137 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267584202 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103951754 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106240196 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303908569 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101696508 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085257707 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107941565 seconds)
  done (took 2.547746856 seconds)
done (took 12.082846672 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09439069 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118304995 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115490627 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.47202786 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108021112 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101257149 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149137163 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257452085 seconds)
done (took 2.188530964 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146989343 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602927334 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.430616878 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235335131 seconds)
  done (took 2.043139846 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405691786 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099519679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085300572 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083982781 seconds)
  done (took 1.451755093 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080457458 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100245761 seconds)
  done (took 0.954496319 seconds)
done (took 5.376126958 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082064679 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.134781582 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081214069 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.100913391 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079207989 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10313214 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07905199 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10045122 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081032275 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099311572 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098227291 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08327852 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09905701 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082754347 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096360052 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080439951 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098942888 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082920903 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096955233 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079748122 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096542753 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082721838 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097413407 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079611862 seconds)
  done (took 3.003599903 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100789828 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098826521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104022895 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088928668 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105973144 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087524002 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106070799 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100065567 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088455971 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104250615 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104434113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088222604 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102210779 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087120143 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103395853 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104296703 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088809749 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1014951 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083561115 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105677965 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105392578 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083575963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104772507 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087112521 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105034644 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104075878 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083968611 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100897941 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104509834 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087791205 seconds)
  done (took 3.700417949 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086532335 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09562162 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080688955 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104590972 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079652387 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100438111 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079307666 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098473783 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081119183 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098867779 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080890393 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09895771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080134047 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09993123 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080346903 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102568912 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110755544 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081348022 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098485187 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0826643 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101225839 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080377048 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099292551 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080303998 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098093761 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080023531 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098391405 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080518144 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098666081 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07933963 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102236281 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082656589 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098534344 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086353986 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102390205 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079207705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102826923 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078919112 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09952311 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07875964 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098961718 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096183749 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081163058 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103726082 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08122239 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099443294 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081687485 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099414157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080396721 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102107581 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07980243 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099290594 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082045876 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099935636 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082550867 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098192691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080445606 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09935946 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098227672 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081825801 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096745292 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080133373 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099885251 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081467398 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113523677 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087213623 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098142647 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081505126 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100242036 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081731439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101598781 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093003082 seconds)
  done (took 7.351269714 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084135441 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107931016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082544405 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101885262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078306659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099886084 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102322303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081849914 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10031689 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087310008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099637452 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080860192 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101590991 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110584415 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082211553 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099657296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087048272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097879945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080463669 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103331102 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080745797 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104199985 seconds)
  done (took 2.844009977 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.2108202 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10647804 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143293999 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106858877 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083008921 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108304695 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104145355 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089413918 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10599402 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085413415 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105031445 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105367033 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086109781 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104497311 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103167336 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087797267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105716271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.199511976 seconds)
  done (took 2.829796441 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094305177 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099705677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103473329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10313511 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101962346 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085986448 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107438357 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110093706 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086205504 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102266212 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093310331 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105056518 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103046433 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083754138 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104845235 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083363182 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105538116 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083229005 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113134226 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108904392 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089110582 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111812438 seconds)
  done (took 2.970991263 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097486751 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101570727 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117972681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08478703 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097971119 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082028724 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110252872 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08265193 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112515591 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103402925 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084183272 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100736364 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089914312 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103617461 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106755131 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084347752 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103799918 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083889463 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105014024 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079106147 seconds)
  done (took 2.7273376 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103361124 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104523821 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102073668 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094827032 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104724529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083491477 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113023346 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103646031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084117859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128600159 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104047039 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084221483 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112915062 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109822542 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101613638 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094571401 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11312449 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11265695 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084409528 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104363961 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129717068 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084300567 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113589799 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103705383 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084398098 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104287044 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102624919 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091380647 seconds)
  done (took 3.65589747 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081873042 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098465462 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082973015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099044231 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081889147 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099913327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081549901 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09922863 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084012046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099881779 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083102002 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101776996 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083315672 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102740553 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083306369 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102219094 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083757625 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100254885 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081243578 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100498284 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082709288 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103495648 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082650853 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101742668 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080021949 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102746159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08009629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100954174 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082846721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100573927 seconds)
  done (took 3.548900166 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091918413 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107614216 seconds)
  done (took 0.997178459 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079905065 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11516644 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079620486 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10758919 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088849411 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10491343 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112087272 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088515145 seconds)
  done (took 1.57287971 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099459896 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115065577 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085248818 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11772524 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.114790154 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.10003581 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175541707 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105374977 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08909937 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102480351 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117105518 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083569211 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110520064 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083900847 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109818715 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090119453 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102257299 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108785725 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087920001 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101719828 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089026334 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113854628 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085751175 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100423681 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104576763 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094048725 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11726269 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08484536 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108127943 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110888269 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089996042 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097483443 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084702288 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104910149 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081907645 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11331658 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120560737 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086717843 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113811222 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085302519 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116823021 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099234208 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089146573 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109886275 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093956994 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105720711 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104345956 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079595442 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101003476 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086485569 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099178004 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084852392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099699196 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092046943 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108560992 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114771849 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083277515 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105921523 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087225149 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107775562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090650065 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106989039 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105900157 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084811378 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111197916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088736535 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11554961 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079770065 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.099202951 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100610052 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096447894 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128839435 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091494524 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105292945 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104982133 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082853929 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108163597 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086342334 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112186095 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09047147 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.106399575 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111309618 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092481788 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105795949 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086992556 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113314747 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102549239 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087551051 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102654625 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121795614 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084390359 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100984241 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083152424 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115729307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087306755 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104770433 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080966914 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112809718 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077324978 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106126832 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105536536 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085345028 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116591721 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109297778 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091110222 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115210892 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091581806 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104881152 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107122015 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082209634 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10545121 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086924466 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111434188 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078290929 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107702276 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085088485 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105787771 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112947536 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083617983 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104315039 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092585472 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11099904 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082073283 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.102047408 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105561865 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086252348 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108260905 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093145467 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10471505 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079306933 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100585647 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087196264 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106221646 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10784834 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091272426 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109255687 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079481773 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103221904 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108519567 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09611919 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105542044 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085997152 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112215696 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085436274 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104315949 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110566878 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08815895 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103836631 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091413316 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106072849 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079189615 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109241546 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106110351 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083753455 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108531662 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089385023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107397104 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085505034 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104293401 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110591424 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086974332 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103056104 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084720627 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10458141 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095294611 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107567785 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079443698 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102533461 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112594088 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082519077 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105528678 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084105258 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.1081504 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086157722 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103840263 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083797344 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107947291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117059935 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089235805 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106672875 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109788915 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09742664 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104916929 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08788979 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105160581 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085598431 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106306258 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113404962 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091071221 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111147996 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086393186 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102084589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110350104 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093598638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103993343 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083647905 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103861247 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088474098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111540583 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108659779 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086971036 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102874126 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085655782 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10998478 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087445791 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105924064 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082892791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11159889 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104827455 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092628341 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107078121 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116076636 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089989751 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100530224 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089060223 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103551585 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090468888 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101595754 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081992467 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104808856 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105627868 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084755349 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10818336 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080098869 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112628681 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092746311 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10642269 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08408712 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106453673 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110941979 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087677906 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109323294 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08836512 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112770557 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115056986 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085248784 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107408113 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097624049 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106769152 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079153055 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110950596 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083147066 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105794873 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103325233 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084100845 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108734514 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095199572 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11503718 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09812371 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088877477 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103573023 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08479309 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100715726 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090391485 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108616561 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086199059 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113140272 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105638742 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08969462 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109161936 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085788208 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107280322 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086419544 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109547828 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105164414 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089549234 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104290097 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088672031 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10457845 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083836263 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107493462 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084963066 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105749467 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090394777 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105841209 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104901602 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089835681 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10631695 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085827386 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107265565 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084344966 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109664018 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086292684 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106953178 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108371538 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081525402 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112889648 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085769107 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114986936 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084822826 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103351287 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110527894 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089685826 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111108421 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086346044 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108036065 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08637043 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107421328 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107792185 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093652388 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103849672 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097513379 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116312238 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105971737 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089790441 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105722612 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087829149 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104876808 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086644849 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107989422 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085364012 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106612261 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110205489 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090296521 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105857299 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088964518 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108209649 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086047742 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108746022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079932338 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106367898 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084911718 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106894644 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116698025 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086917512 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110345404 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083680303 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108933118 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084075458 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103800882 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114692312 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096147616 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108139121 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11343748 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085658471 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107983269 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097832656 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101132925 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083349502 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104871919 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082777412 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114891983 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10742322 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104625012 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106164137 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085274781 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103204156 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086953582 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105861366 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079664084 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105144074 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109581506 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089165288 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104483911 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087819815 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10957247 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087513288 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118307131 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105069867 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087127026 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106919403 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083305747 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104820428 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085077741 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109753063 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086383441 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104224668 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081755133 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107240327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085916372 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108208782 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105282946 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088129548 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113332178 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085618704 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109873425 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089448832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.103178555 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108291011 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086048119 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105510882 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085236962 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.11109317 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089205555 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10838821 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114798781 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086623279 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107453799 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086999036 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105111869 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085666315 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107763335 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085888535 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107188043 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107158919 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095473749 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104393567 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089618224 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107390887 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08631734 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115761221 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106795431 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090207418 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115413896 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089114614 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108371481 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113989635 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091703866 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1098692 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087478277 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10916745 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091281666 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10722344 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111991835 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087470943 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107323846 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088014169 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104751092 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086190823 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107069831 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084691567 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114414666 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106944123 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086731433 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105467701 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085590119 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108420053 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090355808 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115622785 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08871925 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111489649 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101584426 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084813616 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108138289 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084124756 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108905894 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089837303 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113623598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087856901 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107978666 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10574695 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097268379 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113640718 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090034126 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10571456 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089692655 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109456287 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10868492 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087718453 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107688119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088226036 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112033121 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087407439 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106931916 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113603031 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091449376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108532384 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087693474 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108550471 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086408942 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103380197 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086619587 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109796909 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111795304 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090339271 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106835934 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09743921 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108101481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085684035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113459226 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106306742 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092601461 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102713575 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088446123 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109277457 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086744346 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103800374 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085105475 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106383048 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108485464 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086915548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101608562 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098340291 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117447843 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088651043 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10744473 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105104066 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08312994 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101948693 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086593548 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108266784 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08837567 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119422427 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084833411 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106015773 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097719463 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083878793 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105394013 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087094395 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100377302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079115715 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101979811 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085888379 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109772399 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080671112 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103747111 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106783181 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086604299 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.1016874 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087106075 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101140929 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086454531 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11748639 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104488203 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084562817 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110345439 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090629227 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105482569 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098215699 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085281951 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106927302 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083983857 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105675928 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086158217 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126040178 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110497355 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085538155 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107618733 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088919949 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108184575 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114261909 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08996274 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108040546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092122233 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110355575 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095741268 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11133733 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117029705 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090671207 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111688149 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085792531 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108795736 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084115189 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.107452215 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108117999 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089014479 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112952723 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095715115 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108693882 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11917244 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096698939 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11378627 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08275062 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108082988 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086509141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104287761 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110427776 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08622791 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105637108 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086640114 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.107168723 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088856441 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114822235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087539194 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110522229 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085844921 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101216125 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084932836 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10788379 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104508702 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081573119 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103617396 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086375854 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108333642 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087195086 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105150154 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084292381 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106652873 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104304968 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0801538 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110765412 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082915281 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108953897 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083074861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109697831 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087244217 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113089016 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113764194 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090004646 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111704861 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098713024 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11195098 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10530226 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085385268 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113954866 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085595738 seconds)
  done (took 60.003186409 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148255847 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081624112 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100999805 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080379742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117785015 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10235211 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080893371 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100918999 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080957479 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103654474 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078438105 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101727974 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111155892 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126265805 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092867883 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105836143 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078043044 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101744026 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099086524 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082635529 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1102327 seconds)
  done (took 2.933626317 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105382492 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118978501 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11603964 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119964019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089851111 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116461734 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116634467 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115191023 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09966614 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113624286 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119474948 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114557371 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092909232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113360914 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111443543 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093055326 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119140006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110568788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115314205 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095603487 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116159373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115417989 seconds)
  done (took 3.271389193 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08538238 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103490907 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085532271 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098829531 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084642963 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103269381 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09190992 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.107368023 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089530054 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.108413981 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085317715 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.109459601 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109519984 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082762059 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107345439 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08582997 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157743084 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11328691 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086376797 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110891788 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080866366 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111017042 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09978643 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082015918 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105313374 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088134846 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105302241 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081107505 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104140786 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082480793 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105773087 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080251174 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10742643 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103183609 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083673082 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101414345 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0847054 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104808772 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079934901 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103322763 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084741491 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100549172 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083991279 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107669482 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08181185 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103042055 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08497574 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105826833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078010518 seconds)
  done (took 5.578205584 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104973148 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163310779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087294997 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144611279 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122864376 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112908353 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087561635 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143169894 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105141754 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082078185 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126002171 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122330118 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104069234 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091019026 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11327346 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10417457 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086520028 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103942364 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086884575 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105122778 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109860128 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090025318 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120723224 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12016255 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108759627 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084030013 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104405354 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108544212 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098529366 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111107402 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108988911 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09018739 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121511377 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111103894 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082528378 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109242166 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122715351 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103821135 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088323168 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102657508 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086629106 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110564666 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110880056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102615568 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10615296 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109582169 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084276612 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102271811 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119058902 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087509623 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114789146 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120918271 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08836954 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107213043 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110058294 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120230823 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085278259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103616851 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088099414 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119248035 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102254129 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088058187 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121920285 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107886368 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090892128 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121168151 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111391181 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107943416 seconds)
  done (took 8.216961363 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093931213 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112385681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12129281 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121917667 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090353759 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112739621 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111183575 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091420191 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112241644 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118079088 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111567068 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134907994 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087429138 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116107531 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110838979 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092644037 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112445192 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111447974 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091424749 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112951098 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11270262 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120828493 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091473245 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121643985 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143266651 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107030344 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089651495 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113441461 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121314198 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111041305 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1238861 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092753302 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113731014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121598631 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124184939 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091087461 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105033971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110280192 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091874319 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112318853 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106167849 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101378833 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112831887 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106138373 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090936561 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112580481 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121745181 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126088224 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114601591 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097225944 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112038341 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122070963 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112015632 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092029746 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122529177 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147286165 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121847665 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12098962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11173161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101262811 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123222203 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129951103 seconds)
  done (took 7.74921624 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108123118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117028714 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119811992 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100354757 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084391618 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10990122 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083038652 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103826801 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113166078 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095542456 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118733105 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1097108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09185906 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118736093 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110888544 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112782632 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088735738 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111236983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115842825 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088456216 seconds)
  done (took 2.961519279 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094876629 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125430352 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084711398 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114597482 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108792126 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090850881 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10890103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107586805 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087275615 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108769295 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095515082 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118434149 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107181393 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091426581 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11790844 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113526787 seconds)
  done (took 2.539677927 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101651623 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117983336 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122841529 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083946611 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106437534 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080723588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107384265 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101393715 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082215226 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122716882 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084567675 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110262425 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105868946 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083982773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102021945 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088310456 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102851692 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081963127 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107443073 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120410709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095784149 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105948194 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085069279 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10896697 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106361073 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090437513 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107877087 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10309902 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084616493 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106485804 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08545435 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114369806 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10282471 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0849331 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103631679 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082590585 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10646056 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084798146 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109377898 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104224022 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084706737 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106068372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085232506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107879199 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080316089 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107546198 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080416055 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113319778 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103445302 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08580215 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107383771 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086084126 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108447279 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116991005 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089438001 seconds)
  done (took 6.314545234 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100716075 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110405853 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079979106 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104901519 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087472628 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109785171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108460518 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088967211 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107488267 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082583129 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10864159 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088408773 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109958577 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109197772 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0876975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110427539 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080356346 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108270773 seconds)
  done (took 2.652804545 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091575064 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106468326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092947701 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107002872 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084347174 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110591013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079344749 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.1060098 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104034672 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087214737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105974327 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088175406 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104694514 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087238727 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107218374 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084127331 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109880246 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103547557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08668797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101530169 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089203822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104928586 seconds)
  done (took 3.009893118 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118512381 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128518396 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092130938 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236056669 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103954065 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13646758 seconds)
  done (took 1.683965032 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110284602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121381374 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106373111 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10834594 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116133766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086203728 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109666225 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10808102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118017039 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100805958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109898349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118831929 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118502967 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096837836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116277087 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115413356 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107047961 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088494066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107345616 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129711478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087829488 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11886045 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108191558 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086870656 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109746918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118286317 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117741408 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101148657 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108865137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118376612 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114685131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087491511 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119472505 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122553699 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087629721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119246497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10991187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12913979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113322892 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098548111 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11068947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114213744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097867669 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115061727 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11965355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107313424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093346063 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109407603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108148034 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136413952 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093529881 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118251504 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116504815 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117535955 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097787108 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135322214 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123492143 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118869664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115846023 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123919223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117728531 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094850455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118817 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12375343 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114710167 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097398175 seconds)
  done (took 8.183916086 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102181829 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127865848 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108400244 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122335602 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097612916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109303054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107445486 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088049742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109362532 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10707867 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154015221 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088641254 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11839349 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118767277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087145719 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109558969 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108997817 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118106848 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087291659 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135850498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10992678 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117518188 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096830592 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11986708 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122940113 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115700521 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107485702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088217972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109499295 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086495198 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115719099 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109683061 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118742667 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086740327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119163821 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109308894 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087300401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116016881 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108974572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114633661 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097825705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129320666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109371815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108255208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102471415 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109958763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109571276 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086930383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110061396 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107329805 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102339275 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124307084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123724326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119162167 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108759492 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088368065 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11029608 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107936757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089085481 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116557474 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11847223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088083219 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136337116 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110679903 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109743972 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11844019 seconds)
  done (took 8.090071664 seconds)
done (took 159.159761282 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.224738397 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.206071064 seconds)
  done (took 1.303137213 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098995342 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13762538 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09596482 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171893618 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106850141 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119659761 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139458881 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097468256 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107827489 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086405386 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108534787 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08666831 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.196145832 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084899567 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108189511 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108979265 seconds)
  done (took 2.73512253 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11856805 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.236243385 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127901085 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106355598 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089651892 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110766133 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084351309 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113452024 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088816401 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107665275 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087992038 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109339201 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083736335 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109534293 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109643053 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088787411 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106419564 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088962365 seconds)
  done (took 2.848137065 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114985649 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150340919 seconds)
  done (took 1.150587837 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244043219 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163320807 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232082962 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.475058924 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.281718863 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.369112791 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206250593 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.215605507 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161627849 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.212135718 seconds)
  done (took 3.438919845 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119473629 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181052404 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318331174 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155956477 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106543093 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130097262 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157532357 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131587119 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123634959 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100070096 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124104369 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119500283 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139794356 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094572704 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117348225 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118239596 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121387367 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11535022 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115078015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096924397 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13897941 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084497866 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116957187 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115515795 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098254726 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119994037 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106931658 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085252251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117671475 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092948614 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115944361 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125682051 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118321712 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155580964 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122751877 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157347861 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118946183 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091504017 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116527696 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090656447 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119726737 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119991477 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124089115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098447283 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106321041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098055487 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108000542 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084887339 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116588871 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118816515 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093568513 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115027585 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15444654 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120136883 seconds)
  done (took 7.440772666 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791182429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157165665 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089936456 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882017341 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134986537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102886311 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775724204 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111427422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255925753 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755413908 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134056169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119069739 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206110102 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258316809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926510565 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286482931 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.668549809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12644289 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153102576 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152846915 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117900533 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13511509 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108227465 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428847451 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117173673 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111185492 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096969865 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119714323 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159352277 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125643264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112858273 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177580582 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247488467 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204052881 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092904382 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111525059 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110103521 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17020392 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262057123 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19162877 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179226906 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108936013 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087900427 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120895599 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13201966 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085157684 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185651447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174453327 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169139024 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115862502 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118678953 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097981076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121912509 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163587021 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121915179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312026786 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319307148 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088792791 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121685212 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126082436 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259100242 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101037259 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225131324 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13921379 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211340487 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090483025 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778661521 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168859209 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110065007 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094637889 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119692572 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11587127 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097177246 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167162427 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407043789 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124323017 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114098084 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089723225 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227512868 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102006656 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111979815 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161275714 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116887462 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119730481 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102069965 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122257947 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168156643 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24888951 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100457455 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120219603 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115414929 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103514795 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11766675 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209869507 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219614622 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161424307 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232054853 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099948862 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185479136 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168897677 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118306687 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172182443 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118765845 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10096533 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122960763 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21877868 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14564229 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122730008 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093939347 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119982328 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147739718 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126469142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095936935 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191195305 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460804111 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169388403 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110214622 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127232769 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099558508 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160785561 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118199975 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261689485 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121749448 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169755923 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118585392 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088731855 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120926281 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163423127 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121671867 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097749197 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122544613 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118584663 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232357333 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215670343 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120500941 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221847794 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185010266 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118852581 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171851386 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120768983 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168721037 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120032885 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097539567 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117473184 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769524526 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100678874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121069992 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116005556 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187438066 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089050706 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124813825 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124249493 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086634983 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802742787 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126877701 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098493914 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124724718 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118833318 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119750393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09746981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115980752 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161055731 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229414681 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118614379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097842059 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125496854 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159701472 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117402266 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125321424 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102415536 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126789308 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121743998 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092265592 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125432392 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168700535 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185395636 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217309096 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575349153 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112514341 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101440881 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228572335 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113104518 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289339455 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096643318 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224574342 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161184014 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122233754 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319021123 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165192585 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18619625 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127913347 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173385948 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110726355 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117248557 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166186544 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08857832 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118163152 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161661588 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125445448 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122084639 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959357702 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08960069 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225531881 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110351519 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170524193 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117485027 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118923338 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266001293 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113017963 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127450131 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165216085 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114378331 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101758178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.868758538 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124536466 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100066241 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118347096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222030032 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.1652038 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119901709 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09501495 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120120433 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161509602 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229737308 seconds)
  done (took 44.014846047 seconds)
done (took 63.808587868 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280080852 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217479154 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270175549 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171686888 seconds)
  done (took 1.925848518 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173098178 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150304688 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121000986 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109095794 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151837921 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084112994 seconds)
  done (took 1.697642604 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365486572 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278329875 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243390682 seconds)
  done (took 1.803649122 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319571021 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249447727 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47383193 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325689626 seconds)
  done (took 2.380379093 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211822533 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133623998 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112067925 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102961312 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199199922 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247135992 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.1433878 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202223202 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097394827 seconds)
  done (took 2.408167406 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198409678 seconds)
done (took 11.324770073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.32849168 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.15161132 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097649579 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.252760818 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.218140948 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.171060608 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100668281 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.143686593 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.157066238 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.149520632 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.149395631 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.256927789 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127326346 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084672089 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120719208 seconds)
    (16/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136187507 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093804262 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119606576 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.196096512 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115462047 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.100901362 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096699404 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.180710186 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.233427264 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.171468952 seconds)
    (26/309) benchmarking ("sort", Float32, false)...
    done (took 0.173368552 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.214693846 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172130565 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.134266877 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.24189728 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109861709 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09266715 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116882039 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.093499838 seconds)
    (35/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.202497115 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11447517 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095071861 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116105015 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.214705824 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.180073386 seconds)
    (41/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.17978988 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138938346 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.156040494 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0962821 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219892659 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.213068111 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.215587645 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142800727 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138779476 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10032394 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110569665 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11557909 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.213200478 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117981493 seconds)
    (55/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.091625613 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135106399 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11727304 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086448863 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156054599 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09869054 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.179602031 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121968587 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.125204777 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115823522 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200529156 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.159627902 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099086213 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.141322262 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139347585 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086173495 seconds)
    (71/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117598947 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097139029 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.147840271 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.187229945 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.134468648 seconds)
    (76/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135794109 seconds)
    (77/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.099060769 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199933872 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.170533732 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.222775679 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.189525621 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216919756 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06668596 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121479413 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173268414 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109993352 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218872147 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091666744 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.089242447 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112653052 seconds)
    (91/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.124803701 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.187554126 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.138875337 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113232691 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146499009 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185820109 seconds)
    (97/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096595111 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.126816382 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.165571638 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.163278434 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103918223 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067327975 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077843451 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103887397 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096107256 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111790365 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086295843 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091888156 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067302489 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117337979 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147706779 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.149644046 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202827725 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067764449 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195244158 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06721406 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11765697 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067750506 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.192103977 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143853653 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174591718 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087263367 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.34127791 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097158764 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117619775 seconds)
    (126/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130577051 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.207048412 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096020831 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118278837 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086326177 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115486739 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094244891 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125088925 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092525832 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.187029314 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110748096 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.1777115 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143531614 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126449406 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085270974 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12659821 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.092856968 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135437642 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138191902 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183385833 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.151306398 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131320538 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114321067 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086280385 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.133460225 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09421244 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112519268 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06880286 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113754122 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.216398612 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109939717 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091543283 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086654445 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.18054551 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.084559782 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.148567683 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066403031 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090325425 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095316542 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076042223 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091768344 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085503599 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091860277 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08713355 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11616809 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090471653 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1345023 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093147273 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091313569 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.137597537 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117607001 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171066723 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084389056 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06971119 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128567642 seconds)
    (181/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114292585 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153906031 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111097627 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092346277 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.091485058 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067970042 seconds)
    (187/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06518748 seconds)
    (188/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091818702 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067873328 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118332502 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211688429 seconds)
    (192/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.124996814 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066564128 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180140344 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091650268 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09980321 seconds)
    (197/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.147551893 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066635015 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110867656 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085254951 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109423092 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100016561 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091935147 seconds)
    (204/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094126037 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082381493 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093140653 seconds)
    (207/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092742629 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120728577 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093696122 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120992573 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066687001 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135182887 seconds)
    (213/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087811992 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092549933 seconds)
    (215/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.114734039 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091603538 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.148816598 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092539945 seconds)
    (219/309) benchmarking ("sort", Float64, false)...
    done (took 0.170935233 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087483613 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121557601 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094100253 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184134284 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195376687 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.152068839 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.112285311 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112352499 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.102852432 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113485647 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.112140332 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068754319 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163853804 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116020388 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088380711 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.161164165 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093904254 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110920337 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112309816 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119136367 seconds)
    (240/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090085814 seconds)
    (241/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.114890793 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189999689 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094022472 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113436109 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110101307 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068065528 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.17267724 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06738852 seconds)
    (249/309) benchmarking ("sort", Int8, false)...
    done (took 0.190131932 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066915833 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.093409904 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107730412 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112620688 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067375624 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091874369 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095890162 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112465079 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.193540267 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087597414 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067989626 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118407425 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066627881 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123356133 seconds)
    (264/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067711359 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119350567 seconds)
    (266/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106075921 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114017673 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091791245 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133005241 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225033945 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06815952 seconds)
    (272/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.093080753 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108150047 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091870338 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079518686 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084484557 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113066633 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066176304 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0933632 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067804223 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108884137 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095786607 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108591183 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068385487 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136753501 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.0863217 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066675711 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120856318 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134203331 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094614297 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066202085 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114452755 seconds)
    (293/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093754417 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093931652 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086333212 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113103413 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115942342 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09024743 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112513894 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172996214 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115692721 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067147166 seconds)
    (303/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222086747 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218485536 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118639236 seconds)
    (306/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066999245 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076568737 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118924032 seconds)
    (309/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137537021 seconds)
  done (took 39.893039295 seconds)
done (took 40.809498336 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101644544 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150259105 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095590025 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137122666 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125300752 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09312275 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120539629 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096528164 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124556872 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125610676 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098614679 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094116717 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097369238 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121453125 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095683773 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141351015 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124573963 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094061132 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120323523 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085841695 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120970367 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085851867 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113967376 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070295425 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123985922 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093764015 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118772079 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119937776 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087790184 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110892863 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091464822 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118758376 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087975234 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124814044 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094129013 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120681853 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097027241 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122073066 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087338995 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112720394 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11742528 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087912864 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11714722 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096384417 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117048898 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09349586 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119937616 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099297485 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141033509 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115895445 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096173669 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12212568 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096963407 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118867877 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090321519 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121843553 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091435829 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141055211 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121743544 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092539395 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119578428 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095284378 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116901556 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094902328 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121156646 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123814129 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099805372 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118967264 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097256367 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119919769 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087340203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120531714 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089828919 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112647416 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096782303 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123267843 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084853984 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119215292 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118032135 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093146297 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110119492 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090169115 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11210732 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0937375 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114095099 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070849429 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089599783 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118252578 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110115228 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096519896 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11756199 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094344027 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112659652 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098529671 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111726562 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09188147 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112761175 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086782868 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114325073 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090183746 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112193173 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088763884 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122584091 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088098063 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119441838 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122561941 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088793167 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117909032 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08790272 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110688531 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102722708 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123231121 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087295625 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118419025 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08601898 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120004717 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086276753 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112397353 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086080219 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112975562 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092587955 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113318679 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088772115 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119936521 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125028604 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087858495 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115082825 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090633887 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111235119 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094000441 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112200038 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087975935 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113706387 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078901521 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113864454 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088139082 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1183001 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090668116 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119762749 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089742269 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121100796 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091736891 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11813974 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091761616 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112383236 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073983457 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117808228 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090100998 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11436179 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087202994 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115350494 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086846611 seconds)
done (took 17.076544336 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088852353 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186160449 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153123343 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142530022 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10693534 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11403273 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121520046 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120036059 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114509585 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144352665 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11146921 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133551142 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149354526 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086606783 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113631278 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091761324 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115117711 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102682239 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14753636 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134033973 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165342819 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085885042 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.1484156 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137266774 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12061218 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115855446 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112819425 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091014782 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116465592 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103945246 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133869366 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090307956 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114400167 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135131482 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105044324 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121516342 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086556941 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121075068 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087003093 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113328326 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14075535 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108841644 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118817647 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11822512 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092772109 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114982972 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089528825 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122582864 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098291628 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117843124 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126516274 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156759765 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091667552 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122312579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085864872 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124452146 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121265316 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091266031 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112538962 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091476342 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111882195 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092383865 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127629088 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142673112 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092030343 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123296346 seconds)
  done (took 8.695237088 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105795614 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140659174 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104697793 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.148864367 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11169966 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088562386 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113359731 seconds)
  done (took 1.794210582 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089179944 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134463755 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110942137 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137287748 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131563168 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109281689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124364598 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088230892 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132562994 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088293544 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135941862 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1529861 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088754436 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121565805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137919652 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088744826 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138373021 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087615136 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117565502 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111264383 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118156053 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135586253 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090706264 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115362581 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102250301 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115304951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161873184 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094099865 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116885131 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092610905 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112826062 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1664383 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105843438 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126913775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087190597 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12993018 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128551974 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08730803 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13080857 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093476611 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129664756 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088625969 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116744736 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085911606 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119941308 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123563584 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091810567 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114299104 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093114799 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134574529 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089994045 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130371939 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08871712 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119291329 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08991872 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121224383 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123261367 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091022444 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133965847 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091987434 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131604937 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105316668 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130644231 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131055108 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091609837 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128689619 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102990369 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118938755 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089353159 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118981031 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129848683 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088036039 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115674647 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100765132 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115356286 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113078407 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138990149 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08942202 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126229666 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113713508 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090613588 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113863303 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113066238 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119870238 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088988515 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119876275 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091349934 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114075613 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087265322 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11904638 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086613621 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116296336 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090916381 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116193969 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090785483 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132565188 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114572532 seconds)
  done (took 11.888576567 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091530806 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114611915 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092530274 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115421144 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090749639 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115659061 seconds)
  done (took 1.612626122 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115171177 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118617941 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102715629 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121406858 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157165484 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102730279 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130514303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124964246 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107320567 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128489704 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129358585 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104828746 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138083679 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121695186 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104009951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122579176 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103872238 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126117699 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127369902 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095808197 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138713343 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120735386 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097111665 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133691929 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11814282 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097170733 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126102353 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102325164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128894807 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12287341 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09651753 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119332764 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095705358 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124855296 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130391547 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096663694 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122270734 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119207535 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101894676 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118818222 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10476634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123656522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12755452 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094452608 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125233026 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121083849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095803253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126128701 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104009213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121081057 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120327792 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09647659 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118839988 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094658157 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12308965 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123270554 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095231122 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129969089 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095992998 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123786345 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118002587 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093680141 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125033219 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092426105 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131770352 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120266521 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095769981 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123396834 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120956273 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096758327 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120210129 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092471309 seconds)
  done (took 9.285866205 seconds)
done (took 34.258561265 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69687997 seconds)
  done (took 1.688666359 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.720285419 seconds)
  done (took 1.715194251 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.44983987 seconds)
  done (took 18.444537456 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.508821241 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.594905277 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.888875568 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18373141 seconds)
  done (took 3.171194302 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.975648288 seconds)
  done (took 1.987147495 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296728002 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259025963 seconds)
  done (took 1.555723852 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.782570681 seconds)
  done (took 1.788892357 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.366397895 seconds)
  done (took 2.366767437 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333708638 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185188255 seconds)
  done (took 1.527178405 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551409094 seconds)
  done (took 1.559688034 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.954169905 seconds)
  done (took 7.968691499 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268994139 seconds)
  done (took 1.290264208 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302085015 seconds)
  done (took 1.313502417 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.59796479 seconds)
  done (took 4.613207458 seconds)
done (took 51.993667551 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09924518 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127724925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102536757 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125686398 seconds)
  done (took 1.464152213 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101679083 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121521368 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099407427 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121850202 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125470045 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097120344 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123221396 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100103536 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122728611 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096314692 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123106488 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119796785 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098964294 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123129092 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092668837 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124772551 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098275687 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122154228 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124924949 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09683576 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11982021 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097881554 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125995154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094438782 seconds)
  done (took 3.689179999 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100926316 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119901523 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096812336 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119012689 seconds)
  done (took 1.458735389 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100007459 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142453996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13922581 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100728357 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142855765 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135634418 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09241834 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118075242 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094713416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125820072 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090207301 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150552843 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138886319 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099377725 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128705455 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088846891 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.1191842 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137014237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100592992 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127136454 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095123077 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126903851 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089945253 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140954486 seconds)
  done (took 3.843456364 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17173587 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129500636 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139664092 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09606423 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161745523 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140580672 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088622225 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142028368 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087126122 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133530634 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117765434 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134298652 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130581551 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087921613 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115221488 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087324612 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130935408 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129957042 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091300351 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128935536 seconds)
  done (took 3.464835952 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098184047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117714076 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089038107 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116591203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099926157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121534702 seconds)
  done (took 1.664517286 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091999014 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114819915 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090664426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115050705 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095331337 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115248572 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088946736 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115666852 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090688283 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115364602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090041309 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114302841 seconds)
  done (took 2.26062016 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465582443 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092435052 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121899943 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114290092 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096937681 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115075203 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102751053 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11915173 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139570398 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090665744 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114593013 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092895166 seconds)
  done (took 2.687544998 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234626799 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127537736 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288007763 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367333307 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157940759 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178433003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282937027 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164188209 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224369865 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16748685 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204359691 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225906937 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152087006 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190080666 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138907521 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119191903 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233919987 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247421196 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155300581 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208992751 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228942386 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168521522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180660454 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152437807 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138184227 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174350364 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095196006 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13174889 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234931232 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177521223 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188503075 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188142527 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119822767 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237726573 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255879441 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219525809 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285320424 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109624656 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177377867 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17087436 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266757249 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139394204 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205046844 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157033551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13290031 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191195626 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166260591 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.204873543 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153792148 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113277822 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224259708 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239444887 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193627403 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138929363 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305837445 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154632667 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175942328 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193493005 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252700559 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229166988 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189483872 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121181986 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189051028 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19223223 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212877904 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175476135 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181021194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148636943 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227471088 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189306515 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166187167 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191729209 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216613375 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141010943 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170255481 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173807697 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173613602 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258451403 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184775474 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123796843 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170055805 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150837649 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132167094 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169245797 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125564824 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212861709 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1454599 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164346019 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244735978 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159847915 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132922714 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232879566 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230248469 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121486083 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112618967 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155847306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155476737 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196023216 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140959871 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160864425 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162910769 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129548371 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186004775 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096335271 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212182427 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091201228 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1737988 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211521916 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099728686 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163078857 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15270792 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150860212 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173679159 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225620183 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11578257 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135033438 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20908324 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204641195 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150815736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179464745 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202874324 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146022258 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151060786 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198585523 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245158903 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140179004 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203761657 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157296631 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135873724 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104349213 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210367538 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155007285 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160480845 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107615825 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.209335311 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209961471 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12733081 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111084648 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222599557 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132814051 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105972136 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163802571 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150276431 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140571561 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154268752 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153563215 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183435442 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177144436 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154738598 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164742181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153512997 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254310652 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143527627 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151110857 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147975794 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094898896 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221215313 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200483677 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131246811 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205243613 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170856157 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231585759 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173633277 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135167644 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177644241 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104046983 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122281369 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192852437 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168680538 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161359983 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.224895971 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20247747 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208050029 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185567174 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173850341 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174194436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166701548 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157858925 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140583029 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162181746 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174346855 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095427158 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145169014 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135897409 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149749889 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143825571 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106460942 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225465224 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170323744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218125837 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132869559 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150627376 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181220549 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130394796 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173677076 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206005246 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121154046 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228828592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195039365 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187943548 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144200518 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231095205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093119521 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126962489 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143215947 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171946177 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133694879 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109961615 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164303722 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181070781 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211364506 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178835747 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240608288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174770359 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191482166 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121319426 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142600523 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212273013 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178700491 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188183524 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117375107 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151399468 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177585364 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159046465 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256018474 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169051194 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176953542 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237006257 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150934543 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104325028 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152143602 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222717374 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155452525 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179032866 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148108284 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113948219 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162188692 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134242218 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160908211 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211897289 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163774095 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189986792 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151968874 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184877299 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129289222 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164218115 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160996366 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165776083 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081141836 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202179142 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205478971 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150429478 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168392794 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190322592 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13335483 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307384279 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246157762 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195924559 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139928893 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15679084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162349968 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165533941 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172588594 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179768759 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159461873 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188690985 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159667189 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137799614 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140589658 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120453814 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15195677 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132868234 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149996543 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177541735 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140917857 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185557021 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163501776 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160054045 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174148519 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151713525 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146202538 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150625781 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215803213 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184358896 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239520334 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15154217 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181278498 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233574224 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099379923 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133511357 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13332095 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178449274 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109362402 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22252536 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189465045 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233550864 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185529166 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194695356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141270056 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120359447 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130117784 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202601191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209903153 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154742503 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160546733 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232447187 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120586946 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134023915 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179166159 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295357962 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145643294 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225172908 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080973019 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283679822 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129065199 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104749221 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164872477 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236977585 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137297102 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191324019 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173140856 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171581004 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167046341 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150608494 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192865667 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244805036 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2034344 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178996601 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134877461 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156850919 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17702531 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219725208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158476949 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.114538997 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232642063 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198276816 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197211259 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143906206 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171760052 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169031531 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158722897 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215799788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107775236 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235546117 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105954808 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223315413 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155286037 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144778173 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178239719 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189045967 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143863239 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189518712 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211806088 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10768573 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135402964 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170564925 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204738755 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15814138 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101611134 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181043214 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126695852 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194108459 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259963872 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137103504 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15539352 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148188193 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108125588 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157067453 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159268176 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141853034 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165094878 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206305335 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1362428 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191458533 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23399096 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170404923 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176125964 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146442899 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694311653 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131612392 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196412114 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161030969 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20506725 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150951675 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174067819 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159181076 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168647156 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226705311 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160915937 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231474961 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194673895 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.20733082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106619187 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159067153 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164684584 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145630781 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153084476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169173275 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161504567 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154862007 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179248523 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170978893 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136349643 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141673603 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200511563 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161822459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183040311 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180433479 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140607074 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174151168 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217788545 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106155395 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207714266 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20776321 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143806869 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1546822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13383253 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157661876 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233610806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127292449 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23419529 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188874581 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160996783 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170666722 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148758519 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194022523 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158902189 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214279666 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14817018 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160904201 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129396172 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139400273 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132517858 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156305826 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168666678 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150836639 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160802003 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139640944 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194959539 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125862916 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146598552 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293936884 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22500564 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217561821 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137895739 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106848997 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162766515 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152632753 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.206117002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180228574 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107366442 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137599045 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137879329 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131105409 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140900295 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158264918 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198643058 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167370366 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235966152 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.10995553 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283358786 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141939187 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155601803 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090476613 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133920986 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150232757 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146895261 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131299713 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221936329 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266997003 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146942036 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106575572 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151134435 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125504744 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110222656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167412541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164015585 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177722404 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146826256 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109830814 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157393279 seconds)
  done (took 83.801721109 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164819362 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134937148 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148644135 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204526394 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17824368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270508386 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211904483 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254801064 seconds)
  done (took 2.681288439 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093776703 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148115856 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158512791 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134532861 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092974962 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119249106 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349648762 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133870399 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117499661 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122795076 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175698807 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094041702 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.559463807 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09210638 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119135857 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110856709 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092670432 seconds)
  done (took 3.823085256 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.481384764 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.733160517 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.517004353 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098326981 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.190607437 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114205804 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.772003289 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199735041 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117280377 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.491306445 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.78044416 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1622183 seconds)
  done (took 18.77416628 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.10034027 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120676536 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108704022 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136408974 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095880295 seconds)
  done (took 1.684864078 seconds)
done (took 132.308244996 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104622866 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405799312 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071809314 seconds)
  done (took 1.631834752 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107958731 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137248796 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109010325 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136902217 seconds)
  done (took 1.622865239 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098893514 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126572774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110231547 seconds)
  done (took 1.46104555 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324239269 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191930868 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165428102 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106815387 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129633536 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103937056 seconds)
  done (took 1.466827347 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09738493 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128199418 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097494598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129910464 seconds)
  done (took 1.580252813 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095513449 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.075098943 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103525599 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075592354 seconds)
  done (took 1.472417859 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115602429 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13272867 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103535976 seconds)
  done (took 1.481853938 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130918036 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13969792 seconds)
  done (took 1.399856647 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106993191 seconds)
  done (took 1.232799474 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118664992 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170882921 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.197474081 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165602705 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229770211 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166052047 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141928475 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113955723 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132028342 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145021772 seconds)
  done (took 2.71103821 seconds)
done (took 17.969949444 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105367216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422505989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412771229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117231734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722058785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380073925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035061068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147179614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166736225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093074732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140562463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675276915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.071063013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377697668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022729583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.472746127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674808787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121696867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119805062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09515605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020118572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09282125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122949008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093009541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70360888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426276602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096207457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.466874638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093324295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127046332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383645205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124445035 seconds)
  done (took 17.238885262 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095878561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175044526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100111177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139474942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124253285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095115969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126057329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09353917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179716813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124212665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110328573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123360034 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125825224 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095891217 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143705745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09223083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125725733 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09245724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122523373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121296078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112200917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121078057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095035289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122310181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094086008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136778241 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095110298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122558936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121296583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100444523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128759134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095599286 seconds)
  done (took 4.880411344 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142515081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184939635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133302891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126888747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170804325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124834401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200104357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118604081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183975372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12543475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141030748 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09313348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157878088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122976832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11594367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122468282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096647969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123075868 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091903596 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124787744 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140419373 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093831179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122744438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09308779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124270356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108373542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125831028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121183456 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095131757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128029713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100035838 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125109478 seconds)
  done (took 5.216286007 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097565789 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126777375 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110995944 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139390939 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095446691 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126818806 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097217182 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12613489 seconds)
  done (took 2.053069827 seconds)
done (took 30.511705226 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113439738 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1298717 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108087604 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135968192 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102061469 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135145635 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091251635 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135744123 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.140091528 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102817077 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138935363 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09223136 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123598103 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092442029 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136286916 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098293796 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133354506 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102531764 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13599453 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132984165 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095985665 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134435695 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104130969 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134060708 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103517605 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135467162 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137674162 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100966035 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122569804 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095350336 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125727448 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104890188 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128725424 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105501078 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127813547 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09729169 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125741537 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095060256 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13447048 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133921577 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101012343 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134231118 seconds)
  done (took 6.08511838 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109088923 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143251609 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106374687 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08456268 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118698066 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080988299 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139284367 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080065458 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111853976 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109368444 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077308643 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108427129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078416651 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101728688 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078564923 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076198855 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10926348 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07694971 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07643284 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106990155 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080627418 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072763745 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109688328 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079335704 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074631154 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111524949 seconds)
  done (took 3.639032732 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100717501 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136497395 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11273338 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184736428 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162170277 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099940461 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134408639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.1111612 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139587733 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120579584 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096584857 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149720376 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109933057 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130274519 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091324622 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139116682 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135946239 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095024857 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128666718 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11303765 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139548845 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102632968 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144248601 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131984728 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093557819 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12309464 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09766477 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135412888 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097449737 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132844059 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096944379 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12708686 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122750478 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106538443 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127000535 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095234972 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142308642 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10265268 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131916009 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092303328 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127649514 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121803297 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11506826 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169506789 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092105529 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133673271 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099639905 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133760842 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121996744 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113040982 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131880879 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09262507 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127085822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09161555 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123416455 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106516867 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125549402 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094258888 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132685552 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124227132 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105866307 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126466995 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109827118 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122924998 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100312072 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122704693 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093664971 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122190229 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113947639 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125227794 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164296699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096360309 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125158959 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100951089 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130841069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127241041 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094136317 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137951327 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102894086 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126760347 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102664619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126784273 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095119492 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141943998 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095324133 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125740579 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093597364 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129962932 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124877556 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095691016 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136336256 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093814248 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126445845 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111362923 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123496392 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093588377 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130142138 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126781626 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093224537 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135976857 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098684819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125140672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103907043 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124540961 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095305518 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133367253 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12704014 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093218486 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127573703 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099946466 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124187242 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094001306 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126458124 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093610538 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13353684 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099647545 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129475967 seconds)
  done (took 14.942452124 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230918591 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215527001 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208795261 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295295328 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137347585 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114712034 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212326304 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157223201 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125005992 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160450565 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162186957 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182527699 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139646147 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181310068 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142572997 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121772792 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113555154 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166247034 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215267111 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289989395 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113060781 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.13452527 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163372857 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161410032 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106408415 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134740127 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139886317 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106166971 seconds)
  done (took 5.787010566 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108976215 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157367554 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097381468 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145889815 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149944636 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092073597 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12940087 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094396165 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137238028 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136704205 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093209753 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13095309 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099737637 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133344618 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122906299 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104624114 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132525202 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095924508 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127409881 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097206013 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132261209 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101153026 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128217854 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091167263 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134713399 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121602723 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087681411 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142652455 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093151199 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14737848 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121784477 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10027235 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134339084 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093935111 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123844896 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094931255 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126419993 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095545443 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125931786 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091505111 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123599077 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078102785 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122776252 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106831499 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13092469 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079399055 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131509596 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127707963 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095121988 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119739657 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097271001 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125757654 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09751609 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130705755 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098824613 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124718522 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097053687 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115888636 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100235892 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125791249 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085246868 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091116615 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130412598 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118769601 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102792138 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128680837 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092829465 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125741282 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098115535 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130487964 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095219714 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127190588 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091502946 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127044715 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095654963 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12927737 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097022342 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123558123 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092290477 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12484884 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075911735 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123756305 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07443528 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12706408 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09249452 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123063173 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096548596 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13111673 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137766642 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095600136 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13225366 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093935443 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123149346 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096447693 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11378786 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097322795 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139989978 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141747575 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09505386 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122192934 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107561819 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126163468 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093171665 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106498804 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102426445 seconds)
  done (took 13.050184024 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128732368 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155008469 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094618633 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144331312 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157037822 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157748664 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102484744 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131141779 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096089753 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142974666 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094295554 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133053785 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098446214 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138050376 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157086218 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104477071 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126853429 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106984198 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132698275 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170909759 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113168294 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143712056 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108407601 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12544596 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098800161 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.14160053 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162939899 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107695966 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139020635 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142137892 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109188897 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162737181 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112206844 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130524693 seconds)
  done (took 5.544847506 seconds)
done (took 50.181326083 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.261525902 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.46006623 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.232533573 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.243571935 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.249729384 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.242543239 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.264647137 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.238163477 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.261518132 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.234818248 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.484303068 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88966928 seconds)
done (took 59.224271978 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.245768219 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.369722647 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500167703 seconds)
  done (took 4.029851694 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.588673155 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.197302731 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.500249401 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.233695844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.234156168 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.528241896 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.992054384 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.606406371 seconds)
  done (took 28.452747916 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.239756515 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.641111372 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.05330939 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.14047517 seconds)
  done (took 19.23554672 seconds)
done (took 61.713691513 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.262400306 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.305896253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.245598882 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.213943803 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.354172951 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.268278154 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.589352964 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.238568194 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.254561195 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.216191644 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.257561837 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.248021979 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.246784787 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.597637181 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.242600031 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.24817235 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.272051043 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.750917423 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.652701498 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.245967503 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.256597256 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.258724705 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.237766723 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.23872889 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.271553749 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.243271647 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.236357591 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.255458283 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.919938386 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.236393504 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.260420144 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.784119686 seconds)
  done (took 192.072116706 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.238166144 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.282043311 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.411537777 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.280892764 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.73459936 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440215508 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.373236785 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.815214945 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.260763626 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.268469638 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.56818674 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.23723768 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.621089507 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.209897427 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.24439275 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.243813344 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.562612566 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.630170957 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.256343893 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.473993711 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.250365496 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.461133554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.365560845 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.529218273 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.290062306 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.334385598 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.253145961 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.27706709 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.428868156 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.493251469 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.248094793 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.295001395 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.884044726 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.098053777 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.258538396 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.260141913 seconds)
  done (took 152.04298841 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.536218875 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.23739392 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.239670958 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238374768 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.271939288 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.238632163 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.839598378 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843901425 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.737583997 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.579099953 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.241733814 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63987091 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53748546 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.239664897 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336959209 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.253718816 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.241844405 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.254496869 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.284680517 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.243282874 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240788264 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.840728387 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.256491913 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.366705245 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.420783269 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.259609841 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274457099 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.631944422 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241920167 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27402966 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.574532497 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.29369813 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.240586216 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240406157 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.630806693 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.003703491 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.241819066 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355189765 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243454798 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273475849 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.242154411 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.523988443 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.241317348 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.241810135 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.244123213 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912430566 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.241089843 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.844004807 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245356362 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.199971869 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.242233367 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241956402 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.721358659 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.90151328 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.261237815 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.2421494 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.244251734 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.243235437 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.24268704 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.275869445 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.714149986 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.334911216 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.260941772 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.246070801 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276157554 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.243530948 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.457190949 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.262685777 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.766443592 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.322587285 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.350154297 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841035769 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247254232 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342026487 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.365739884 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.243535026 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.242412701 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243540514 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.244042359 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.357085774 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.244237792 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.674357036 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.423970758 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.265402112 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.646203671 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.34269135 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.24364467 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651419724 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.244467739 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.243966598 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.022824579 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343925191 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.243364785 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.243972302 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.243821856 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.677265308 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84732231 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.523496156 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.244300515 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.2443598 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.683689442 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.245635351 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.696952978 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.821272256 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929962538 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.246491122 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35817424 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.425460746 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.265592218 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.245900789 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.618900877 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.246140657 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.30455823 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.245825119 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.645861869 seconds)
  done (took 372.086362868 seconds)
done (took 718.901187291 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.882912985 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.879480382 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.996448488 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.869209283 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.827474128 seconds)
  done (took 10.625641609 seconds)
done (took 11.795256297 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447980625 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.446757163 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309167557 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448956498 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276785303 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467374808 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427219403 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.265446623 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.355555432 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.334474862 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.353758071 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.303025459 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.275975669 seconds)
  done (took 18.883955668 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.573567954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573837426 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311072212 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.591202748 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286694254 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573928149 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.449970936 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.473146845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.466884301 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282265647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259556693 seconds)
  done (took 17.014281821 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.574640059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.57691564 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.31363761 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573377523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28780075 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.580142352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.452950252 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.468965011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.475440036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282480419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259162064 seconds)
  done (took 17.018045846 seconds)
done (took 54.085463962 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.255167824 seconds)
  done (took 2.427618371 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.290773396 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.457204598 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.276446991 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.260616463 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.257537497 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.258434306 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.260429162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.257514014 seconds)
  done (took 11.493425212 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.252605228 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.25558912 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.257144933 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.255933713 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.253570807 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.256527939 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.253469148 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.253300595 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.255726159 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.257067901 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.253955112 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.253049996 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.255280034 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.256307261 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.254770365 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.253770857 seconds)
  done (took 21.252916793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.255416495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.254692289 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.252983762 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.254831998 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.255554038 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.255289544 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.255252773 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.254650203 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.253369987 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.254683293 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.25658232 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.25454155 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.255717777 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.254617034 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.25446978 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.254448577 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.254434477 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.253147898 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.259859363 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.254857299 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.25621002 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.25487847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.254568609 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.255574443 seconds)
  done (took 31.298650148 seconds)
done (took 67.644921934 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.548750044 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.094694128 seconds)
  done (took 9.819790696 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.258494864 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.258242331 seconds)
  done (took 3.695428795 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.258014979 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.257467555 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.257128531 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.25770153 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.257938146 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.257810812 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.25733533 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.25780997 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.257761138 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.258537047 seconds)
  done (took 13.753916714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.258535707 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.257211911 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.256366499 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.258104019 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.25913537 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.255941839 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.257199349 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.258710683 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.257963269 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.255784127 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.258368314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.257906144 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.258587594 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.258067089 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.259030873 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.256000484 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.257023426 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.257868586 seconds)
  done (took 23.814702915 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.25949098 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.259058121 seconds)
  done (took 3.695519197 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.257666139 seconds)
    (2/7) benchmarking "second"...
    done (took 1.257257451 seconds)
    (3/7) benchmarking "month"...
    done (took 1.257466046 seconds)
    (4/7) benchmarking "year"...
    done (took 1.256533017 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.257854868 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.256771742 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.257376565 seconds)
  done (took 9.97935356 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.261032788 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.436598734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.52436359 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.841214768 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.263137206 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.263702455 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.119902443 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.263958533 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.265382077 seconds)
  done (took 14.417414668 seconds)
done (took 80.350556524 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.285714192 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.270587531 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.479190696 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.270767918 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.273065453 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.553044366 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.280617612 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.379344054 seconds)
done (took 37.969761436 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.258037122 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.038701455 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.047633586 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.252939408 seconds)
  done (took 11.517919525 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.245537815 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.230428148 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.254664306 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.316347851 seconds)
  done (took 18.227164633 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.325882784 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593460527 seconds)
  done (took 5.103269916 seconds)
done (took 42.284732837 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262745391 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.262194379 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.262068462 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.260112827 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.260062014 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.262184629 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.260565278 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.260435422 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.263168507 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.259357292 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.263343883 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.262803194 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.263192712 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262690397 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258926685 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260673661 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.262618767 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263158122 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.260029686 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26031564 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260712168 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263896932 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.260077055 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.260336536 seconds)
  done (took 31.455839491 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.263476565 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.260591535 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.263806924 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.264396997 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.261602579 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.263218682 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.263759551 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.261757194 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.263089159 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.265416621 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262411766 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.261215081 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.264819893 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.261118395 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26326769 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.261447393 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.26426486 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261718445 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26485382 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.261723168 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.264701285 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261969436 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.261963581 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26386383 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.261837121 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261401347 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.262833905 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.262444741 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264745999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262631898 seconds)
  done (took 39.067815998 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.269618262 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.271286206 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.264903761 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.264730815 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.265658739 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.264522746 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265249727 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.265052892 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.266600648 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.265614191 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.266820422 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.26538542 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.265334586 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.265626728 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.266211679 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.265980553 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.266791975 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.266730282 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.266135254 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.264872486 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.267117742 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.266791874 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264905397 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.266068759 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.265829701 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.266400282 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.266107251 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.266903264 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.266533089 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.266946017 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.266654515 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.26611479 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.268195764 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.266289657 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.267050672 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.266329252 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.271697822 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.27405959 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.2659783 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.26607813 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.267460346 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.267830031 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.266741463 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.267297064 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.266386459 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.266926686 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.266682249 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.267876271 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.267519422 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.268204422 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.268022364 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.267704292 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.268065385 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.267595057 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.267582408 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.268903185 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.26842115 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.268659755 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.268015219 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.268770683 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.268452697 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.269033761 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.26901443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.267677925 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.268639378 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.268681655 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.269279258 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.268979158 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.269552993 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.269129067 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.269118153 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.26894651 seconds)
  done (took 92.430487446 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.270941873 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266544589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267297129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.266696136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266550803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269469444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265916755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269503561 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266896907 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.270373196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269310795 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266791974 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267391847 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269473074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270016399 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266817894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270285337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267980975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.269894767 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270950419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270694003 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267848094 seconds)
  done (took 29.095047879 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270521548 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273401641 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.26775348 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270747648 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.268160167 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271393244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270611784 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272758338 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270934351 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268606836 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273729473 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272361385 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269124082 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269176119 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268835824 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270287108 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271786662 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270138714 seconds)
  done (took 24.058856364 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.269773903 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269138811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.271721436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.269775994 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.269446488 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.271723669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268860356 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.272005659 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.271081604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.270111538 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.271927704 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273264741 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.272807666 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269978877 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27274455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.270921417 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.272506994 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269959701 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272601815 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270008664 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.270625535 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272253121 seconds)
  done (took 29.152601069 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274188533 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272833488 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269470123 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271077757 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269945518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273536306 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.27412897 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.271465885 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.274438893 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.273228157 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27187708 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.273546224 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.272903813 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271431022 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.271243637 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271575207 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274479882 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273111089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273935457 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271521409 seconds)
  done (took 26.640360451 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276360108 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275795258 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274655803 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275317192 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275977487 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275631402 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275857187 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276248191 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275819167 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276741 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277173086 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275355513 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277506237 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276092442 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275815608 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277033947 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277470716 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276803593 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276432938 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276498516 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277257212 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276691377 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277510425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277022208 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277334035 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278406707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277648506 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277432497 seconds)
  done (took 36.935255772 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275805214 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275981848 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.272836603 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.273375561 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.274375229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.27569661 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.2737645 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.275279366 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277064124 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274571096 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.277071305 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.27673819 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276995709 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.276590231 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276222615 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.276437368 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276707661 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.274459361 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27550603 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275219688 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.2769794 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277534606 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.278048351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275369238 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274641438 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.278041095 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275954859 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276208957 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27805566 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274774153 seconds)
  done (took 39.470520196 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.297169426 seconds)
    (2/2) benchmarking "in"...
    done (took 1.295483883 seconds)
  done (took 3.787830309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.275064007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278462155 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.278047353 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.275099512 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.275807962 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.277592145 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.278602661 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276816522 seconds)
  done (took 11.411025697 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.280534189 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.279229245 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.27923696 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.279096349 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.279931059 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.279348486 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286627286 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.300480938 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.280581499 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.281159485 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.286117517 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.287796891 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.282345712 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279610611 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.280144834 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283069036 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.279718068 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.28148726 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.281609147 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.281005394 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281860689 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282839689 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282980311 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.278553448 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.283420047 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.291555939 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.305526881 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.280991841 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281064001 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.284872079 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.281706923 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.279392942 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.28137503 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.282060371 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.281658805 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.281157647 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290703047 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302665704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.287807193 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303135079 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281935896 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.280180817 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.28253217 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.282372983 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283768972 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.282189827 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.281941615 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.280949591 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.281532812 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.28651557 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.287430037 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282994074 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.279982139 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285538034 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.28338909 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288950677 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.303785967 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.287732832 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.29288098 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.294698603 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.316844586 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.309836713 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285784598 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.282471007 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293600073 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.30777805 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290350302 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.301834597 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.280756954 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.283645627 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.290747741 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318063819 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.311174366 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.284044914 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285446732 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.28462084 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284637502 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284517151 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29154225 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.308140453 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.284061354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285277057 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295308962 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.307959543 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.284345384 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.284788923 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28560581 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.285318253 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.287776288 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293854237 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.305752107 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.284715191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.284116009 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.285709768 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.287302948 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.286530936 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.285076406 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286467741 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.283191169 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.287388107 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286625694 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290171528 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.295617753 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286544983 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287493575 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.292246639 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.307305319 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286451167 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.293639343 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.28684217 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285534659 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.288687141 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.293638648 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.28467023 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290101595 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.296098513 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.286883473 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.288449909 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.287247075 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.286465993 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298934185 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.313117997 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.286780324 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.286889849 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.292929106 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.29870077 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28699211 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.290582455 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.28738097 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.285170138 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.283943786 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.288842104 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.287724187 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.289846745 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287612423 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288984134 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.284658383 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.288223572 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.288973487 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.28980228 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.289455867 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.288717173 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.288794352 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.291775309 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.288227106 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.289598193 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.294130689 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.309527416 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.288587264 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.290350028 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.285457471 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289761449 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.288805633 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.289541586 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.289640182 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290145203 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.289844655 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.288356327 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28922463 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.289466268 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290464942 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2908915 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294588458 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.288431548 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.293044478 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.290120787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.28662712 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.290308282 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.289108372 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.289597686 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.290324566 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.289982511 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.294853592 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.299708449 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.290448884 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.290742313 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.293546781 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290583554 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291387257 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292776612 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.294463477 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.300226478 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.291333415 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.29810107 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.312578622 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292052937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.291319871 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.291562993 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.29086395 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292392993 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.294789201 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.300336471 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305061362 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317989576 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.294602869 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.295656266 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.294074064 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.295626558 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.297022286 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.292793142 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.291458248 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291941014 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293558805 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292167654 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.294252128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.292350294 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.292885064 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.292179389 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.291278321 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.293448466 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.292369887 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.292211192 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29396321 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.289326421 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292561613 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293351802 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.292628653 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.289433717 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.292484993 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.292890035 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.293861572 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.293136766 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.300288523 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.290587927 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295179396 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295712179 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.294442148 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.293816544 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.292878574 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295722223 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.294123854 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301674336 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.316417278 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.294184096 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300123542 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.315820613 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.294824443 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.296867468 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.295260034 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.29274664 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.298590261 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.302997313 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.294242926 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.296148619 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.294595753 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.296250743 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294974875 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.301653647 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.312814647 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.295564667 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.294879282 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.298271644 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.293839468 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.296891994 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.29636412 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.296533052 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29754274 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.295989778 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.29464557 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296098107 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.296679163 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.297186381 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.296685601 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300323342 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.304886029 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.30113416 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.296253205 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.299034897 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.298648919 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.300296104 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.296543273 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.297301446 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.296313035 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.309071775 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.323193448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305622239 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.320068412 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.297450307 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30327471 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.320064722 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.301587401 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298386974 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29856935 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.298324749 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.296427603 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.294934772 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297936614 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.298489501 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299742881 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.301009506 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.301491999 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.297646188 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.298347589 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.298946818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.298856752 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.29988818 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.298054127 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.299619807 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.300241449 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300527262 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.297720025 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.298523344 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305287444 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321158399 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.298975912 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.298701239 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.30082171 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.298804805 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.300051362 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.299235649 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.303396119 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.306899046 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.304496557 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.308537906 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.301231447 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30950493 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.299631609 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.303986435 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.308919769 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.298751629 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.299474397 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.3005691 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.30058902 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.307738685 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.320590012 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.302606222 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.304419809 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301089419 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.301310471 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.301828151 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.300392158 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300326391 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.300571973 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308838686 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.323618405 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.304797494 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.301566476 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.298008587 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.301746232 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.301100574 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.300790291 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304652652 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.302588089 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.301848285 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.300800814 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.300549472 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.301349833 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.302822861 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.302328978 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.300414535 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.302855544 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3083858 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.326451439 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306366926 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.303626841 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.309619729 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323228151 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310320505 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.323500636 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.302834192 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.30286389 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.302212817 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.304734089 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.302741962 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.30502202 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.303273403 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.304302838 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.306832979 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.302990847 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.304088198 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.302932542 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.304099182 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.302908755 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.314623239 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327255745 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.305559403 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308589836 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.29986005 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.306261165 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.308314834 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.304406857 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.304212247 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.307301481 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31425666 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312077597 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.304076591 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.305837204 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304603557 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305084781 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.304463334 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.303823096 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.303627911 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.303769081 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.30465527 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.304539026 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308106146 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.304823019 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.306731025 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305924786 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.306995446 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.31441125 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.326925924 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.306870104 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305919121 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.306347531 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.304627396 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.305285077 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.30554286 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.306884341 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306960488 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.309275071 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313885358 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.312914116 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.308158759 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.305160577 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.306154599 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.307755261 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.308183754 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307369016 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.307180833 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307224279 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.308088757 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.30564608 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.308402721 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.305766027 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.306771121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.306129495 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306950465 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309456252 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.31451541 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3070188 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.303359941 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.30708449 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307230978 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.305325683 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.307683409 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.314172668 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.333001955 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.318632117 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.316915553 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.309952205 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.307554471 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311134411 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.315609489 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.305677347 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.308455446 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.307353999 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.308249174 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.309691054 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.311660222 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308168272 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.314700011 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.329395965 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.308474843 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316196559 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.329157161 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308748184 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.309882104 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.313374811 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.308936625 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.306646478 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.30803971 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.308308226 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.314941816 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.330958695 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309966924 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310086764 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.309839546 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.311071237 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312369469 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309549908 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.310275282 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.305798236 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.309228227 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309070251 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.309585034 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.305531409 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.310974126 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.310189125 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.314791237 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.316972778 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.308384001 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311912495 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.309937932 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.31026802 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311614676 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311111637 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.309198329 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.307623369 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.310567939 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.311376346 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.311767816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.312499431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.311666231 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.313997849 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.31236762 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311328117 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.316332675 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.321785197 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.318146813 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.309264182 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.310985056 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.312270496 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.314315287 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311093847 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.311864988 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312341745 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.312519563 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.313374428 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312691553 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.311797169 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.316940751 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32713917 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.332657743 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312970398 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.31259826 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315487088 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.31147268 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.310339481 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.31115948 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.315095634 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.316679093 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.320886997 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.313360987 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318907195 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.334386026 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.31384 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.31567804 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.317614189 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.321612994 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.315835194 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312270146 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.312788731 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.31875758 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.330109429 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.312782613 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.323853797 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.342799972 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.336263353 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.314580934 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.313224209 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314398737 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.313559849 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.316817174 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.315237614 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.315250987 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313398497 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.314407137 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.315949733 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319797018 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.315534801 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.315682488 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.314909824 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.314538522 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.314752466 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.311616552 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.315009262 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.315964308 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.315630735 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.315913354 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.315573904 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.315577175 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32777045 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.343545574 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.314442459 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.316423068 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.313682262 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.318293129 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.31953093 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328553773 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.324562374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.316154956 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.316093898 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.316724654 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316128943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.314703237 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.31721487 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.315753449 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315971008 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.313735837 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.328595536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342888604 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.321735601 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.316024771 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316548019 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.315861919 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.317425578 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.316482293 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317352219 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.318186258 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.319292834 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320329878 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.316702465 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.315751667 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.320821784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.324744998 seconds)
  done (took 777.043447386 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314763479 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314553493 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314699045 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314513011 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314407853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314346329 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315059748 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31470108 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.314331935 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314589949 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314527978 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315026135 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31570198 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.3143823 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315015017 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.315076132 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314245382 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314869574 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315676848 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314478387 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315571067 seconds)
  done (took 28.842578995 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.318397887 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.315854848 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315610649 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318089626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315803006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.319381177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.316771391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319572346 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.319995985 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317057256 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.318432096 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319527282 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.315990224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.317557699 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317723005 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31892631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.318895644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317506034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.319791395 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317118999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320043719 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.31812693 seconds)
  done (took 30.229360079 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.320679019 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.320414346 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.319855689 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.317775559 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.320190629 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.316482558 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.31892583 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.320526031 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.31946598 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.321303713 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.319575937 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.322150501 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.329191823 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.326498405 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.323027261 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.319857532 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.46383134 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.321730684 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.322073982 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.321382982 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.320440491 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.327473068 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.33887721 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.318109675 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.319471129 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.321928935 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.321609358 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.320372058 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.321845127 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.32307536 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.326260393 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.320841732 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.321993725 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.323295081 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.322000303 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.323614425 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.326304827 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.32360621 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.319740243 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.320700101 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.333039162 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.34259573 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.323216302 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.329153715 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.343090364 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.322746175 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.326736706 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.330593578 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.320379636 seconds)
  done (took 66.2325825 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.322708033 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.32201042 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.319772809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.323476859 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.323344797 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.322111513 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.322140188 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.3228764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.318927017 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.320832614 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.323627569 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.320622763 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.320314335 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.323667264 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.323971699 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.321297015 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.320854469 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.320426858 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.321691739 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.321982126 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.321061536 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.324248183 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.324941061 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.321412257 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.324118016 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.321656023 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.322007299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.325394885 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.321870216 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.32241151 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.322409922 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.32552693 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.32470386 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.322611314 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.322027875 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.323713802 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.323846184 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.322039262 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.32489318 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.323155169 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.32474221 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.325003776 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.325067266 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.326299886 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.322760453 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.322721659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.323295158 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.322885983 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.323005629 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.325757274 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.325463275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.32255017 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.325412278 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.324216451 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.325787983 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.326040417 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.323283284 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.324017846 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.326038894 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.323458363 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.324132581 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.326457601 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.324941185 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.326703384 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.326098937 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.324287197 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.322931952 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.325844615 seconds)
  done (took 91.227964513 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326754209 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.326309816 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327037664 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327749579 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327464374 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.327270771 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327594778 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.32788186 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.327285949 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.328571985 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327690037 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.326924972 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.327151078 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.328307855 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.326674312 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327222896 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328313903 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328640193 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.326916923 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328175442 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.3286746 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.328456151 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.328996964 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328519228 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.329073718 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.327705444 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.329044252 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.329280841 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328098393 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328145501 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330096527 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.328781837 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.328228715 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.329099983 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.328994454 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.329342092 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329440509 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330493796 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.330092944 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.328476261 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.331104464 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329350304 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.329286007 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.329406153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328758187 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.32804169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.329599439 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.330744493 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.330099612 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.330695303 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.329610004 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329295522 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330258231 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.329775612 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.330088831 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.330111721 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330467091 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.330932133 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330475779 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.330750514 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330238884 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.330612534 seconds)
  done (took 83.631829618 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331180567 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331282221 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.327873264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.327849842 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.330585508 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.327863267 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.330658699 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.331066609 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.331029253 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.331084445 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330709109 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328809779 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328959258 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330999321 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328114064 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327991272 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329307839 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328299411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330263917 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.328704184 seconds)
  done (took 27.836684142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.330251366 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.332183379 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.329384502 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.329870852 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.332405857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.329556475 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.331884999 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331917951 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330280168 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332165353 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.331880874 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.332475228 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330972115 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.3293846 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.332597982 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.329926509 seconds)
  done (took 22.541968321 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.330374084 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.331974448 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.333505508 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.332872311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.3296706 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.330406452 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.332993382 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.330704791 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.33076874 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.334488133 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.333148786 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.332773754 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.333831111 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.333062351 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.3305006 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.334879915 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.330681067 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.331417115 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.333366137 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.334559027 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.33327443 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.330263793 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.332593617 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.335037322 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.332548781 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.332478333 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.332311234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.333086038 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.331344975 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.334393916 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.332271761 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.332608525 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.33198125 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.332237141 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.334247427 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.332541418 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.33464526 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.334636174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.33504649 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.334868874 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.334423928 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.331990388 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.336225627 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.335056544 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.332538196 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.336017661 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.332628944 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.334141629 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.333001003 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.333850114 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.334771103 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.335525537 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.335418167 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.336384479 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.335899286 seconds)
  done (took 74.574437065 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336414069 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.337193641 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333887369 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.337376445 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.335973162 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.334854035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.336521431 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335533558 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33552868 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.335430174 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334818656 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33721495 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333372061 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.335690868 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.334706488 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336343684 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.334185047 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.33463326 seconds)
  done (took 25.288765068 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.335269469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334467091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.337154084 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.335689572 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.334300739 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.338213353 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336221494 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.337113526 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338528056 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.335036574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336000695 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338275968 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338231223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.33903373 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.336116478 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335116404 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.337037938 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33826676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.336118967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336081006 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338963607 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338758577 seconds)
  done (took 30.660254069 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.338896807 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.339672192 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.338755732 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.356694703 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.358978941 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.362357719 seconds)
  done (took 9.346534356 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346184185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338429421 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.335301025 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34048753 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338563316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335887608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337053936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336210499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33847705 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336964183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336195105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338816464 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339753898 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336014602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339092382 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339165899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33755645 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336493783 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337884664 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340804028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337791779 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340833344 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33710605 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337036646 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33756254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337798966 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339931624 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338373369 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337454305 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340221575 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340648594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337822853 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340963423 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338949392 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341727153 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341434715 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338448379 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340659102 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340471159 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338886895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340723627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341878431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340814606 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337317668 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342637061 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339605949 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338378617 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340076771 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33871262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341512037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342196561 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339393455 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343013455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342751487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34243044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343013992 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340059896 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339550603 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341414772 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34201872 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340511553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342569036 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339979938 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341053249 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342163617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340901556 seconds)
  done (took 89.691419377 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340176022 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.341604528 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340511271 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341566521 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3411885 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340431878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340845276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341081375 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34111703 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340763815 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34357208 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341638469 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340486984 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340281602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341688539 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342109007 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340102733 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342071413 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340632268 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344913407 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340524756 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342227839 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341892771 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340949336 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341724837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344623131 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341770631 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34140933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341895669 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342509198 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34228583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342090229 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342493796 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342296857 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343095832 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342830386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342521498 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341791673 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343038985 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344777903 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342195239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345447607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342536717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342444842 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342525469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342781284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343602834 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343666398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342955392 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342769815 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342509466 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344029067 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343043426 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342983243 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342946793 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343248679 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344246605 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345131767 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344099967 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347128819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343692442 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343518526 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347978785 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343864056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344257898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344212272 seconds)
  done (took 89.868464319 seconds)
done (took 1811.701248739 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.400784603 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.419915644 seconds)
  done (took 14.079636099 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.512441453 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.464418314 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.346283299 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.397790072 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.346936982 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.347315693 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.347390822 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.345818352 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.345937871 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.346268636 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.346442266 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.535590022 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.410060932 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.347682197 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.346256226 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.44169873 seconds)
  done (took 43.490002741 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.373214234 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.353871514 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.474857712 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.370897717 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.375689196 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.556143548 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.407433152 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.351540568 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.542277941 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.392566537 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.06265424 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.375369848 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.351454356 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.569145369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.370869097 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.557092422 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.617626717 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.066149871 seconds)
  done (took 31.428955601 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.85506429 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.350734437 seconds)
  done (took 9.465699976 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.358946992 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.371494675 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.371004884 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.367087833 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.390178258 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.415782848 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.368906531 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.367319601 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.38520248 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.383474293 seconds)
  done (took 65.040304581 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.366924019 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.344520054 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.345703219 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.343804653 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.336424257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.353439384 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.343116897 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.341072169 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.332365773 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.479770044 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.345641929 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.350592671 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.364109386 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.344990543 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.340199517 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.381507931 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.509752057 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.342115943 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.340080554 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.348342493 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.342187008 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.438286068 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.387949161 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.339901874 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.479949733 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.33337575 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.346103566 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.349348435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.488547735 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.343710363 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.343700789 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.343952966 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.345210981 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.987810376 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.849979483 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.365228773 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.370734619 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.353007225 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.33998355 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.488702433 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.345672981 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.349998931 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.345510388 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.840858655 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.488751615 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.46764179 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.628563958 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.365399417 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.346095215 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.408993382 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.348592943 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.3463845 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.3770458 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.127907289 seconds)
  done (took 112.935355493 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.37935347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.731507922 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508444002 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36440907 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998423423 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.051253522 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.363688935 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.655317317 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.387122268 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338253206 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628755629 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.875476982 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.367446759 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.367442219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.0011636 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.426834795 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340606658 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.138664497 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.363022315 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.340145573 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852869634 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347592008 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.35787912 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.510931888 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.381186928 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817488849 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.866124997 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.658145474 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.359728911 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.339588703 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827190365 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.360150122 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.386962143 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340738366 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.6114896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.720665148 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715169956 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.357589084 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.348518446 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.340331043 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.367615749 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806160016 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.714211294 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.355722029 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.356613909 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808515715 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.357838253 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.338742358 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.336909229 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544391348 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.241960655 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.339759269 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.816235188 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.339791238 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.697197477 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378963155 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.408615637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83815835 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.355572708 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.323179873 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.403361466 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.338665513 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.339550368 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.34161416 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.344913413 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701084333 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471418352 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.341665703 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.697486202 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82543163 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.355101706 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87841291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.163769726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.369963686 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.439952914 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.335631376 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.91275614 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844586958 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.385794129 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.335410979 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.675078893 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.354705946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.61727973 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.352995318 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334471366 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839176238 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.342766737 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.342768206 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.351086903 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.33587741 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.975629166 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.339410911 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623613762 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.357969759 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.335314283 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.335415642 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.340099463 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335498713 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.334493986 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.339158161 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868265997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.355829352 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.307727002 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351534503 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348742493 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.335125209 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.334539405 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.338597083 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555492425 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.760934743 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.361592243 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334310421 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.335391885 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.338131833 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.552882884 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.338290465 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64671962 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.356015313 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337311956 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.337531195 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.989432448 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.403238474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336341827 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.340266194 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.249442176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54272268 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.356010884 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.353860418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337211306 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.357027439 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.562958105 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.359294038 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.38664428 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.336635879 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040012944 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.383361649 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.335240676 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.889752279 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.340429404 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.180881779 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.354857509 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339083383 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625427416 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.601605663 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.388462045 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.337247485 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.337063081 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.014444882 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.362793829 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482820801 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354852744 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.403736075 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534092275 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.664910391 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.337539823 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.964344582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.337293726 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554504054 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.348921936 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637210293 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831868746 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.357511004 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34476106 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.041199794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.036978368 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.001359135 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.340098256 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.607999918 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.280146277 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.823443955 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.336265224 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335530627 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.799620946 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.334795976 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.334054698 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.335803309 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33363206 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.482821793 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507870106 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.521689303 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337830411 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785704633 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387846257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335817199 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.35770658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341472978 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.686674344 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34374709 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.344683328 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.380742693 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.337017726 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339770308 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805136853 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.189770998 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.342746014 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488021713 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955411293 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.357612189 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.337383032 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.906473083 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.628473101 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83663062 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.37500506 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.638060044 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.364748799 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.374389649 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.90508979 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399995207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798578654 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357308522 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.360514985 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921206873 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.358221774 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.711283131 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.338019736 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.338526489 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.876164558 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.360085418 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.34265814 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.529883068 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.355982986 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591826421 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.338636745 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.386862675 seconds)
  done (took 1112.200974665 seconds)
done (took 1389.898961089 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.337329229 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.346997077 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.324665847 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.343838034 seconds)
  done (took 26.607102322 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345623511 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.343379643 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344595642 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343398817 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.343328389 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.344393623 seconds)
  done (took 9.318978409 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.368163969 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.344667884 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345048498 seconds)
  done (took 19.311647868 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.542376975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.64195916 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.692085572 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.527537641 seconds)
  done (took 10.658746394 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.345636727 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344800372 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.345209078 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346101014 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.348307056 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.349026197 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.344986741 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.345940841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.348199117 seconds)
  done (took 13.374554704 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.184679683 seconds)
done (took 85.709717729 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.146646447 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.387288679 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.463795845 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.345958547 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.35635439 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.787337544 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.596065691 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.368552183 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.338762699 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.388531088 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.978371474 seconds)
    (12/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.853784424 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.380520264 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.969846743 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.366176831 seconds)
    (16/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364810143 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364739712 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365897819 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.543002018 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.676106281 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.326135734 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.418528399 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.942926284 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.209182485 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.946396145 seconds)
    (26/309) benchmarking ("sort", Float32, false)...
    done (took 5.35244713 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.355893551 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.321330592 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.404607582 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.89872569 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.360424955 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.156283832 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422854329 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.332948619 seconds)
    (35/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.903439227 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.085311495 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.368740892 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.443324944 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.342869676 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.360341184 seconds)
    (41/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109160412 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.75348932 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.424346255 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.35047481 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.328391603 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327055432 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.331209281 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.372409887 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.19786776 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.449917659 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.358662555 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.978129018 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.366808819 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.471231875 seconds)
    (55/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.427110069 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.59001974 seconds)
    (57/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42678602 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.692814903 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.425548641 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.359814327 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.455749816 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.690948572 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.609864614 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398794607 seconds)
    (65/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392412397 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.692389168 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.350762449 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.817560085 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.257354191 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.750016965 seconds)
    (71/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.38425885 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.346989833 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.694038881 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.332061949 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.770140909 seconds)
    (76/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.525200504 seconds)
    (77/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.689786148 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.343957052 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.323177458 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.165447838 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.342197439 seconds)
    (82/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.366974536 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.886143491 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.34463361 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.58237595 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.802471196 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.345278037 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.207904814 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.503532986 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345726058 seconds)
    (91/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.726129023 seconds)
    (92/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.350015163 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.208687874 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.375589819 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.482519254 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.869938306 seconds)
    (97/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.453878139 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.468729772 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.324037906 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.3694752 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.826817452 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.547033054 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.32874568 seconds)
    (104/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.727902411 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.377854957 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.351823292 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.345745816 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.593284103 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.526290011 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.573269807 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.528134919 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.083959016 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.325321142 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.327040512 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.348112763 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.63360224 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.570659938 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.347063814 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.32778522 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.44865632 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.336024802 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.750903877 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.362588034 seconds)
    (124/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.472746299 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.169046332 seconds)
    (126/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.12818112 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.872029063 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.385740698 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.619533361 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.201660888 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.097723253 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.612746802 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.431557189 seconds)
    (134/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.362963152 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.32657309 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.265068069 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.333728121 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.454900697 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.056884931 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.273887063 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.700501735 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.450829414 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.363852364 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.676104435 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.328289822 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.353360035 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.72870365 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.372623903 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.095328642 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.312959042 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.381945551 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.43186187 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.331216887 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.412127223 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.454588358 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.300651948 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.410269787 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.757279815 seconds)
    (159/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.346621931 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.474350611 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.786779963 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.351129181 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.330400132 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.389179796 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.63451132 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.335921211 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.26149851 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.94690813 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.449648084 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.797038061 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.418747604 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.007387791 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.437752303 seconds)
    (174/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.338090837 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.358786378 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.753902155 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.329396458 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.929930366 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.280652816 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.574096286 seconds)
    (181/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431224143 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.447317515 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.815857795 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.376286352 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.559507326 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.907046207 seconds)
    (187/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.165132785 seconds)
    (188/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.756908814 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.79223979 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.411237245 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.349879382 seconds)
    (192/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.770446016 seconds)
    (193/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.886555656 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.354303999 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.347771772 seconds)
    (196/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.06875175 seconds)
    (197/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.736987483 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.779488184 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088073366 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.407216919 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.986326916 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.578321477 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.351571695 seconds)
    (204/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.385882346 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.331915091 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.139757124 seconds)
    (207/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.393474392 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.990658195 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.56768995 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.409724308 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.656738952 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.859539842 seconds)
    (213/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.465448465 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.331793488 seconds)
    (215/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.99780811 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.563351372 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.333266358 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.339203477 seconds)
    (219/309) benchmarking ("sort", Float64, false)...
    done (took 5.647994482 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.924388888 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.377546914 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373935346 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.369155472 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.351871372 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.333906597 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.115566156 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.396063191 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.614852097 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.333086886 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.45943555 seconds)
    (231/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.332843595 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.371743624 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.35204142 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.368812043 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.456908535 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.377589603 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.456735478 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.200444723 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.402540815 seconds)
    (240/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.456285018 seconds)
    (241/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.497811576 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.353576268 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.414838282 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.357497067 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.744360993 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.130741276 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.445074751 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.123879102 seconds)
    (249/309) benchmarking ("sort", Int8, false)...
    done (took 4.430769622 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.342780455 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.335819962 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.757644176 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.586340684 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.350440833 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.351056732 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.356296121 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.400713345 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.35575827 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.935338603 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.923128375 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.381629992 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.063218866 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.381628364 seconds)
    (264/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.971700592 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.738740533 seconds)
    (266/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.365211304 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.460739975 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.439022102 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.729121816 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.372327158 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.147347793 seconds)
    (272/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.162552183 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.394449748 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.336564426 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.3415498 seconds)
    (276/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.634356197 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.413301768 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.433584293 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.19665096 seconds)
    (280/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.722167706 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143916067 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.439172001 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.437783364 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.336182921 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.343298129 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.479394619 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.564543891 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.182439499 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.474730083 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.389866004 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.321716418 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.488855058 seconds)
    (293/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.365829955 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.335855712 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.396664828 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.364534022 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.44496862 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.479776172 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.420764913 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.358523347 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.421743286 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.337717696 seconds)
    (303/309) benchmarking ("sort", BigInt, false)...
    done (took 6.373645636 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.373089312 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.379647655 seconds)
    (306/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.717049006 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.661029009 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.390205587 seconds)
    (309/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.439196233 seconds)
  done (took 1039.364039951 seconds)
done (took 1040.620972153 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.391001316 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385772019 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.367512679 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.389508249 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.48111651 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.391710109 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.378027744 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.368636021 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.416178942 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.418187573 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.365300295 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.391296302 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.370048169 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.367778253 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367759852 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383900451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.406438918 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.37609592 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.385150217 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377992274 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.386521173 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368027272 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.418835076 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.391333692 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.372818435 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370638079 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.373199713 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389192666 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.48174209 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.372058602 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.372025531 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.381199156 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.409276862 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.375216372 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.365014931 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.389304609 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.381958558 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.376748813 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.373355997 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.401431712 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.79323017 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.386877202 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.371287769 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.37175622 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369840418 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.375588089 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372229626 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.377457008 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383181981 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384822093 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.779505595 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.401480848 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.373762337 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.370936308 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380348584 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372746626 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.375243281 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388213025 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.391100922 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389005658 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.394905711 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.381090168 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.375471251 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390220365 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379283349 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.820034459 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382692835 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375010066 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.797737241 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.394108099 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.820884826 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397490652 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.373448632 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.387050616 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.404588275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.41116827 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.373365442 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.372687533 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.381867709 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.371073893 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.38273248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386502335 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377487102 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.372642277 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388642526 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.397898826 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.381596717 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.374563721 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.382285767 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.39170626 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.380231735 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.38376978 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375488003 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368872003 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382137773 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.376783727 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.375903079 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.376197253 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.37764746 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384179478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.79770553 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409685309 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.371001835 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.370943707 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.374018498 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388089732 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.798259335 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.390840651 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.393546029 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.421357187 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.376150658 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.399319645 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.382974078 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392887466 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.384522041 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.378011562 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.370317101 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.395995872 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.795805443 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.405888769 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.377301973 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.373419135 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392284534 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.378722822 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373077207 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.40430356 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.378158471 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390808339 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.496593505 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.38702564 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408776987 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375204297 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.380382315 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.39953814 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394020541 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.407027891 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.378287967 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394600255 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.392814676 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.374785008 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.389052566 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.386436827 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.378598518 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382902764 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371342815 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.400819708 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390092728 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39243715 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.397878177 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.497429385 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.37583943 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.389722401 seconds)
done (took 231.42646253 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.437757186 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.37217668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.466822214 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.372931798 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.475093573 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.475157751 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.371873839 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370798592 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.370698324 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.749618357 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.372459204 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371768504 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.374535999 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.371627342 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.457379013 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374578061 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.371248902 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.734511194 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.375883097 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.447077121 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.374008535 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372291353 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.374780281 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.784556409 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367690373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.372493152 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.446388208 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.376021277 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.721742354 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.371853131 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.375451637 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.722825839 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.464171588 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.392402447 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.386682891 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.383297508 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476532135 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.394650058 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.457729471 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.459092262 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.469081033 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415428631 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.373235091 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.375423071 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.377121439 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.377552006 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.375146535 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402320509 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.371865084 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373338755 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.740161639 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385943401 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.373920699 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.373747352 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.373831107 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.404703882 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375200475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.378618747 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.467379793 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.377096633 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439581363 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.760310741 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.751621043 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377292144 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.375365252 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375103757 seconds)
  done (took 151.314046035 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.448028682 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.452793094 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.489237816 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.395994152 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.429893701 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.494397491 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.395118696 seconds)
  done (took 11.390504955 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.384724986 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378720696 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.429352879 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429933761 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.379899465 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.526431916 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378732377 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.390672989 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377076083 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.432041023 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.379464741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379660636 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385890553 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.379474846 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429363316 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.391823015 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.493606096 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.382172949 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379471635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.531869008 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377857095 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.386501956 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.43155166 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.392410956 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379349936 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.387017543 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.946454609 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380284992 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377087424 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.378972341 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378679153 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.418949025 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.379231254 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.376517556 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376534887 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.497417965 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.382258883 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378676214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.380871735 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.379686746 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.380771218 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.37995689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381418681 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.379025293 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.380979342 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.404669083 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.381360445 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38018472 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.380133938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.382203236 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.432377825 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380900842 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.379674947 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376990875 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.440456028 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388088265 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381817743 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379409368 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382100544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379156214 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.535342428 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431318137 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.382317677 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430452516 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381907976 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38249667 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.382571973 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383358402 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437964024 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.38221279 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431889724 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380235271 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.537854234 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.404218263 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383250882 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385704008 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.386455985 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382889065 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.380900408 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.388184516 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.380611245 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.383563057 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.389376957 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381983652 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380601221 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.485328894 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493144623 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.382155957 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.395304601 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.392436287 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381475108 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438564544 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.384190286 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.381338809 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437960904 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.498799153 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.437181825 seconds)
  done (took 157.884884023 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.389318638 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.392792665 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.385723649 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401799441 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.385167942 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.383217996 seconds)
  done (took 9.630043359 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.388630929 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.385497667 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.384498166 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.382905184 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385768155 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.384629123 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385910371 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385958656 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.388020497 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3846381 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383473394 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.385734776 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.386099506 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.385477294 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.385368491 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386752288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.385274673 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384380755 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.384737484 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387748737 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.480268886 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.383974162 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384520529 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.388585006 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.389803288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.385648834 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394597725 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386067591 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38631272 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.39311411 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.40475617 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384720581 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.389839185 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.393965218 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.392315287 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.389909376 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388413515 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.388211591 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385059957 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.388004332 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.388685254 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389702245 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38594531 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.388366427 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.389836228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.394063772 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.39272031 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396062541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388284659 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386910495 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.386967822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.386856824 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.387468483 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.388258191 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390167488 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410126492 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.393178242 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.388036403 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387818571 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.39114486 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389896957 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387401885 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.392357727 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.390260059 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.394967121 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.387806962 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.389207075 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.392201945 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389195793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38856837 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.391394008 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.387456484 seconds)
  done (took 102.376885581 seconds)
done (took 433.877403103 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.766520806 seconds)
  done (took 8.063040398 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.545630805 seconds)
  done (took 7.844929774 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.904156908 seconds)
  done (took 22.209071403 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.416821173 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.408096474 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.397907477 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.405532533 seconds)
  done (took 26.925511243 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.771353959 seconds)
  done (took 8.067193593 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.380610703 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.392267084 seconds)
  done (took 14.07060945 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.437822072 seconds)
  done (took 7.734753645 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.984278263 seconds)
  done (took 8.291600405 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.383470258 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.831153817 seconds)
  done (took 14.783307229 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.362660451 seconds)
  done (took 7.659386891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.261325761 seconds)
  done (took 8.559457731 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.381710939 seconds)
  done (took 7.681071456 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.469460645 seconds)
  done (took 7.767934529 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.394745612 seconds)
  done (took 9.693837002 seconds)
done (took 160.646638901 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.384957871 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.392657599 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.393190212 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.390216664 seconds)
  done (took 26.858321484 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.42241249 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.422843282 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.424552032 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.43432173 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427284258 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423078619 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.416069854 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.414682426 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.433520491 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.427002027 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.423610756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.425290837 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.423615503 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.416965083 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.425617122 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.425131313 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436063287 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.425455288 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.4164385 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.427631329 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392502079 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.437127124 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.428688605 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392472919 seconds)
  done (took 35.4418106 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.910739168 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.46272403 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.545431658 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.445515079 seconds)
  done (took 7.663927188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.443974511 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.444922527 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.455712434 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.496333924 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.522866676 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455804796 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418921072 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.413859557 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.401515239 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.445612364 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.520455704 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.461548461 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.530667121 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.393637047 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.581915069 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393422702 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.391889427 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445756702 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.495856637 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.509687918 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.393298439 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.445284833 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.447436572 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.461900447 seconds)
  done (took 36.273570169 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.392084069 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.413418763 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.391871797 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.391644893 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.398327361 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.392661388 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.393395122 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.393596974 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.391046586 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.398769644 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.391429828 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.407017143 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.392375968 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.392876366 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.398298312 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.394657709 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.397830614 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.39221998 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.394306121 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.400468077 seconds)
  done (took 29.220150887 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.388906776 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.33495236 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.739580615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.644164446 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.390082533 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.39520936 seconds)
  done (took 29.194519354 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.465619093 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.615314028 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396496781 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.752971925 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846492566 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.415541171 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.397069493 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.638602833 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958974047 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.946675931 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.462751713 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.464453996 seconds)
  done (took 20.665869836 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390041666 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.397717828 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.39634262 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.413062744 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.451286359 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.415806396 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.403319506 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.389733909 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.457374479 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.473385152 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.416099341 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.450565386 seconds)
  done (took 38.357610711 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477841105 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438015647 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.311839509 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458856403 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108919884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602863911 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411630123 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.849887248 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394600318 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662802436 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406306345 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481233858 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645422257 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393764799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39297643 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.384999155 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6417394 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871550627 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394537988 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494791567 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423574367 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399667775 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.515094942 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422256705 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603613625 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.533376115 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.651747496 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.170551769 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690255677 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404738579 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403165753 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393885924 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665515592 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064917667 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515891475 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402890335 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393568496 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.938252051 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.388150147 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.480620957 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403365341 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397606805 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404978458 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393190354 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328983929 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40162884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854852025 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400318299 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.105586406 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393626582 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404458034 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486960232 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.397139876 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.965032359 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436370922 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.40136582 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.392303774 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489730326 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98764704 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.919649701 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409109251 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.328518491 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405500453 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.415860407 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039054623 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.514698071 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.398039104 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399072599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329791269 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.414068766 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418442107 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545217367 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.418029814 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044874445 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08649628 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414685097 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326744211 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93632331 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400025588 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.330257837 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623298848 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174080251 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331015655 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.343376154 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329512592 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099553638 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409970164 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.78305916 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415081823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.87607228 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406942011 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413820626 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420071658 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61938894 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.274153601 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396457527 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.401845187 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520783564 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41791269 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853284366 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330886728 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.401578094 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653725378 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.609744063 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400606805 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.40074998 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637362241 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399218952 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.417952493 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398697204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432910627 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.977478642 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428087162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978159978 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422178634 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.175476028 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128954003 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41988758 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.504593964 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398985788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663478702 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161924398 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.56661574 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4659953 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401773175 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399302354 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.524896473 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992378933 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.557272133 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.397704528 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405670742 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418065679 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.399441886 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344781166 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.410589787 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409227481 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.17660006 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622795491 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40388553 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680832051 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334416296 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54778917 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40862404 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.622529388 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.61563922 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.416455391 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658939243 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405791913 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407016808 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419139337 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417377962 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500667826 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423213573 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.413130536 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663217097 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.40407386 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.404599234 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.548579416 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.178608463 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405194211 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40708653 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412125846 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988184667 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398336737 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409355847 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290156025 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.414152192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467673745 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407431613 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.411616719 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.235879216 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431773692 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.424570673 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.398750921 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648092342 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41246934 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.444397765 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488386695 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.610681444 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985798344 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434262022 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.335976563 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.113744582 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.095712638 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402017143 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.591619767 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403156458 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413497072 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412829349 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403249789 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006422793 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423727602 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.448943407 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.416618623 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414962468 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.408186401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404084993 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.226833838 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974814821 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427355746 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422270027 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546066424 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.417071704 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339196051 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92032333 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409105528 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405553992 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.181944476 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4383558 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.445424506 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898800516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662985057 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408202977 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434127554 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.568707732 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.44020382 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404043583 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405476001 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422504438 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.43440322 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413913705 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.416393686 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.546534652 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.776559869 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974119071 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112524235 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970039699 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374596042 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.414537719 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312774786 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866224137 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339878288 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062299272 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596505702 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894328201 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350967276 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618720438 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.624537905 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197917909 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42524303 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633165161 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351912715 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.425497096 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419301648 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616807232 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441276979 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407394641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343624647 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.686963949 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670645361 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409480564 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493063055 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868502909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40771978 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.206025728 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.444359502 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.742034924 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605443265 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.952953995 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.796115217 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412530182 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417115834 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894723426 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416215157 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93479753 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032840031 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441154278 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.625275813 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344218772 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420699073 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420260545 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.405071715 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.727408269 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.414434092 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.664739349 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418723431 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342387892 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409149552 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969020905 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.290498342 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.41664743 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409660673 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154536529 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420070656 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715419425 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.428926589 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.217773532 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428793154 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.343975753 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34422721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.104438892 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411729252 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385766385 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903116469 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.41691494 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430975466 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412589317 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281361094 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667029515 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.424605921 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000095254 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661061437 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413705208 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43355474 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.511282992 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425763186 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.401243897 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.311633686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64656447 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46355551 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634454404 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.357127631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.317546344 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418761243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622739439 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.307913384 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411444707 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672302236 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.147139982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.424461541 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143283896 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462983825 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415222414 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430920372 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429120448 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433463948 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501010102 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421823648 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.422027003 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.422672539 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590367196 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418479069 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422335295 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.426352382 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505933094 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.979071969 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.220191882 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.185089129 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005491936 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180710678 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027830751 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45137856 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413271236 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420967012 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347332579 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564712901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93932372 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686289372 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542103797 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.419321078 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438768182 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426097146 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423642994 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632048128 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689069935 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.385534591 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424727103 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208869506 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.296309566 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424674532 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.626898217 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908854822 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971092438 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529354869 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420970801 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.87949891 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688710874 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505248958 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414402682 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002894628 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435809165 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.776841765 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.442257284 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428873582 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571047522 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425745557 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090703995 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448347691 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.574253565 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.188679197 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.572543546 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678232824 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.840959286 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.433337922 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007377762 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146344341 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687924074 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48633601 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427048598 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.520476254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562094826 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.414436772 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306376062 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414262354 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261623484 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.126785864 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.426373521 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008790714 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706672579 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.416258057 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.414654928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446420839 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.428149293 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640660845 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122249481 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649254892 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427759288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419018368 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989882842 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008944802 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454867423 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353653299 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419972141 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668904515 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679942339 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44082074 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.870577605 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.130108619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958711086 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.390613805 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440414156 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421360225 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128713822 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016557637 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.249944913 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919356172 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084669124 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431973253 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699893343 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.424053537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426780763 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70268432 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.423993692 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.430452917 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438033077 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.007350679 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219570108 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.437459848 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607960421 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.364609825 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644157107 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419735848 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355589226 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428735581 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.602331895 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419877548 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550720179 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431884855 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.422051937 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427715787 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.180385389 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700509615 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.424651441 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.413812259 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.41320269 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430969886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523241694 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685740268 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427235839 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.093708164 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.773589087 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.678270994 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420985378 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.408416073 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42436804 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420482912 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139666742 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433252249 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422129122 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995484904 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.432340202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.437054949 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425122268 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637876201 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634305115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432714463 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440052024 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425928698 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444093853 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321800273 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189309374 seconds)
  done (took 1678.21462964 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.44472934 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.468612938 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.439747314 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.477467251 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489334839 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446922448 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.457635752 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43825065 seconds)
  done (took 52.994511736 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.422125849 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.583671503 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.453796387 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.427075097 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.440342023 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.421744896 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.893795417 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.452541444 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.440419538 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.435596988 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.42663678 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.435591403 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.108424663 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.438783638 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.4292801 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.413033935 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.440679542 seconds)
  done (took 66.999662767 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.423945062 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.445178683 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.529479598 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.433248377 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.57883393 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.454267198 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.357379601 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.485239224 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.425525311 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.458550046 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.095668199 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.471092765 seconds)
  done (took 85.495780387 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.434015637 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433052096 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.430996824 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433107621 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.434270569 seconds)
  done (took 8.499658528 seconds)
done (took 2117.17873227 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.683538539 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.128425171 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.056165118 seconds)
  done (took 5.518561363 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.571890226 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.618653387 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.740605493 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.745878857 seconds)
  done (took 8.011884135 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.699570479 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.815258458 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.613480879 seconds)
  done (took 6.463868264 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.851988887 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.424783613 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.447821841 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.421620282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.431842599 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.429440587 seconds)
  done (took 20.619057761 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427936242 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.429552113 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427367933 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.430989951 seconds)
  done (took 7.050785797 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.403031589 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14059814 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.405924202 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.428424048 seconds)
  done (took 18.713126467 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.174640267 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.186995196 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.171734464 seconds)
  done (took 7.867988551 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.423837135 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.272253492 seconds)
  done (took 10.032133215 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.719760743 seconds)
  done (took 3.054991355 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.56068656 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.753340077 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.462575485 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.374700169 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.484823203 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.300646339 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.070150715 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.664508782 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.344120084 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.615727129 seconds)
  done (took 28.966405146 seconds)
done (took 135.041171769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.265598918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.671678167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.626830222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.277286149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.649683279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.629003668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.636679992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.249840387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.816845149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.745362146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.237901727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.649320548 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.799441437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.672621949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.804122451 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.798667772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.653252664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.310160529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.918948641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.153790376 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.63977117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.872797876 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.067823907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.910966644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.658918026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.582395196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.452950065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.806721051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.091760223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.556235435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.588851761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.330081522 seconds)
  done (took 196.464856752 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.428078574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.444965753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.429903672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.430808063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430423075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.428934186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429670066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.459346901 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.43016692 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.434667577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.444251022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431088396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.430323444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.429001419 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.447813663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430211182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.430619812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.431009033 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.448242232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.432570047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.430278099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.448545966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.428645599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.447860931 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.445734585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.429852281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428428933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.430892396 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.455030927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436287731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.430990458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.431260795 seconds)
  done (took 207.28608982 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4418301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431299878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.429442958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.432235477 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.447684272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.431882996 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43446705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.429671892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437476147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433294747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.432470303 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431392013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451670397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.458634308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.430761754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448881412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.43552966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.441435053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.444698818 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430381147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.460383929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433277702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.451153474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433405259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436026199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.433970889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.454466883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.432987475 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436779874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.432018846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449922369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.456892563 seconds)
  done (took 207.408469572 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.636495893 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438898391 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.438996333 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.394318748 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.438749444 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.439884305 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.437163117 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.628774195 seconds)
  done (took 15.195297333 seconds)
done (took 627.689934121 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.763629182 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.472777924 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.642828891 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.462659786 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.233980582 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.48115069 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.460867151 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.630685092 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.373872501 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.637794164 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.683098982 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.478022435 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.823613964 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.458854797 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.713650199 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559727052 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.317785554 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.45010888 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.784086739 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.990817205 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.727284707 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92263432 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.660714801 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.357774519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.863834931 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.928621548 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.178897176 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.314404125 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.482763895 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.781079894 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.131185675 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.421048736 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.521953798 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.52276496 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.579465014 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.559433143 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.399051268 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.520935643 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.665166457 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668624516 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.998345685 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.186758684 seconds)
  done (took 96.156094582 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.423723448 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.427064642 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.423537582 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.425877699 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.426331055 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.425421229 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.424837506 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.424273648 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.426140477 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.42765589 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.427010467 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.42810997 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.425028366 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.428212438 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.426241169 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.42603959 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.425315278 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.428319287 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.427904283 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.425400582 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.428339935 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.425858841 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.426411585 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.426996341 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.42651008 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.426321479 seconds)
  done (took 38.430409459 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.447136259 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.691608877 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.857362008 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.451129836 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.447310756 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.448599284 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.52389385 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.453565269 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.449984762 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.448856714 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.615142186 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.447761826 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478740845 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.886709985 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.448112045 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444859961 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445291426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.444691652 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.698976257 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.456340685 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.544245322 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.454613731 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.525132767 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.462837541 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.467736193 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447513771 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452229013 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.96466117 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.466449328 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.615606163 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.25558291 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.528158609 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.915380051 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.884311042 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.253155663 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.45809131 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.44770368 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620003789 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.449053706 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.446137513 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.523610801 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.44998483 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.865316266 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.062822342 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.467615749 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.447493038 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.988058694 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.645627899 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.693943198 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457715222 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.891007699 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.451370003 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.449807684 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.449290065 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.69355872 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.460194857 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449728473 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.982969072 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.47564816 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.526819144 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448990336 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.449947661 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.708947642 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.449615615 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.69705266 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.452454971 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.456571806 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.470571864 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.8672968 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453983991 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.088219762 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.469699702 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.448926731 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.616369503 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.697135099 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.018558301 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471258033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710762696 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926746352 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.543843657 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.456245964 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.952852942 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.546563725 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.457773575 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452289665 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.451556979 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.450727166 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498222488 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.525459846 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.01675769 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.089087246 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.999282206 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.548852523 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.472928646 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.450992148 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.982250164 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.472177876 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.449253984 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.865063188 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.082887821 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.470217407 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.459832319 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.085867119 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.472870051 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.529037163 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.464645376 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.875490645 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.454165509 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.50007891 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452596051 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.458805274 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.475156442 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.529813232 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.456136755 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.453779145 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.055576258 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.646909761 seconds)
  done (took 189.537370815 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.448502893 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.445089264 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.444515143 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.44609422 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.446164213 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.453296456 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.445627306 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.446475089 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.452935029 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.44624956 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.444446087 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.448516299 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.449238437 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.448167811 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.45781004 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.452189439 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.058895925 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.448051962 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.44771273 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.446138686 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.243256872 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.455178732 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.446224467 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.44808381 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.447150037 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.448837354 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.454951218 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.450245163 seconds)
  done (took 155.324898082 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.455856034 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016688847 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.473155651 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.585248094 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.473721431 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.451050427 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.582774142 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.511854858 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.473009307 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.45162876 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.451740346 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.756492177 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.456979372 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.967339464 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.648513551 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.609403465 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.970745482 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.473453621 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.452719644 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.45069246 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.587070001 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.455690266 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.75807766 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.029738202 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.476589576 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.019979786 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.441729357 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.455672036 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.454585203 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.020401163 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.47132627 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.755446917 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.533164992 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.516723484 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.041698462 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.989404993 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.988488666 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.605794262 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.458349871 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453452035 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.452016459 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.438956424 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021111458 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.476818585 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.455727574 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010496102 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.474845575 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.45618271 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.460029715 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.454347324 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.517106261 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.534113349 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.778712353 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028745893 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.54978328 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468000633 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.589011874 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.830363805 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.458190871 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973791402 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.440094127 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.035724473 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.48596352 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.441713522 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.454795776 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45971222 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.607710506 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.588597622 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.986525938 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.484813699 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.983741902 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.633454575 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.456361408 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.455091345 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.458509437 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037665661 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.01195843 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.634451072 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.591909428 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.652580573 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.450977339 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.457325522 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.442884076 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.536478381 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.458112617 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.040062681 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.011268406 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.485266475 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.459962257 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.460436617 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.462437975 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.636326076 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.058003441 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.563288884 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.972973607 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.795114608 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.778140073 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.468949022 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.520909343 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.47628289 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.771889025 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.471013091 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.519615891 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.897128917 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.771166841 seconds)
  done (took 172.882512542 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700154313 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.705239785 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.556863802 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.59517046 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.066797787 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.021792284 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.693062976 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.601407009 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.572261684 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.720052247 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.629336666 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.559297729 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.632787616 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.537489483 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253025971 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547377819 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.572154814 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602393118 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.575293433 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.483646177 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.132911016 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.748186244 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.629471852 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.367334879 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.559383815 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.269097613 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.024498223 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.015079015 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.62828718 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.816419238 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.998958135 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.592381648 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.434022336 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.155431324 seconds)
  done (took 69.361276521 seconds)
done (took 723.034059548 seconds)
SAVING RESULT...
DONE!
