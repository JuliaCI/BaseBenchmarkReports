cset: moving following pidspec: 31921
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.311706728 seconds)
loading group "string"... done (took 0.560922731 seconds)
loading group "linalg"... done (took 7.618312495 seconds)
loading group "parallel"... done (took 0.171453294 seconds)
loading group "find"... done (took 1.188263283 seconds)
loading group "tuple"... done (took 2.107728526 seconds)
loading group "dates"... done (took 1.333305036 seconds)
loading group "micro"... done (took 0.246723732 seconds)
loading group "io"... done (took 0.975442291 seconds)
loading group "scalar"... done (took 41.893656176 seconds)
loading group "sparse"... done (took 13.600713724 seconds)
loading group "broadcast"... done (took 1.037462089 seconds)
loading group "union"... done (took 14.959753466 seconds)
loading group "simd"... done (took 4.810714077 seconds)
loading group "random"... done (took 9.808456368 seconds)
loading group "problem"... done (took 2.012929136 seconds)
loading group "array"... done (took 22.639312415 seconds)
loading group "misc"... done (took 2.046695961 seconds)
loading group "sort"... done (took 3.454791621 seconds)
loading group "collection"... done (took 19.603102074 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572907593 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142955911 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148847588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130741099 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20512798 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158251997 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157871603 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098504157 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.002399435 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174450331 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153565178 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524792445 seconds)
done (took 5.203636262 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218888308 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095068003 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103519248 seconds)
  done (took 0.875765526 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07864741 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145695693 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094115553 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078220225 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094618126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077371233 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09409943 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077223607 seconds)
  done (took 1.344306131 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086312465 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097560728 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081034883 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096621691 seconds)
  done (took 1.044456203 seconds)
done (took 4.251030427 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735248516 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271705313 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205368128 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463757965 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19611027 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217700465 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678903028 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365899494 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252420631 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100743696 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144787597 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385922294 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136413967 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686814099 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089967824 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123256332 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177706399 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.476616741 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082790381 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109805832 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117109589 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142288075 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128502099 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090868694 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186030927 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081477334 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193025811 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107325533 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081178604 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274953506 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201847693 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684413344 seconds)
  done (took 10.912393512 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110792034 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133617453 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097332278 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138443198 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134452449 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099047849 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083633978 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096701255 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121687918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178265602 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114167256 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136123731 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094560266 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082441695 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114585691 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244402506 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119523478 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099357248 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100130041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08843853 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13805353 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112452325 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108118416 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094145291 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166539808 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220524013 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110440614 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125679562 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097062512 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112140574 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143427723 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142830342 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094303327 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080174972 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172106866 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123937638 seconds)
  done (took 5.127212773 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.082759455 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.111069131 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.136822521 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155667994 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186562552 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080948753 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141687546 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093840899 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112607008 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257108835 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.104685329 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163481401 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140892512 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115253192 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081341722 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09837401 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095692922 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.555682176 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155800427 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116218494 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115361115 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102293517 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103012438 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.347787562 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103187553 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095358129 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080884881 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081779111 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159970861 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081097562 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.135790041 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121988002 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099652207 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131877194 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190572062 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124289318 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117011756 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096537008 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077551205 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190942814 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088190456 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096297505 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10219977 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135703584 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1341011 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096348975 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08064804 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20374079 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12295959 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095669736 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09667851 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093987476 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931538215 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179624318 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088736133 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095203173 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32915338 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098331238 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097202726 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078016206 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272373367 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186666547 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097592741 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079011769 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097049526 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080740016 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.423368998 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081162032 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.79189536 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083837516 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106822553 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082401054 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095843161 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102962982 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08721621 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114794588 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079210787 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097910008 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078842486 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095635641 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08028831 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107813545 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101030224 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080421062 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164048487 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078461704 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11523872 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126136361 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083345257 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094887103 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129589887 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083049632 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097205252 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132953103 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080885457 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108470568 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098819665 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078256536 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144647165 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09729834 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134705977 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092561218 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123081307 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098540431 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113695441 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1101471 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098430628 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084538366 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095340599 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077451961 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164472274 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08068899 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09788357 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080744134 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109476655 seconds)
  done (took 22.339443157 seconds)
done (took 40.14170449 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322746775 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102636394 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101863169 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102168335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099839698 seconds)
  done (took 1.488877502 seconds)
done (took 2.220660169 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285376246 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172951284 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095268361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164630881 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093492487 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17165159 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160302314 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111312251 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199805415 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094280096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160399834 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092680985 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077041064 seconds)
  done (took 2.638613948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094045372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114753432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082908594 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109536993 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076892393 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109875642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092200461 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116333518 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109104228 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084963834 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092391932 seconds)
  done (took 1.813970279 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094349063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112736212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083004904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109647945 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076294397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110478177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093311427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115942994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109261324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085436272 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093091698 seconds)
  done (took 1.814842182 seconds)
done (took 6.987688899 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091346553 seconds)
  done (took 0.816021185 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.918140195 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.84169193 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113587202 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150787403 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317178925 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19094107 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.477843821 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125977267 seconds)
  done (took 11.051659392 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143583804 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083620847 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103131784 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083484195 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103436505 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081772025 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102631857 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100863322 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085083047 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098003949 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083637062 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102537434 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098358498 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081982268 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098018548 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084076067 seconds)
  done (took 2.326506109 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11920469 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116372956 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105970134 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107375392 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086227087 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10471538 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106053267 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087839891 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101999396 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10286337 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090771219 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10434577 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102480951 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07874962 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10544048 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107069333 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085377349 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105947312 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10511229 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088322457 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105350073 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095059116 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086052609 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10585894 seconds)
  done (took 3.243553331 seconds)
done (took 18.165445441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157806202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107781149 seconds)
  done (took 0.999479246 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09419296 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111840522 seconds)
  done (took 0.944969887 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096852135 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095345834 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119775466 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108684892 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080100292 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096129777 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11804107 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079720134 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095715094 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078904897 seconds)
  done (took 1.711504422 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081790632 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108990281 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100596322 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094470026 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104180039 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09386804 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08734335 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099060304 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108731961 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076894569 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101300987 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112338989 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084288144 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11540508 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103761842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082642333 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102056209 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097802459 seconds)
  done (took 2.497562369 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078771277 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095912662 seconds)
  done (took 0.915929787 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080683536 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093861607 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080358467 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096405705 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09349888 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07715723 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092445524 seconds)
  done (took 1.355458231 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481025511 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134449997 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258677672 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101817016 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104325807 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301614881 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097226923 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083723436 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103160648 seconds)
  done (took 2.464119782 seconds)
done (took 11.626763063 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09267491 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114828405 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111333313 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46024206 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106439128 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096835954 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147287778 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247828256 seconds)
done (took 2.124773318 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142180878 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.600259727 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425976788 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229998917 seconds)
  done (took 2.0063005 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400158021 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097941078 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081954174 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080496731 seconds)
  done (took 1.413988943 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080612894 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099729071 seconds)
  done (took 0.933510426 seconds)
done (took 5.24850561 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079896024 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131708052 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080095395 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095973219 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079824075 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095339156 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077252863 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097444761 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080090313 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096905329 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093140223 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079896686 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096371972 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077424212 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093403072 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080516795 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095611361 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077364191 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093994995 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078373752 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09311459 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079363544 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093469288 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076809253 seconds)
  done (took 2.910797382 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09915132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097895503 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102291979 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085454179 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101711034 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085427036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102451604 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096804883 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086020651 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098682086 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083633794 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100508056 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098838401 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084775167 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098823571 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100815722 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086071808 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097526736 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082542492 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101663558 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101710225 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08042003 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101145612 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086447487 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100724262 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10074582 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082621258 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097646915 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101840226 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083603084 seconds)
  done (took 3.583813978 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085135266 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09351378 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078165655 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101247931 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077394915 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096852385 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07723454 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096644534 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07847456 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093984122 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07897211 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095345327 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078156982 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096650527 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078664758 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099520384 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106655698 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078148904 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094746698 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078595417 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097482562 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077528139 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095743725 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07708799 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095182326 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077195668 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095251589 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077652795 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096039768 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077554265 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09866599 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081781647 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095280231 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084158695 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099104105 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077088866 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098818982 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076940045 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095318558 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07740394 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094263019 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094114658 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077550606 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101446153 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077756731 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096922092 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077779101 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096726454 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078494557 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098136545 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076942794 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094724173 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079929322 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096455407 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08156951 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094997887 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078691297 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093724741 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095625765 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077416175 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094320764 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077369396 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097168709 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078640229 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110276222 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084527595 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094871634 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079555474 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096030494 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080022649 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096822673 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091453143 seconds)
  done (took 7.118878337 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08282596 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106069537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079924773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096913207 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076236902 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095808723 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098031117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078183227 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097179121 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08458471 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095143366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080080011 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096469131 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107171332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078409572 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096365739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084308464 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093180028 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078822024 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098434371 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078575682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098822145 seconds)
  done (took 2.748259379 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206865449 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104490125 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14065112 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106058178 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082817146 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105373168 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102056284 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086675403 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101621333 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084018034 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100128498 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101529659 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0831176 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100461632 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099510148 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084684499 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101460951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084701078 seconds)
  done (took 2.642537857 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.20327566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098585653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102252518 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098823755 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09943902 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082762033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103610321 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106803106 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083248485 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097994855 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090149247 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101106226 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100122528 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080955647 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100886593 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080718636 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101077152 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080776525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107032488 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103459189 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086213864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107708743 seconds)
  done (took 2.984517128 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095933173 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100230731 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118092809 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083361047 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0946943 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07963335 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105479901 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08108353 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106597694 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100869029 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08043879 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096814968 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087280732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098176881 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103295118 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081602897 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100249819 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081094378 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100116662 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077124042 seconds)
  done (took 2.639000775 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101868551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100059087 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098399272 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091300287 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099931824 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081124998 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10889541 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099142688 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082195037 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125195012 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100325903 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08216361 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108426361 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106163762 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098962017 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091918331 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108568475 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108107553 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082311431 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100194574 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123793006 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082523216 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108277161 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099923182 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082319179 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099928389 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099402801 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088401277 seconds)
  done (took 3.528040488 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081035583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098284466 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080859891 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095757375 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079046028 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095847327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078659741 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096344397 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081029698 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095599138 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081646192 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098412375 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081633955 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098494576 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080650489 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098481815 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080682463 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096481245 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078556111 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096013854 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080704166 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097675973 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081156779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096057935 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078145806 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098915198 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078231781 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096515767 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080973742 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096583098 seconds)
  done (took 3.428798457 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091003327 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106216128 seconds)
  done (took 0.967039389 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078947226 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114096408 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078346467 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102662019 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086943319 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099740836 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10726529 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085530847 seconds)
  done (took 1.522589483 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095958269 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110287522 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08329738 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113167848 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110171371 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097778214 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169680788 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101236895 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086815759 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09731038 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11221183 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080804969 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104896819 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081088554 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104936879 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088583042 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09714698 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105288449 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084192205 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097654195 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083437379 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11229916 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083452538 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096167193 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101148328 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090264113 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11211863 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082911254 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102429282 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106545562 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087685738 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092900187 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081780922 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099678424 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079265272 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108265804 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116149214 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085366285 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109436281 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083061839 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112028705 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094667655 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086434408 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105030122 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091596422 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099138358 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100628857 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076881812 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096813733 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084389549 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094951291 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081649027 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093795295 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089068628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102326891 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110717738 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081471026 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100876154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084421829 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103908861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088482781 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101868477 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101806434 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081189264 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106217294 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085876234 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110490112 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077279292 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094154912 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09667316 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091866211 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124136292 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088666709 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101248371 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100919944 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080000062 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103481635 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083699932 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106235066 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088554454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100039513 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107378846 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089109662 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100556499 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085572016 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109122271 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097929118 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084390825 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097115569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117751859 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080263313 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097597064 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079378049 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110978672 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085064563 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099899944 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078767812 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10673617 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076252865 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101193864 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10124497 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082328772 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112010906 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104833693 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088917234 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109465253 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088614002 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099755164 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103032967 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078724755 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101560861 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084257151 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106784075 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076486775 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102548242 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082791564 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101871326 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108972767 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080228775 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100557198 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089700499 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10599794 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080297913 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096651467 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101861011 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082137543 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104256323 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0895606 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099461711 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077858947 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095538679 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085384126 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100404333 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103602849 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087937229 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103785442 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075803168 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098259187 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104768946 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091214254 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100565149 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082764706 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108019317 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082651173 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098757219 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106749378 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084904164 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098443124 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088401993 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101554096 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07707103 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103805867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102842954 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081297891 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10366136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086242263 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102379678 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083006588 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099170072 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106724184 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083491843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100648105 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082123084 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099150178 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093517446 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102105847 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077193585 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097294669 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108211535 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080604377 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100053183 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081584696 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103495375 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083282193 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098281661 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081878896 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10169956 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112882818 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087506467 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101822401 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105998688 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094174687 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100361492 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084498634 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100661238 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084084566 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10181205 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11026116 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087747789 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106646684 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08401492 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097293459 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107046181 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089742776 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100163025 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080621626 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100232386 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085652512 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106812552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105729516 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083666582 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099336365 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082961135 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105439491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084883457 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10134982 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081228787 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106470476 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099995501 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089829904 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102987783 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111131143 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085690507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096060478 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085782983 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098915367 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089010556 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096211703 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080090194 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100329151 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101954122 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081411783 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10378358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076886402 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107847941 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090078244 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101471419 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081935403 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100659083 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107668446 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083783822 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104889091 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084887827 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108218959 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111677371 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080800896 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10357901 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093340334 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100884845 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076316944 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106370964 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080404358 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100151172 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099407923 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080048273 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103100444 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092008519 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110265008 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094429298 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085403543 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09939477 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081135128 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095652672 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08816319 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103873581 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083573164 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10821056 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10201965 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085910661 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104778127 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082443695 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102600473 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084893634 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104900446 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102383393 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085339552 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101347911 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085389516 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100344852 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080104892 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103452183 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082704361 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102034401 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106849046 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081736876 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100838521 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085938127 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102851244 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08325949 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101924046 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081768026 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103710326 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083411805 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100904022 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103874198 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07841938 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108316987 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08261554 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109538892 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082503956 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097648919 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107271837 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085494033 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106200941 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083811812 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102857043 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083939188 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102389026 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103957734 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08976653 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098849256 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093762095 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110901072 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102240704 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085215917 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101055056 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08494984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100120164 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083738813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102688901 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082792986 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101614438 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10489194 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085576884 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101082675 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084384688 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103502033 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082970783 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103121923 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076790817 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100510126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083289603 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1028051 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112767153 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084145801 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105088942 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081709599 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102760161 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081481955 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098372976 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109089165 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092145814 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10255254 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109025841 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081957668 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102344521 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093474083 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096022944 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081604583 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099878459 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081011668 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108768878 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102084149 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101279438 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10174787 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082059492 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098574864 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084354401 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101034816 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077026295 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10012699 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105047446 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085628521 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10037801 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08397264 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105475568 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083541064 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112268651 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100756921 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083248324 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101229199 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080186024 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100303944 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081509875 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104806621 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084312617 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099840367 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080239929 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101673049 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083552892 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102635855 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102734402 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084314073 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109169762 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0829673 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106782806 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086448304 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096462557 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10479865 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082894754 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101534062 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081808229 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105472319 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086107592 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103239051 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110867067 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083426322 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102855937 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083386884 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099961153 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082553868 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102907268 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083215379 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101329457 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103447692 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091270003 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099597739 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086030626 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101969261 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083104415 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109344128 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103782945 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086554846 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110278141 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085953723 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103800146 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109683382 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087231019 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105411666 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084379237 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104371589 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088725291 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102307943 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107679131 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083129139 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102984722 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085207974 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0995978 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082994567 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101639203 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081946913 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109250662 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103197914 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081888217 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101617405 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081488456 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103474103 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087938593 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111099219 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104402762 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087242222 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097294013 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080770686 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103493163 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081327758 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103630985 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08752926 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108717811 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085410521 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103246014 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101214349 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092522427 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108199455 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086548741 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101022706 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086369509 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103211791 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105179589 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084869894 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102746914 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085217122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106670971 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084608648 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102117133 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109534645 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087446989 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103174192 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084612023 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10353856 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083432894 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098739008 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084841003 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10475938 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107719507 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085575107 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102191464 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094264971 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102329895 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082454086 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106196231 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101421089 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087387536 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097717908 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084012869 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104293918 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084416149 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098660909 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082521655 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100010625 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104894737 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082645187 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097834447 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095176881 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111844372 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086600546 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101318026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100842559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079554855 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096952631 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082326409 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103818189 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084597777 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113874581 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081648006 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102003852 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097913059 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083658096 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10529128 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08732731 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099519048 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078655162 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102223798 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086445077 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108204327 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082125876 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102288126 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105547513 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08563571 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100079705 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087579502 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099655588 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086875624 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116965365 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103958488 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084500739 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10999371 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090803801 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103096046 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098114677 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08416826 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105629349 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083319625 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104394431 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084486894 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119698401 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1059979 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082200318 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101398876 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08532382 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102504151 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111399178 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08517542 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102917568 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088129068 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104706183 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092872723 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105928997 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111216084 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086555521 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106142025 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082919148 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103477751 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081338464 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101618316 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103492278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084182638 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10862879 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092262643 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102100474 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113125077 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092850728 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107936427 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080271098 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10228744 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083119527 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098729217 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105552864 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082838642 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10091003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081650676 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102434534 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08471868 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109824978 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084281572 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104357553 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083596419 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097205241 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085677468 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105299972 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103738208 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080232277 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102747289 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084926003 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107115202 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087341173 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103568119 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084008751 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10437146 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103217715 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079608497 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110348519 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082433017 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105940828 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082935002 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103843828 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083858906 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106919439 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108760752 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085111357 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105534641 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096916157 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105963655 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100093117 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081753173 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107416967 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081852618 seconds)
  done (took 57.712055199 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144961036 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080854247 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098697768 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079103883 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112684708 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099072096 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07902984 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100252545 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08089828 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102634922 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07956935 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099043483 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1084885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123191451 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093226958 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104273011 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078226524 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100621253 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097841216 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080449453 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108789688 seconds)
  done (took 2.875853356 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104010162 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117776067 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115023092 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117748062 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089258186 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114842949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114643597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115181198 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099556551 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111936162 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117934858 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114442957 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091611834 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111046885 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110536061 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09266575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118770208 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108965971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115906207 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094567383 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112688941 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115100706 seconds)
  done (took 3.225256531 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084028761 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102592963 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084565668 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098030826 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082957644 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09822823 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087742569 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101002419 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087406139 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101387135 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081991966 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102505138 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104268269 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078494702 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102632248 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081316819 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152772874 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10734908 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082600429 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105121215 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077849246 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105942732 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097783901 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079313413 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101415435 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08764151 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104139046 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081224658 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103156287 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082391239 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103137091 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08142467 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10489824 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103200673 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082536666 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101569062 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083599619 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102656984 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078685669 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101026092 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084758311 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09886919 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083991279 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104490732 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082077566 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100945779 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084982435 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103361717 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079032049 seconds)
  done (took 5.435765745 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103975434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163900203 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086096151 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14360505 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120681357 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113165547 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088124825 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142816154 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103289424 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083687738 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124133394 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120865437 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103638021 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090187472 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107271196 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10355921 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086425509 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103055238 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088829988 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103852296 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109205736 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090237199 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119699113 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117799249 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10856492 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08377772 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103584472 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.089548943 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118712964 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109935029 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109693998 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090860864 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120410723 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110854454 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082977624 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106821725 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122071415 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08482574 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107796028 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101076126 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087329181 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109516813 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110676756 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102210443 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104668316 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110209868 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085189054 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100620884 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118176831 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086532377 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112617518 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120576832 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088268745 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104655104 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109289889 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12035143 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085078285 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102791296 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088257168 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11833369 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102121869 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088826864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120299059 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106685225 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092830026 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119804518 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109484733 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108488967 seconds)
  done (took 8.153070455 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092849303 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111508759 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120326534 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121315231 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090667872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111603154 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110678367 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091574456 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111104485 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116238254 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110338806 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133509754 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085694839 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114810638 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111326683 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09098325 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112067628 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110765707 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091085918 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110582435 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110758918 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120091804 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090983719 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120151363 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142500583 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10615664 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090083121 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111580306 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12055901 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110733949 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1226695 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090903555 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11045075 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120802972 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123436586 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090921811 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103541631 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111256575 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09113136 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111249683 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105684853 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100649656 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111606309 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106548933 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091660531 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110975611 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120476876 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123301465 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115039181 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096812215 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111738394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120208009 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111171976 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090635926 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121386563 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14683259 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120607444 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121332712 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110918161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10028301 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120248327 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128552254 seconds)
  done (took 7.667997289 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107770706 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114358952 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118191752 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10095549 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083187442 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109685999 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082232839 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103459236 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115230112 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094532969 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116496697 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108822306 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091433182 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117053075 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109475333 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112463461 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09044224 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109266354 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114194914 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089265663 seconds)
  done (took 2.923772958 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093948343 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124536058 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085269739 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113048406 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108389819 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091324657 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107913332 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108037707 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086533156 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108082846 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095255006 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117253388 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106490933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091508343 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117149629 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112284903 seconds)
  done (took 2.506966714 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099553691 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117144584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120752579 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084781884 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104905484 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081265024 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105891042 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100976239 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081285912 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121459764 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08446705 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109023817 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106202481 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084169846 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101274341 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088848027 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102151155 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082495815 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105301458 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119634711 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096470624 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10427307 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084775692 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107184369 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105767285 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090032426 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105869876 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103987727 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083202652 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105836664 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085737473 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113592751 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102471656 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083972625 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103212277 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082535765 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104742886 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085471898 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109490964 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104981695 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083715139 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106003713 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085004099 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106659961 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08146614 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105949908 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080695385 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111659345 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102668432 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08603294 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105894756 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087164023 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107667618 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116257657 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088717634 seconds)
  done (took 6.259694405 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099114536 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1098728 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079861698 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103855746 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088309484 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108364047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109228035 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08855374 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107184805 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082865425 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108244139 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089820821 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108064304 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108798863 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087019406 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108757498 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080557943 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107086448 seconds)
  done (took 2.620569344 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091415251 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105321589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092604797 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106066566 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085235217 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108689993 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080544963 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104518403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104028344 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085943222 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105502693 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087956252 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104176236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087251563 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106357281 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084615209 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108156554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104033967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085625581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101790964 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08838055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103739076 seconds)
  done (took 2.973848676 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118289319 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125675545 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094041939 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233335991 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104075411 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132571917 seconds)
  done (took 1.651480608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109670037 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119992005 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106621874 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107443791 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115811719 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086561393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107908021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108153505 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117913354 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102253864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108009001 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118119327 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118514502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095918025 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11465306 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114985278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107199748 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087264226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106369933 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129143274 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087962489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118309072 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108071488 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08722711 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107245935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117919747 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118538313 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100886159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107493907 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11743815 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11432056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086880854 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118529406 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123154817 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088388345 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11862777 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108372206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127851527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114004826 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096349922 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109107018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115178466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098625191 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114330714 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118186079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108144074 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093636831 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108474756 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108198854 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135766896 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094290056 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117659676 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115025634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117571474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096988798 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134369675 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121872255 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118057346 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114891768 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122993732 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11790023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094326576 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117125049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12251304 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114710409 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096742473 seconds)
  done (took 8.123848425 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102893743 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126578786 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109078668 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122921028 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097081303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107973485 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108067477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087396376 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108579935 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107355552 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151885988 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088433099 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117843974 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119082818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087584181 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109463884 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108996012 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117685041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087368124 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136275576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109410398 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117408243 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096612104 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116927701 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123429781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114796095 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108239854 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087165507 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108720437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089055255 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115025628 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10915418 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117923749 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08669018 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118113612 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109064333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08735854 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114278548 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108468856 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115182126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096149672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128716696 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108631264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109058646 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102405538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10886776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109031841 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08685628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109007379 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107843867 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102479637 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122354921 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123066158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116534578 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108365952 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088294092 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108827184 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109433023 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088359295 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115338258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117384231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087538442 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136453435 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108442179 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108469857 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118088775 seconds)
  done (took 8.03650938 seconds)
done (took 154.988910006 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21332093 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199442979 seconds)
  done (took 1.260321724 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097806812 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137034886 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0966651 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169065012 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107144904 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11851766 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139072974 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097979939 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107288713 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085718394 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107301027 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088241204 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172342833 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086135894 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106859043 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108260803 seconds)
  done (took 2.681083098 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.117985008 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.233014899 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124769622 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105317492 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089287526 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110970187 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084358089 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112472024 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089272213 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106227406 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088153716 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107211099 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085440718 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107062609 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110011525 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087934186 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106065213 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089344873 seconds)
  done (took 2.809924041 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112882111 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146710051 seconds)
  done (took 1.1191265 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242524639 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164936256 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227163247 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.465639893 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.268699399 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365227238 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.199390549 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210372044 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167010277 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209367591 seconds)
  done (took 3.374060012 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119411087 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180018017 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315402856 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155688009 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10648379 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128794726 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155580409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131144578 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122976822 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101563202 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121883932 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11789726 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139846385 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09393839 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11480974 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119282304 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120194842 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113547602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115613482 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095009752 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137747616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085172428 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115731062 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11398451 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097175351 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119234311 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105657137 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085799879 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116598671 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093933544 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114079221 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125527136 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118107998 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155286122 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123705465 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156213564 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118363185 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091382982 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114992625 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09065804 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118878361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119684633 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124850658 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097380026 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106247652 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097196479 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106684265 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084849726 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11479408 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119110297 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093513193 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113942586 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155218318 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119721889 seconds)
  done (took 7.376755863 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790484076 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160324832 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090049388 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883190406 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140420487 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103056478 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779434241 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111351042 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257407466 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761105816 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13342841 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121690159 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21133185 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26197122 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929976113 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287274896 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669015978 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124629261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151167169 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154275362 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118418314 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137213701 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11071736 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429900707 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117995435 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113386496 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09750875 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120266221 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159878654 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125726188 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115094465 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182004538 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251592979 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204787236 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09508577 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111892606 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111439072 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169867793 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262861658 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194508114 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180083304 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109359547 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088931485 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121707572 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131760156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086243374 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185595085 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175599679 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169346046 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115179378 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118937278 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097325911 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121193941 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163335633 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122506009 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311059392 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319013057 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089239914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121430696 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126530061 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257620132 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10241401 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225750157 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140306621 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212454015 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090197862 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77775304 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171004411 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111149248 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095236414 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120558941 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117928821 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098806363 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168405349 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408171425 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123646844 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113568614 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089914078 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228680312 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102551442 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112190091 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161676563 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117511972 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121184455 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102235109 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122968395 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17031942 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251061727 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10085837 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121084895 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116624272 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104302447 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116687408 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212638657 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220406393 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162747642 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230860569 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099433952 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185101521 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168841089 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11957799 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174209804 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119846636 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103233377 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12331016 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215907474 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144829772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124203387 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093745435 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119733174 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147794115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127028495 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097285206 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191023688 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458542362 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168451906 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110157672 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12888471 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097555152 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162354511 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11756592 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261632387 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123110322 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173522731 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119794495 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089010949 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121068582 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164460017 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122434721 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099080155 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123412305 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119470755 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235420379 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216850436 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12304653 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223517745 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183776663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117814938 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171567963 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122231945 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172168467 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120201614 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099699599 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116982129 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769222871 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121817461 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098093215 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115552546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187096324 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090378433 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124257727 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124875784 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086497908 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802797872 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126254826 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098970845 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125819156 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119291907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121601573 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098388677 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115879491 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163531928 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230454947 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120262797 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098496634 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125748836 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159808538 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117985896 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125309505 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102953622 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125629285 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121874804 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092654548 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126872171 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168640438 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184934728 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218411564 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572716694 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112958451 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103201089 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228327757 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113052503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289287174 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097397735 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225709009 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162046857 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1222283 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314405916 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165870233 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187549904 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128449769 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171797932 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109699392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117697375 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165869436 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089572883 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118105587 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162785272 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125264323 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123445917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950252335 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08965087 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225284268 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110080857 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171092373 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117471637 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119819092 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266939936 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112843419 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127887637 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16631893 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114161196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102359721 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.880249582 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124139065 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100118695 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119297253 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223421893 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164669028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120062695 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096086698 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12156041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162800984 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229650133 seconds)
  done (took 44.13235141 seconds)
done (took 63.603561785 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279118406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216261719 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270032946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170492131 seconds)
  done (took 1.895752898 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173107711 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149683148 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122078145 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107205346 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151570062 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085175162 seconds)
  done (took 1.676854945 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360807212 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275672092 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242088448 seconds)
  done (took 1.767602585 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319926261 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249913541 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471298343 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324365225 seconds)
  done (took 2.351277242 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213150824 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132761254 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111006888 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104001455 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198097385 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245608255 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14244079 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202889542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098721136 seconds)
  done (took 2.384678599 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196883908 seconds)
done (took 11.1598251 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.268718265 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.168021852 seconds)
    (3/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.231716838 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.229763905 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.197254169 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.19792325 seconds)
    (7/309) benchmarking ("sort", Int8, false)...
    done (took 0.199489722 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.219533295 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.14873757 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17562279 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101572068 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.251627212 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099154893 seconds)
    (14/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.189726317 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.201087195 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090144626 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192472646 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.215992721 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121264752 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181677301 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.098698744 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122183783 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.215187244 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132595676 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.201859754 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123236205 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138539159 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066995176 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240602186 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.167896041 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.168014413 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11062907 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092366275 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120992212 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140857146 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.227186343 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224901319 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125654485 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113879858 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.158919808 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.088593335 seconds)
    (42/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.159423064 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189853119 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092808024 seconds)
    (45/309) benchmarking ("sort", Float32, false)...
    done (took 0.172256751 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.141357532 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19239201 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167826031 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089530955 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189957288 seconds)
    (51/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065961615 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07189758 seconds)
    (53/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205598071 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065673078 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115307052 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067401758 seconds)
    (57/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.187132441 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122378167 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126053377 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.121315531 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195749647 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13380148 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109333759 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117522404 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.076751021 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139761865 seconds)
    (67/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085077861 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113743941 seconds)
    (69/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.114128546 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118783537 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11003116 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110473864 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119937021 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.167222507 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138435599 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137180551 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096975815 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.18937032 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117449303 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140637523 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094752509 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.136348071 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08593964 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109369034 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.137142015 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198473278 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150183895 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109371022 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111656514 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185904059 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156507143 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122295269 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.145766093 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12359565 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096253259 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198759034 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117285592 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10122654 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186135753 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 0.110392552 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.123751459 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116770095 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215369407 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066650343 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111525761 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088657686 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066966403 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.139180953 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118317079 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0665857 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085437225 seconds)
    (112/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.147431946 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10889581 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111766918 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114377674 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086120303 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107269215 seconds)
    (118/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091363801 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.090300744 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115689013 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100132268 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150794544 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184487949 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12421772 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092450074 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.337974804 seconds)
    (127/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.120424863 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137494283 seconds)
    (129/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.120565375 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119372901 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.134335602 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148543505 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118067941 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093476812 seconds)
    (135/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121182784 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.139230668 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170243082 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.191199758 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109953847 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086825147 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109062894 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066245637 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172361087 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067384958 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.089962744 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112646312 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110267253 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 0.18160265 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094202122 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110125141 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066716822 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116949236 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073031442 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134725886 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110280631 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090879013 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091999671 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116508168 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092735231 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174461544 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067251841 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116420487 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110153973 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087869994 seconds)
    (165/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066338337 seconds)
    (166/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090627408 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06610833 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066691629 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.098593901 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.182142939 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193199471 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109363486 seconds)
    (173/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093584909 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125832602 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156242317 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093581496 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.141163668 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188960083 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09545593 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090879143 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166218355 seconds)
    (182/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098402715 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112674937 seconds)
    (184/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094659925 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114592213 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068085326 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114855032 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146589138 seconds)
    (189/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.098928287 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06689935 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183085305 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128092141 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086477747 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118537794 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222523886 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094019003 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211635165 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067263018 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123973323 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134277457 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093135865 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17290936 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111058178 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090967742 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219626185 seconds)
    (206/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090061727 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119157877 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115616021 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.162184073 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136155871 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179857266 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066606155 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110835943 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066962428 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137151884 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08537167 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121910757 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121822247 seconds)
    (219/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068269815 seconds)
    (220/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077509099 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119172972 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094481945 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144183011 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086922474 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090546201 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066074941 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110267953 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128127902 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116458495 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091554705 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091363774 seconds)
    (232/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08436206 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.116604415 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084738384 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120535503 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088262402 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135608593 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067618166 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076956794 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188083833 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067031544 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092858675 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108770919 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091795942 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215991281 seconds)
    (246/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102484614 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11368347 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093200184 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112141352 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225256416 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108217513 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093948519 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067450398 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.175165096 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093977511 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091463557 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115689928 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110984136 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085943571 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113967354 seconds)
    (261/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076344102 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176687998 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109814429 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069041172 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111052457 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068768349 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067140344 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117154033 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095016069 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109055604 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.181629683 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067223144 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067384299 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113818312 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11269532 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110968695 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08601131 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092451022 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085949496 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143430805 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125223645 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.159113674 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110265597 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094977189 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109064899 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087481518 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092369411 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085379434 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164380956 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067585345 seconds)
    (291/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115692533 seconds)
    (292/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089941904 seconds)
    (293/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11244567 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093973275 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10969989 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086395541 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102336966 seconds)
    (298/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086530949 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116373868 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148870717 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094049837 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095581237 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.09282306 seconds)
    (304/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068072978 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120724821 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091827779 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.159652736 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088559676 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093529533 seconds)
  done (took 39.639090732 seconds)
done (took 40.532252126 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099848969 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148754216 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096680381 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135740806 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124525801 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091253088 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11951481 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09783858 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124108237 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125169266 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098972668 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093687386 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096382421 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120846402 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096991544 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139367621 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124180109 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093993098 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119724395 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085864754 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119470798 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086948029 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11278903 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069839346 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12279982 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093771121 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117283262 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120427387 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087093436 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110902801 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090199142 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118129045 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086773498 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125072614 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093660088 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11941563 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097638761 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120500818 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088763974 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110519182 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119099369 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087660433 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118115887 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094732585 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116925499 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091788066 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120351563 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099282895 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139791781 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116538465 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095202273 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121819385 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096121727 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11830686 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0903781 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119753803 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091974137 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139202691 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119842816 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092469563 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118987294 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095336673 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117247933 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095062991 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119482376 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097617344 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124097574 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118619178 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096625714 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119088261 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086980642 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120638549 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090657999 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110923221 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09658224 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12243807 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0859638 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117268601 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093891478 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11592457 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109962458 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089429896 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112674724 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093145747 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113245715 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070166313 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090814586 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117369998 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086108811 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119483721 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11778067 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094433811 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112835318 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099291066 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110718085 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092757821 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11205545 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086836468 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112641774 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090938032 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110821001 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090164691 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120714406 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089223969 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117843578 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099373818 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11073964 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.092902251 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110244925 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110178585 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101879683 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121406481 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086573232 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117420944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086028183 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119738825 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086459623 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110826247 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086636481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111358494 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093297954 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110977696 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089573597 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118846991 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100618329 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.11059487 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114672715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08966 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111037248 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092881741 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111575372 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087190772 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113781337 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078144362 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089287034 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111721437 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117863899 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090455944 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120618357 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088601234 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11987797 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091573108 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117337145 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093075115 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110644088 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074148822 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116859507 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090279395 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112412202 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086646334 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113493692 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087317017 seconds)
done (took 16.975753254 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087997654 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185571626 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151799932 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143410633 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107255866 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111977081 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122099247 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119354821 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113685322 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143641238 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110200713 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132444105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149481811 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086771661 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114050926 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090937601 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113729981 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102850379 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14652427 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133466764 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164385256 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086130831 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148394783 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137337906 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122446779 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105716808 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11317453 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091705855 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115726557 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112948053 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13296284 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091409215 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112513291 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134654001 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105351872 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121580472 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087638049 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11944008 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087494242 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111965688 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141668249 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109809304 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117996817 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118700619 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091530303 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114537574 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088559955 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12197928 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0989089 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117101979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12731648 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157134729 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091307168 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122146109 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087165178 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123235149 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121883833 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089252936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112819777 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090723208 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112233092 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090474292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127734 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142158523 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092847216 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12249466 seconds)
  done (took 8.655177189 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104204919 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140383691 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10581587 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.147836194 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112080796 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088861865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113380055 seconds)
  done (took 1.772453657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088669953 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135084398 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110761642 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136013883 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132870872 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108756955 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124117429 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088306801 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132090896 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089029207 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13432522 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153007992 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091519825 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121686039 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137677771 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08898476 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138664979 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088551426 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118246686 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112276835 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117016951 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135141131 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090781067 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114270126 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103927686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114674698 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163122537 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094251855 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115870431 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092013177 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112571043 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166347287 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105121599 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125892419 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088569259 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128849481 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129954642 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086785495 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130999318 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09416379 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128691578 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089709064 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115097358 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087240149 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119349169 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124162397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090422738 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115272395 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091752738 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134898224 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090070757 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130013586 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089703836 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119296834 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090563996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120011163 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124182577 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090282427 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134890361 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090910303 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131342965 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105423765 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127802135 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131834988 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091530409 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128298975 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1031275 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117989456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090977212 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118120027 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130731298 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087177589 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116462163 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099556225 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116478813 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112605338 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138714464 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091430185 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125120794 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114691535 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089300467 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115036894 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112182891 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119231352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089204823 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119695319 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092301727 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113295284 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088274973 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118170509 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087179757 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116178068 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091619815 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115459368 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116869262 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106220096 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115794631 seconds)
  done (took 11.866067528 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090266456 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115199648 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092039764 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115912157 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089959487 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115789297 seconds)
  done (took 1.591295077 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114819166 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119288969 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104077168 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120991624 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156692927 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104278921 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130225579 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124795828 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108411626 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127919442 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13081803 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104717019 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137316827 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121835341 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103663616 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121478317 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104663827 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126052482 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128176691 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096159486 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136987688 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121269029 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096563173 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133014683 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11929556 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095986459 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126788058 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103242817 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127574057 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123386766 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095892852 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119461794 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096447054 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123278606 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131073918 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09652232 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121300184 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119051506 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100452983 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118501039 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105289107 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122787062 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127531034 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094149302 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124293384 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121777487 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094278678 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125761302 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104294337 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120697981 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120087049 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095642091 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118910465 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094128026 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122430432 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123000159 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09489686 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130526191 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096483309 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122182487 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118580188 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093628748 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124959991 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093035351 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130216835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120187746 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096747593 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122969408 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122744631 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095838491 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119650225 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092997617 seconds)
  done (took 9.257703091 seconds)
done (took 34.098014497 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689525425 seconds)
  done (took 1.662550683 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.707602884 seconds)
  done (took 1.679954744 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.707878333 seconds)
  done (took 17.687109649 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497927218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584329673 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.885371991 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181403609 seconds)
  done (took 3.12135491 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956105368 seconds)
  done (took 1.94788378 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296873962 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258892027 seconds)
  done (took 1.53820374 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769763159 seconds)
  done (took 1.754955674 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.357418638 seconds)
  done (took 2.33800436 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331865107 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185538061 seconds)
  done (took 1.504906705 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545283158 seconds)
  done (took 1.535792844 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.785031216 seconds)
  done (took 7.777764841 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268125288 seconds)
  done (took 1.267957969 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300503809 seconds)
  done (took 1.289618163 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.50086309 seconds)
  done (took 4.489197758 seconds)
done (took 50.572201821 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098809308 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126826975 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102476842 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125284405 seconds)
  done (took 1.442227413 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101256316 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121753014 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101138716 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121413974 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127329676 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095706911 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123345301 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100672908 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121783862 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096186379 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121227377 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120363762 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098778091 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122752709 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09289275 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124607427 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099558599 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122212106 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123985582 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095927949 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119559566 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09748409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124257361 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095089234 seconds)
  done (took 3.666774497 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100215832 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119838526 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095580913 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117898672 seconds)
  done (took 1.436093874 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099799279 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14246587 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138487664 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10036197 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143651109 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136146968 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09283098 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117062454 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094529419 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125687559 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089967553 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14972258 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137968689 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099318459 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127818529 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089254031 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118256747 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137839652 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099357886 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125675805 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094926733 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126083547 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090145301 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139934715 seconds)
  done (took 3.814755602 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169779256 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128312028 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139373552 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095461734 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161533107 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14142015 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087810253 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141445379 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088123123 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132152556 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118098431 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134049026 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130656545 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088114099 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114445118 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087787718 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130352691 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129755825 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090402547 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128785291 seconds)
  done (took 3.437948275 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098697963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117773743 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088317282 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116002643 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098557242 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120821608 seconds)
  done (took 1.6436722 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091695467 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114878398 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089918186 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115016842 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094860653 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115333181 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08823228 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114869337 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089845137 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115470228 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089708199 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11365091 seconds)
  done (took 2.237837093 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.493630274 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117620894 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117672154 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088669694 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122625582 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089309047 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129639672 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092154543 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140625828 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089456357 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11571462 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091944243 seconds)
  done (took 2.692228216 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237205329 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126109955 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287037514 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367126878 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15438852 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17677399 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279654366 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160977411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223126833 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167165076 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204051797 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224310457 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152469139 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189026866 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139213468 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118691346 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232182773 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247286981 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155200397 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209204664 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227776605 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167369124 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179825319 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151559776 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137701709 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17256855 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095199793 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130805938 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233669651 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176531677 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188080083 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187534019 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120453182 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23635177 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253121205 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221260107 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285751665 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108617323 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176112578 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168544579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262580678 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136666546 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204251519 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154962398 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131167942 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188693866 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18964002 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175979517 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152735145 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112697175 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219311127 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237265964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192079747 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136616126 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303959863 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150020643 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.174836987 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222120008 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222986233 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225983802 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187480708 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120181894 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189442522 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216065329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184517012 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175108469 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179681745 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148714754 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228084277 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188502291 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164405928 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220293005 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187433645 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141143428 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170235212 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173538085 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172913789 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257637148 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184219779 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121841452 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169813985 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150215459 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133067732 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168476583 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125011532 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237417067 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117143883 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164071022 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245168576 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159882713 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160366073 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205136813 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229989405 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121011309 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111173637 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155520999 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15671603 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195156182 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140414601 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159697893 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162890537 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130725248 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185955108 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096395465 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211034314 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091755688 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173220895 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209977483 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099781738 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162075468 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152338772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150704222 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174596044 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225449046 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115115047 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134985659 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235250113 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17879734 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151408888 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17905368 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202024669 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144311192 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149996669 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201395702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244497951 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140452475 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204065581 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1581553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136099965 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13187537 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181741789 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15545485 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162180309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107902348 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210248287 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206377449 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125227226 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111732879 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221951752 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132826423 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105762476 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163351082 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147920186 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139636734 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152332177 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154275039 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182400218 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176920169 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154667706 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164973318 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153683383 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254718225 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142417945 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15134017 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147748488 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094156386 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219212446 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200130682 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130670825 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204214734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170598297 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231975326 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169637973 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134365899 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177611079 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102781511 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12095391 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193572857 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167469239 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160995692 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22424922 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201691582 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.206707922 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183489258 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175231582 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173243334 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166623509 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156170796 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13877921 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161835669 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17251067 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095577369 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144222573 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134942302 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149231815 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1431808 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106714533 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225507921 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169867826 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216625429 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132372238 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149767442 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181787731 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128599705 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173919513 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205332424 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120731513 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227352827 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195368576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186758965 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143800983 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230164095 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093447712 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12609661 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142805707 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170436792 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134387099 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108729097 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163580503 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181309923 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209206114 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178643805 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23898987 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173200444 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191783359 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122011728 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141763791 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212549844 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177503274 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189074366 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116417145 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151399406 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177877433 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158006482 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256631042 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169668058 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174659863 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235280859 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15044027 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105105715 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151446327 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222171631 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155738529 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178348933 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147243808 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114471875 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161475021 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133904501 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160071973 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210674247 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16354107 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189251644 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151267516 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183820566 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129394607 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164562081 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159615586 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16607157 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081166575 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202083874 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205231686 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149317204 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169370644 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189460083 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132161253 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305415296 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242087587 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194797619 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13809311 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15618367 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161116475 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163633202 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1720645 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17805561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159891781 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187338799 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158878911 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137875275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140878635 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148796807 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123685071 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131988784 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149580851 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176934315 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14015335 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184074222 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163828417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15972642 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171934838 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15027205 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144481642 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153089983 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215220397 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210085762 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211227995 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151659792 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180651683 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234321366 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098435719 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13350708 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13326529 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179318662 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108015192 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221881484 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188536713 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232772173 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181937289 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19413601 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140356279 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120250153 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15728322 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174296494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210126094 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151818338 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16032975 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231770979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120062276 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132979559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177734739 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316427316 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119550972 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226038132 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080714017 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281593073 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124087133 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133086322 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136749405 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235641714 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13632896 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188914238 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171812751 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171684068 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165395417 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150226762 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192743908 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245045529 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202907671 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179060339 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13323636 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156709085 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177656832 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219976151 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15852495 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112826997 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231864475 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196245207 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195735033 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143916134 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17150723 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169638863 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157817976 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21563458 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107923936 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235574182 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134652632 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195570985 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154823953 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144537898 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177433201 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188874419 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141472757 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215916412 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182654363 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13564437 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105438622 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169107929 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205377701 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156368208 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100511211 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179329704 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126529564 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193134799 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259423204 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135929685 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154723773 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148083497 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108078949 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155227812 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158650655 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141564195 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163621647 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203925984 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135097124 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19186155 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229929619 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170611137 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17514332 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146314458 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693264372 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130852957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196495667 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160538131 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233445572 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121788523 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201306542 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131503809 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195142806 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19618639 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160167284 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231617365 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193540727 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.205406721 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105582128 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157687261 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164087205 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144685197 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152100187 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169773052 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160735095 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155843714 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17753906 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199309665 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106972615 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140515808 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199991248 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159962641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180921298 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179806968 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139922972 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173786858 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216187577 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106395956 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.20870756 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208929409 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143057408 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15354122 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134811578 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158360189 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261661571 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097650735 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232007479 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186092799 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159260375 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170274319 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148191922 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194340977 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156907547 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212730265 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14827331 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159950709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155290385 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110489856 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131422158 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156635663 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168355269 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150124284 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159807733 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139722614 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218207266 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097673138 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145612592 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292709197 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219609942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216069553 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137635659 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136353848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16196911 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124061983 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205456537 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17885564 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137400928 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109338529 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138516001 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132849617 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136504446 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155875133 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199360384 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166844169 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236679018 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109146554 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280477804 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139414195 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155641016 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089584575 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133092808 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151774252 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147107078 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159960757 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193714265 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263743493 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14902132 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106806577 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151821398 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126730937 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108786047 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167975888 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163592468 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204965498 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118615941 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108310689 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15839157 seconds)
  done (took 83.445699959 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164030607 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131690754 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146867465 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202511863 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177681784 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269878286 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211064042 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253924579 seconds)
  done (took 2.654960133 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095555513 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145583469 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157802709 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134272933 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091762076 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120681605 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345337073 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134108259 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116833459 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122376244 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174657651 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094036522 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.553490391 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090488558 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120238744 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109122705 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091251392 seconds)
  done (took 3.790033019 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478814559 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715948286 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512016156 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097416235 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.129760567 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11310104 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.728907722 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195453071 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113994063 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484494503 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774402568 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158730849 seconds)
  done (took 18.600893747 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.104488525 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121411481 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107777769 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135522024 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096950488 seconds)
  done (took 1.668184164 seconds)
done (took 131.515768391 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.110062506 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411530309 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07219461 seconds)
  done (took 1.617029084 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112932156 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136679904 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109299637 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136392536 seconds)
  done (took 1.606288207 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103081657 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127575943 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10947703 seconds)
  done (took 1.445023176 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323442383 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191512003 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.163457467 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111812297 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129596989 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102418323 seconds)
  done (took 1.448688129 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099578464 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127574172 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09739647 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129121859 seconds)
  done (took 1.558130325 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100023687 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07146107 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103191479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074793786 seconds)
  done (took 1.449048389 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115220552 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131900744 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104345985 seconds)
  done (took 1.456446677 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.134904171 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138484846 seconds)
  done (took 1.38062604 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107427338 seconds)
  done (took 1.20891645 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.120112399 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169884616 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190670864 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164305853 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.23408585 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165887967 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141269545 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113932899 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13109353 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144280125 seconds)
  done (took 2.682517617 seconds)
done (took 17.740610702 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109813013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513007544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414376669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116256724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72497497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381328047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.072957905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145891911 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165228987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095070091 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139574036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674333979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028007095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474413499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98612555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3767214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677307024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120305425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119952881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093678247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.058338891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09219027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12171063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092763287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70464285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427154581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095445145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37649465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092313968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126292083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382944087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122478978 seconds)
  done (took 17.217725102 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097320299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174412965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098504993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138263411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123170597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094231983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12458407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093743753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180410129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123327977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111502485 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121521362 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126842208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095281716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141788938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092745244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125138509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093235906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121704892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122691046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111752753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120296343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094230493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121628774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094697174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135312183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095183016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121268426 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120834097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099117021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12692805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095834514 seconds)
  done (took 4.845576814 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146317898 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184514817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128429669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127954814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169629197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124976257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200130035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118701372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182942246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128665963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140016226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098263708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156948157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095081311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142940642 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121283488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097504741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121739361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0924352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123936742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140319631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092959703 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12183787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093361342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123751356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108508645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123744828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12136464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093222204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127469206 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100277931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123127229 seconds)
  done (took 5.191705113 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102403219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125812054 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108413059 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138504959 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099221426 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125530182 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097435634 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123809607 seconds)
  done (took 2.031833789 seconds)
done (took 30.390229436 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115489208 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129157255 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.110369949 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134258476 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103409634 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131643291 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091220243 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133509039 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134758391 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102513708 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137448282 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.098139901 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123771894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093117354 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135116165 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103061766 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132846953 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101785295 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133902041 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133055766 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094227282 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133825686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109480279 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133664146 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103918379 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134218921 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138485777 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104082211 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122683336 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095002563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124504301 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104442759 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125280717 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105484413 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127118299 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097280831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123513819 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094882952 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.1337905 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133044239 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100789807 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.1334097 seconds)
  done (took 6.05291168 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109424617 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140657827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104699856 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081650164 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118047404 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080914625 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13793116 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080242686 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111037731 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107813581 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074727323 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106795028 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079031252 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102057001 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076919798 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076269907 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109191552 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075658318 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077208925 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10632261 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079951642 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073282107 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109120893 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079194734 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075104738 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110531609 seconds)
  done (took 3.60373192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104086017 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136522698 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111769528 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184195748 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160968747 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099600302 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132573909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110762009 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138807521 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12110804 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095779059 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149756412 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110998624 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129690138 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091574789 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137665931 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.143992681 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093578387 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127889991 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113101534 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139467651 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102229898 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143350825 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133282534 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092229705 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123834954 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097030576 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135604097 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098120314 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131114383 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126570446 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097151051 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123889329 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105155635 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126590689 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094501335 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142299355 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132740709 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101619469 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122268863 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095864226 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122064787 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113637364 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167033071 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0921795 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131158088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129081954 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102933806 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121840496 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110549954 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131873675 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092263401 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126086209 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091663888 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121979583 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10675677 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123672137 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124275773 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102327251 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124662616 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105865995 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126182209 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108311438 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122160255 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101054437 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12160113 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093629792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121039815 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14475415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100581803 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163783018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094815057 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124364735 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131431308 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101016512 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12893358 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093580004 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13764662 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102431265 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126083305 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103326333 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125936093 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095679219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140769016 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12415955 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095002324 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123197157 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098649431 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124578284 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094417434 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136876039 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092616797 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125589516 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110780109 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122050738 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123090308 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09914468 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126472822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092903347 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135580594 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099096626 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123178643 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132972588 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09373111 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125541465 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103588801 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127148772 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092054066 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127227068 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099819721 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123428568 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093925343 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124954993 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094258177 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132717203 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129362961 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098026378 seconds)
  done (took 14.887402344 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23062154 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215659301 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207909029 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264885659 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135324206 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115605208 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212431186 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155903893 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124236572 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160917831 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162778389 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182823949 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138541608 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180224256 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.14057704 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121760531 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11266238 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164204925 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215404884 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29097001 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113778319 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132911963 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162959356 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160584198 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107267475 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133862974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140231611 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106289846 seconds)
  done (took 5.760909654 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110867167 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156929826 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098944979 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14471055 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14801332 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092426466 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128047934 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094251952 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135948762 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135830733 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092971018 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128661007 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100011302 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132578235 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123403547 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102842147 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131814481 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094681413 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125700116 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097644493 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129763502 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101986655 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126556005 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092514379 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132290584 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121798789 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087320285 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14251463 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093402272 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145034464 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121045952 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100098348 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132919702 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093504704 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123606391 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095517291 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125257365 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095427849 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125553774 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091918067 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122535379 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078084988 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122122333 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107998801 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129183866 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080389854 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129897865 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129064525 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094856251 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121436881 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096075868 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125557763 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097555992 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131109866 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098558059 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123900723 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096765218 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116698861 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099602676 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125551786 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085371916 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092304757 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128391064 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118463297 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10171105 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128359024 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092088919 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126168889 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097839686 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129473969 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095361282 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126654203 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091042617 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126007782 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095667572 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128474278 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097105231 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122287478 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093732348 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122849092 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075828368 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123844109 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074498961 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126786686 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092675278 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122421463 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095456002 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130326017 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138726479 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095279876 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13233534 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094750792 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122744316 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09711656 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113682195 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097035088 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139118637 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141596769 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094419354 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122587173 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107344868 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126188958 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093101139 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106902037 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101158269 seconds)
  done (took 12.996294204 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130686976 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154862489 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096271703 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143351748 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156629661 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158478794 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100629178 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131249597 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096205968 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142503892 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094307735 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132410233 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097672751 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13782425 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157966507 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.109722451 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125919771 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107701777 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132978208 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170992822 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113448448 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14276048 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108065534 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124410951 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.100196859 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141414901 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161659007 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108258771 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137614919 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142890922 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.115135332 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161479546 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112891317 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129366695 seconds)
  done (took 5.535334711 seconds)
done (took 49.946562389 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214216263 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.43811923 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.217271487 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118619041 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.255464471 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.261614147 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222621958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.214074952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.804656983 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.213803145 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.489725648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.91057142 seconds)
done (took 60.499824437 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.298633302 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351035787 seconds)
    (2/2) benchmarking "String"...
    done (took 1.486921062 seconds)
  done (took 3.983369571 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.57284994 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.146248392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.473264116 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.218431195 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.213707158 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.503792345 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.887915771 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.58328652 seconds)
  done (took 28.169151186 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.230475094 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.608586809 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.044860281 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.038949842 seconds)
  done (took 19.065259832 seconds)
done (took 61.227952033 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.230564225 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.276828131 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.253328021 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197558188 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.331427866 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.242932488 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.560290596 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.264992765 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.241776985 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.20387267 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.237810333 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.23357745 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.222283178 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.601299655 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.216966137 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.21639075 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.273564694 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.751389137 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.640022831 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.22588247 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.239183936 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.242699057 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.218039975 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.214043644 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.246807281 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.216680563 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.215843703 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.244314345 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.846556655 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.222450919 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.233798665 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.852007922 seconds)
  done (took 191.558286817 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.219727562 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.270345955 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.362794768 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.267005073 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.881194874 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.413729736 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.353779732 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.954042416 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.235004492 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.221650892 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.556427503 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216801383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.574587356 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19069763 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.227433028 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.332986906 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.520063679 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.572551979 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237766614 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.456891075 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.240802586 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.466848221 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.3707855 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.478622872 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.25262459 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.267062329 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.226434116 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.257761657 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.407393561 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.453055757 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.228646638 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.236518672 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850759443 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.080066273 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.22291423 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.243700733 seconds)
  done (took 151.494630365 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.515466937 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.2207964 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221829544 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.221064112 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221836078 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.255796774 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.224848213 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795850409 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790785037 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.722337775 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.538949427 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.57593391 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49263674 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.219836976 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319194565 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234558365 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.220410942 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237440846 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.263232837 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225151863 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225727313 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793261329 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.232087036 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.257230765 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397500611 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.236159952 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256348134 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.617497953 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22054973 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25752599 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.560090114 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.270693767 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220925241 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.597391878 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.260406894 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336627611 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222716098 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257377546 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.223665322 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506134034 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.222428293 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.222515589 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226711671 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875176673 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.223289015 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801776916 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222101323 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.197014465 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.222661043 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.226510401 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228377989 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.228064104 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.408897512 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.888676881 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.235897849 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.225208575 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.232508 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.22807158 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229413581 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.260705039 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.382332754 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.335891821 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.242401083 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.231142372 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259239576 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.230664125 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.419000561 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242707066 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.100534318 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292750786 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333481902 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797862647 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.223287275 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327954371 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345048112 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223501745 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224123159 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.228822229 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.228174516 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.341424947 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.222989862 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659643053 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.400627291 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.240996975 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.593506049 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.322743755 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.224248414 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618209791 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.225385202 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.230221686 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.013643021 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324010685 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.221885239 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.228868884 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226847236 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.662209755 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797963736 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.22453904 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.508960173 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.225548028 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.352458885 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.241644437 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.682252631 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.793588785 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.88854197 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.226095739 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346133283 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.404813202 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.242349861 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.226968289 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.59571788 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.228211986 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.286951798 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.225033633 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.630596975 seconds)
  done (took 368.266414245 seconds)
done (took 713.977049052 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.905917626 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.896181913 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007697375 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.888868357 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847891041 seconds)
  done (took 10.697666873 seconds)
done (took 11.849505128 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.426498437 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.425570392 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294713368 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.429363524 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260224825 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447009826 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404058307 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.251750692 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334011871 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.315578002 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335133841 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283608956 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.260375869 seconds)
  done (took 18.619505059 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.56645716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.554324682 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291613305 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593886198 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27043486 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593711638 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430041333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.444542652 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445011415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25729763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244062429 seconds)
  done (took 16.847272787 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.56715263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559925906 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299173667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.57117191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270644196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560973457 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435691548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.46656918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452567559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263290054 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24608503 seconds)
  done (took 16.847900445 seconds)
done (took 53.466121498 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.239354791 seconds)
  done (took 2.393822709 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.274687169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.443595664 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.254922534 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.246633459 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.244529439 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.241772426 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.245602289 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.239968708 seconds)
  done (took 11.347179634 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.238991447 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.240366595 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.241257473 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.23875318 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.243135926 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.23966107 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.244712139 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.242355464 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.242453759 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.240101405 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.238985452 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.242769904 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.242110012 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237982556 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.23678139 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.241791683 seconds)
  done (took 21.008124763 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.240775219 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.239249749 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.239156029 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.239301984 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.239813237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.240234646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.238543951 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.24085496 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.242336453 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.237387393 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240080048 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.238596685 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.242385959 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.240596009 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.24154962 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.241115902 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.236180974 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.239974309 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.245427986 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.241894671 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.240837043 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.238241799 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.242639562 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.24148368 seconds)
  done (took 30.926783935 seconds)
done (took 66.8278108 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.415803073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.035774326 seconds)
  done (took 9.609014993 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.24327714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.243381032 seconds)
  done (took 3.646047845 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.240054896 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.24275423 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.243009373 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.243741159 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.242947963 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.242584083 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.243512426 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240376236 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.244501021 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.242806402 seconds)
  done (took 13.583269191 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242509086 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.241922864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.240213463 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.24404023 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243569446 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242236416 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241961636 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.243988496 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.241426398 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.239854119 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.245424773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.244227257 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.244512478 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.240171049 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.246402847 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.244215123 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.241643022 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241833338 seconds)
  done (took 23.5274047 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.242156201 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.243218381 seconds)
  done (took 3.644501021 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.239208434 seconds)
    (2/7) benchmarking "second"...
    done (took 1.239673908 seconds)
    (3/7) benchmarking "month"...
    done (took 1.242935719 seconds)
    (4/7) benchmarking "year"...
    done (took 1.243612209 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.242460227 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.242625662 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.24332444 seconds)
  done (took 9.853667308 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.247688192 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.426345087 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.514929336 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.882005464 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.247853688 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.247834254 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088939636 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.249462857 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.251859938 seconds)
  done (took 14.317240348 seconds)
done (took 79.337270865 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.26940701 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.253485605 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.454244772 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.242470011 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.257441883 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.581835214 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.286118728 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.364249813 seconds)
done (took 37.866585888 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.25490372 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.00224961 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.014939838 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.241068751 seconds)
  done (took 11.417618532 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.230097058 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.205314312 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.227014425 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.290686459 seconds)
  done (took 18.11682421 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.302373174 seconds)
    (2/2) benchmarking "read"...
    done (took 1.575534752 seconds)
  done (took 5.041898849 seconds)
done (took 41.991016551 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246751351 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.247942092 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.247968902 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.247209886 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.247767919 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.245407603 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.24362872 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.246530338 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.247594308 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.247291668 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.244830331 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.247626077 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247509562 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245214751 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245274372 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.244885899 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245255428 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.243093303 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24413239 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.245152646 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244101632 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248930577 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.244152221 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245857339 seconds)
  done (took 31.067677187 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.248178178 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.247768912 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.250045861 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.249209418 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.245519648 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.249244393 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.248406835 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.245737996 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.249389307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.25299008 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247640851 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.247752883 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.250136629 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247263622 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250006824 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.24701349 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24993778 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245338279 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248576717 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.246974251 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.247843758 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246166942 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2464473 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24771117 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.247513964 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246290905 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.250855976 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.24710898 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25091755 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.246350649 seconds)
  done (took 38.60932716 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.252222045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.257287404 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.250450855 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.250797148 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.24872738 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.248407348 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.250017695 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.25154417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.247993841 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250583 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.250589698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.251021271 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.252249661 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252288243 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.251469797 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.25102079 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.250683305 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.253795416 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.250954942 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.247638738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.252438954 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.251945426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.249978447 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.249566325 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.25003624 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.250734265 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.250280817 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.250540212 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251670951 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.251899705 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.254064797 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.25052049 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.25102835 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.254497444 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.252492678 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.252508614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256850816 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.259705209 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.252614916 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.253535558 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.253627302 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.254644436 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.252500012 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.253557379 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.253014896 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.249981515 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.251701386 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.252855295 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.251151168 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.250452156 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.25422905 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.252708695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.254442312 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.25408717 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.253601576 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.255849375 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.253570588 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253660348 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.253087477 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.252789835 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.255704771 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.253300051 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.25224625 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.254606442 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.256338937 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254347841 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.254126191 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.252382911 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.25643621 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.254588867 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.254887046 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.256237333 seconds)
  done (took 91.353105873 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.253550503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254606262 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.25401038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.251841106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251321231 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254163554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251754473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25596451 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255889993 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257212373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257475944 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256464373 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256801671 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.257197791 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255937165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252441392 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256590489 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253507453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.255907144 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255689821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254353333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254807867 seconds)
  done (took 28.779437498 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256698212 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257332619 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.253279944 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255410965 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252871352 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256403504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.257930287 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258035609 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25735064 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256039072 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253006 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25644953 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254985644 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253133066 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253943276 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257502027 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263521541 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257711155 seconds)
  done (took 23.78108996 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.255239252 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.254442557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.257460493 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254268863 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.254605397 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258172934 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256990752 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256652374 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.258919643 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.255221009 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.259368075 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259348044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.259307604 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256848771 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258614126 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25531352 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.258778512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256932476 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259750402 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257059175 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256189729 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256883995 seconds)
  done (took 28.82790018 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258070535 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.259524643 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.254675116 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257291039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.25617557 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.257260208 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.260193797 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.25746907 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.2587335 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.25811853 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25879887 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.259194966 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.257972216 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258396488 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.257578015 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256615167 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259450805 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.25811166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2596394 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.2579312 seconds)
  done (took 26.333621123 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260745007 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262202359 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260952874 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261754932 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263334511 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260001709 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2587788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260775855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260256266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262400771 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260743798 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260047084 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262044876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263407702 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261928703 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262428664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26208701 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264452397 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265054041 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264327169 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26425602 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262834763 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263177557 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262746654 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261907411 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262265577 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261043508 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26209072 seconds)
  done (took 36.512427693 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262147382 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261166946 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.260248378 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259348495 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.26056222 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.259038104 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.261191597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.261654698 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261003285 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260763206 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.261946123 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.262269403 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262423319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.262363088 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262203604 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.261035056 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262230495 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259123318 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260116694 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2589244 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.264933459 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263164078 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.262627478 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260357119 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261605146 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.264583816 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263286219 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260182043 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262696686 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263530069 seconds)
  done (took 39.02180651 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283937578 seconds)
    (2/2) benchmarking "in"...
    done (took 1.283062271 seconds)
  done (took 3.74460283 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.260515961 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264270738 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.26492068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.263396064 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26399475 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.264417706 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.264477504 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261689327 seconds)
  done (took 11.284540504 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.264122111 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.265913314 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.265445208 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.264957141 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.262721612 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.266799557 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271055389 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.283162806 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.26525448 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269619712 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.274593691 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.273527374 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.26893967 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266547657 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.266255254 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268172443 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.267848135 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.267455028 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266525958 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.266546577 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267930329 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26908142 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269275157 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.264541034 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.268484291 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.27586691 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.289745688 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.267712042 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266502178 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.26992595 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.268798291 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264312713 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.267045541 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.267767834 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.264724989 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.266881994 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277048508 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287663324 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.272809045 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285218014 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268472221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.263249878 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.267130642 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.267167595 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270447964 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.26899474 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.268450384 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.266134969 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.269560527 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.272903068 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.274009084 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27153954 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.26623613 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273930435 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.270435062 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276336416 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.287242681 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.272081052 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.279473585 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.280514618 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.301240643 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.293570567 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273343765 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.271477606 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282382522 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.294352244 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277242551 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.288073928 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2668287 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.270573027 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274749052 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301563907 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.297189408 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.271068838 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271260012 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.271209056 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272719917 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268135575 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276277591 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.294251051 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.271248035 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271305569 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281828699 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292826159 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.270880899 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.271237227 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.267232419 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.271695288 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.270717475 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282483922 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.289515242 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.272485748 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.272644939 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.272843427 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.273639694 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.272632542 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.268842412 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273526055 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.270268919 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.272297761 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272729613 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274667171 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.28321454 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272223321 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272769209 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.277892178 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.290879883 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271371428 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.280111246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.272151415 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270785055 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.275583324 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.276730782 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.27111462 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278395168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.28240844 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.272213627 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.274181644 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.275433492 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.273873161 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28615661 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.300215142 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.275249468 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.27412991 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.280487945 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286598666 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274782414 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.276915613 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.270660289 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.27059959 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.269494679 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.275863091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.276111826 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.274610095 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275202247 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274090899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.272408719 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.27565859 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.273248504 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.277872632 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.277196622 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.274048112 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.276251373 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.276191758 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273628018 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275078493 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.281206527 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.291737626 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.277096779 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.278534327 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.272684827 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274250533 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.274800633 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.275152332 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275672184 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275823535 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.276716598 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.275718604 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276056465 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.277464099 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276482257 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.277363696 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28068079 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.274761032 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.280735271 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.275837494 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.27370616 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.27460632 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.27523997 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.27751175 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.275844074 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275689301 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.279981788 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.284080537 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.277830753 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.274486352 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.28098107 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275833044 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27573689 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274203509 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.280125996 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.286449702 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.277354223 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282868278 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.297442446 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279183112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.27693356 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.278949957 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.27887748 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276283835 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.281809244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.285118966 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290573757 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301191852 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.281363566 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.280771758 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.277353723 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.282703818 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.279780694 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.281619937 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.276773572 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279248722 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278962513 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278191703 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.278928779 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278404604 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.277929192 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.279164564 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.280413223 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.27774904 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278227174 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.282699834 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280528616 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.278926958 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278714672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280082026 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.279140311 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.280332625 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.27873597 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.281151566 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.283441721 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.280194893 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.288377256 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.280259978 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282976913 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284212264 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.281308 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.279931823 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.282672019 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282283923 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.281958943 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28844322 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.303106854 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.282207714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286388424 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.300881082 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.280723909 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.285089999 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.283319093 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.278200772 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.284770157 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.28906259 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.282432345 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.283338381 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.282212387 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283401088 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283180353 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.290367561 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.299533077 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.282891641 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.28271197 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.284557147 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.281953602 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.282559985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.281800872 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.284661926 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28480297 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284768209 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.282712278 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284533905 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.282845489 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.283495837 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281248738 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287867343 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.292269302 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.286745883 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28447388 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.284743235 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.287159376 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.286413775 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.283012987 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.285178348 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.28376646 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294320273 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.306926534 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291325445 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.303195956 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.285534797 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288374125 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.303459978 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28717214 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284912967 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28389314 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.284705061 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.284112237 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.280047071 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284643499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.284029259 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285949287 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.286195562 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.290189401 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.28210776 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.282413214 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.284996808 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.284330101 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.284416159 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.284469778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.285211742 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.289054917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287386293 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.285014537 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.286480949 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291903048 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304731633 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.285024205 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.284245467 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.284911356 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.283858209 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.288226482 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.286231489 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.288641727 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.294844781 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.291525081 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.294619578 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.289885366 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297034572 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.287375295 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.291379446 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.294772351 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.284083986 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283994029 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.287506842 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.289000827 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293222085 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.308116373 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.288544908 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.29217448 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287812855 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.288315094 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.288392524 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.286876121 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288313636 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.28660443 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29792911 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.310968542 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.292879076 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290213644 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.287376202 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.287176387 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.288343674 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.287468174 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290746895 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.289189113 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.289915904 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.289339388 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.290832027 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.289719001 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.285256764 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.285872563 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.284498613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.286428724 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296502807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.312028845 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292976014 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.286999772 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.293226922 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307065728 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295313892 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.309495983 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.290070117 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.289047966 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.28629794 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.289810619 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.287346288 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.28897498 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.290554655 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.291044333 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.291633046 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.290981458 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.292697847 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.293433486 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290774114 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.289671089 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30358465 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.314623912 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.287639928 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.295792488 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.287313452 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.291311995 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.29491792 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.29125285 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.290231709 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.295686533 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303817583 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299398055 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.293728782 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.29158488 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292314896 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292900565 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.293124182 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.289657189 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.290522698 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.291781449 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.292696586 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.29309952 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293818859 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.293955933 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.293505769 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292731857 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.294788804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.302750994 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.31125207 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.293124767 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292898214 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.294059458 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.295549366 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.294704282 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.292980312 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294648058 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.293429987 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.295263724 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303138821 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.298395157 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.297178772 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.295404068 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.294868238 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.293420477 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.295517447 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293413043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.293053915 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293252151 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.293428663 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.294703438 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.294483037 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.293342915 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.293592037 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.294610843 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294937587 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297426649 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.303622903 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295152376 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.291589818 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.293015703 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29634566 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.294140681 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.293534751 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.302135459 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317923213 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.304736725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.306666678 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.297959349 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.295422397 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297320477 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.303441694 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.295587656 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.296784927 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.296215677 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.295726289 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.298255018 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.29935279 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294935075 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.301579368 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.313859241 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.297103763 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304119045 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.314095324 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.295658316 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.29898109 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.299856962 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.295904276 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.292709036 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.29704133 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.295064218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303850629 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.316965422 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297578559 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296961728 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.295668087 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298894887 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300497913 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.298356473 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.29923373 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.296658995 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.298896 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2971487 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296110286 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.296165442 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.299954263 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.297460613 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.299387592 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.306508803 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.296872202 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300089245 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.299056896 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.300122277 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297429078 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300051456 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.295719361 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.294840518 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.298582045 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299414671 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.296999588 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.30269299 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.298750152 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.301612429 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.299830545 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29871522 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303659695 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.310533618 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.30984619 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.296598544 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.297780077 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.3007635 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.300599868 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301294876 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.297653387 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300598184 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.299008617 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.299543795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.29694934 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.300405281 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.301685188 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316684938 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.321982652 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302118794 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.302254017 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303625145 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.300291802 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.297654785 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.299169525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.303070395 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.305441048 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.307282642 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.300254918 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306947306 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317018416 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.301906053 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.303276059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.304405638 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.309459779 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.304037591 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298956052 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.300144408 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.308942864 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.316304594 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301610195 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313546015 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.333988112 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.321220173 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.301111269 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.303189516 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299903272 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.301544007 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.301740866 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.301637983 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.302505208 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301998858 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.303217449 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.303640192 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.306940137 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.303699479 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.305157628 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.304395546 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.303196165 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.303596889 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.300086325 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.299393463 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.300341363 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.300178383 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.302728088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.301736689 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.300846911 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316128227 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.328643726 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.304638328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.303520175 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.301486641 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.306941895 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.308565557 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.318184757 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.310989299 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.305689422 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.305714033 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.301963799 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304228639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.303239942 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.304017499 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.3038589 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303027335 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.301727541 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.31495933 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327098065 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.304717701 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.30454035 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302409723 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.305667655 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306620877 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304908463 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302711507 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.306097924 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.304813782 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309995844 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.304848572 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.302028543 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.306164168 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.312224811 seconds)
  done (took 769.128934123 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301703794 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302700702 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304054061 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304116277 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301194173 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303080022 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302355749 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301737673 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302268312 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302641908 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304567394 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302684267 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301659354 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303472424 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299969212 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302011144 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301750838 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301754322 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301561763 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303364592 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.3043994 seconds)
  done (took 28.569116398 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.305673618 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.302281769 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304305438 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308118083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30388338 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.307067823 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.305285954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305695698 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306527478 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30420599 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.307350603 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30783432 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.306572415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.305697648 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303354411 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307394293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308414006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306563408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.307772053 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303597222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30672729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.306594071 seconds)
  done (took 29.945698416 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.30713373 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.307543627 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.306692144 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.308343571 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.3100888 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.305545836 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.309609814 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.308224819 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.310213777 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.308092279 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.309545395 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.311726739 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.315906835 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.313886511 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.308709014 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.308832966 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.449131838 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.309406455 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.308311791 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.308087934 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.3049404 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.314639929 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.327519657 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.305633413 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.308271921 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.309322056 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.308440978 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.309376587 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.309534397 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.311895659 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.313860875 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.307943383 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.308446841 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311126121 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.308502481 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.31260079 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.312295524 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.308870417 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.306955246 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.309505168 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.320881569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.328696319 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.309468471 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.316566025 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.33161399 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.310110128 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.316031711 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.318299196 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.307397169 seconds)
  done (took 65.608756723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.309635003 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.31139976 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.308952258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310809274 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.311478824 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.309157491 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.310571916 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310253407 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.310125304 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.306669078 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.310813602 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.30992456 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.308168783 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.309552025 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.312331906 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308057213 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.310514506 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.307339882 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.311980968 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306890543 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.307571365 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.312954404 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.313567402 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.310773606 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.313127449 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.311761196 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310404945 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.312056579 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.309127821 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.307898562 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.313553365 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.312615073 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.312172701 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.310175788 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.312744255 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.314217174 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.313552604 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.309111904 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.311377432 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.311425617 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.3114218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313579106 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.312074141 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.312832897 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.310102853 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.312232057 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308556334 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.311351337 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.31019922 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.313276389 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.313765016 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.31253458 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313539361 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.311897196 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.316972508 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.314420722 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.312044618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.310371526 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.31582964 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.312094336 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.312647964 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.31544307 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.310412357 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.314041125 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.316267865 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.313495399 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.314360835 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.315685236 seconds)
  done (took 90.405515543 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315524871 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.310384486 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311675036 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312189131 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317091765 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.317062944 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.318602951 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.314695769 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.315982894 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318046921 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316355674 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.315505567 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.315989378 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.316736006 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315669148 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314170926 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.315619933 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31638975 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.316408755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316335129 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.317450162 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.313879449 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315797578 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317015602 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316974587 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.31673656 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315611304 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317688658 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315788682 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.316071141 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315918037 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.315800622 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319385963 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.318308331 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.317122697 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.318142902 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317503033 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317810851 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.313086978 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31616218 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.316491046 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31879783 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.318641588 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.316048542 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.319114958 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317477929 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317110867 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.319167656 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.318120419 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317270146 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.32116421 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316962953 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317652713 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31571934 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319431684 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.318287793 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319629617 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31799333 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316981432 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318345195 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317586625 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.319386337 seconds)
  done (took 82.864859822 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315062674 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.319976708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.317407757 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.317443128 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.318325553 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316678469 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319368668 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.320660121 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.319016492 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.320306744 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319858102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317894468 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317022079 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320021724 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31964329 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317537474 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318490954 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.317255613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321481072 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318802369 seconds)
  done (took 27.599501866 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.318130099 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.320680222 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.318321098 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.318137561 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.322095007 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316293373 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.320868494 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321823045 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317204762 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319592233 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322057644 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319152433 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319758722 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319074891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.32184612 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.318974201 seconds)
  done (took 22.342776643 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.318751957 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.320065663 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.321433608 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.320538889 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.318512329 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.318679431 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.323807447 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.322042735 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.32020934 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.320218638 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.32233381 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.321371743 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.324049159 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.322443967 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.319488568 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.321188911 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.320537365 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.320183407 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.324166886 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.32751845 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.320540343 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.31997047 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.322641581 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.323254043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.321735781 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.323512292 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.321341388 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.320915315 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.320493232 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.322896718 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.321673352 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.324170699 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.321556678 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.322918112 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.324009155 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.319267967 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.322963347 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.322080478 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.323780562 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.321190601 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.324906654 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.320907144 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.325820073 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.325062311 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.323163179 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.322694588 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.321607885 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.323113209 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.322834879 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.322314815 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.323451399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.324970173 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.324892375 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.327909311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.326699598 seconds)
  done (took 73.958553535 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322366509 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325970862 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.323141704 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.325595246 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.326223999 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.323101568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.327427453 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323547695 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321835296 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.322269852 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322745359 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326063269 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32320131 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.326492284 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322925242 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326388493 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.321345512 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.323391603 seconds)
  done (took 25.067242377 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.32152714 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326388697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.326623778 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324143656 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.324839368 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326942355 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324816947 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.32703375 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326829694 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.324047308 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325175496 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.327847676 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326406435 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.326261568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324693599 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322812359 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.328714101 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328052649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.323066662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326259743 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328129411 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326746174 seconds)
  done (took 30.401217322 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.325646827 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.324024892 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.325340208 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.343693652 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.347881623 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.350298838 seconds)
  done (took 9.248725188 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335125913 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325870622 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3234936 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327666551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326837302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325782783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324608708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325438965 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327476834 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326066399 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324473507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328261424 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327238198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323027019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328693994 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327600565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325570176 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325375048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325052233 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327783717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324260127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329651232 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325943911 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325456683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324964247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326684271 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328165059 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328562433 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326167625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330875686 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331219589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323356397 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330530564 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326118765 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331094958 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328143765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326067203 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33049793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331528894 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328021097 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330053148 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329703902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329932939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325984149 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328518598 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32780444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328247495 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329230219 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328725205 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330466977 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330490232 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327472087 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333776047 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330371926 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332134446 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333969244 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330229333 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329164218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331562959 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330644665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328480452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331047713 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330846628 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330397567 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331888269 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328245861 seconds)
  done (took 88.930174176 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327481287 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332215468 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329580984 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332497517 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330637662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329227446 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33011321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328751873 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329695375 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330029878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332094588 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330759074 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333134558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329916407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329718978 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32951411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330861523 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332170224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329834461 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331610765 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33357983 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329839283 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328603186 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329383658 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330009877 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332230131 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330149896 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330158827 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333041094 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329824078 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331205594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330199937 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332060144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334028575 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331793875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333924401 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334225131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333276471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331949815 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334364577 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332391012 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333842354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330109047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331284169 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332319946 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333200348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332699308 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331620968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332060864 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329975551 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334273186 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332085866 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333869696 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331644763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332256956 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332859492 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332084162 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332362364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334054217 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337456379 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334489185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334259939 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335457023 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335350662 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334223661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334894754 seconds)
  done (took 89.146518886 seconds)
done (took 1793.693386825 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.423667741 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.436616905 seconds)
  done (took 14.099916306 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.499209894 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.452410901 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.33383861 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.381178515 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.330443316 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.341631149 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.329278116 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.32743883 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.335470196 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.334909429 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.335697766 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.526998939 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.351605763 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.330555457 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.336875019 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.431126923 seconds)
  done (took 43.231544918 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.367355884 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.338667362 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.466621274 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.354636856 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.361866954 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.535950464 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.39488951 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.337279082 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.526765454 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.376769008 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.028731169 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.358389717 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.338886521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.540040698 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.353712211 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.538098029 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600623241 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.027465793 seconds)
  done (took 31.089345189 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.831979181 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.338095551 seconds)
  done (took 9.412575505 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.336133808 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.358693879 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.377382316 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.327438072 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.389804462 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.350442973 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.399262039 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.379111829 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.35292031 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.3220279 seconds)
  done (took 64.845278921 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.359496448 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.338493693 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.339208261 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.337702877 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.329380135 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.325955555 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.337020494 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.333845894 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.372097258 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.473095603 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.342464248 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.347872559 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.35909023 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.340383799 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.334268217 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.37752576 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.498760198 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335058739 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.335485905 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.34622265 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.337421835 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436698535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.379624923 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.336478591 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.477937795 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.379298478 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335485862 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.345752525 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477358902 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.335556488 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.339955338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.339765236 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.340632566 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.964803016 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.875320377 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.343318732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364363078 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.350356753 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.341346184 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.51664891 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.340268078 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.347842372 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.33482732 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.875610684 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.474006341 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.46569414 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.674003415 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.351798855 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.34336867 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406630245 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.342639454 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.341227638 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.372923376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.123535467 seconds)
  done (took 112.822421888 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.371010018 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.726259752 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50302056 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.354299015 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991679386 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.046720554 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.346349123 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.651722228 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.402470371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327571643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.672526983 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866371777 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.34747584 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.395028906 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.972661912 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37265354 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334346302 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.069296438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.34714998 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.335135265 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849757267 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333421784 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.349782993 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.504313241 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.37122161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822058871 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.858245209 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.788760215 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.353210107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.330932093 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826415691 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.354281013 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.363399246 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.333324504 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.615094485 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.717835557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.712748676 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.353308355 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355471367 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.333489356 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.348478716 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.813961761 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.721155909 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.348756582 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.349396483 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833677901 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.352011482 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.346783271 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.34522998 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540314039 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.989459014 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.337336567 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.840370337 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.330478649 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.649808561 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.344973783 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369094915 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.849118972 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.350135712 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.43425869 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365818758 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.336001872 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3369059 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.345345373 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.336666204 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.709215108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.451875285 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.340644513 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.71368905 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839900594 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.349802228 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888482681 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.183460956 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.358964233 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.437319524 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.346357876 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.840481479 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853018869 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.355931018 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.333795817 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701533871 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.351653981 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.670351266 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.350054359 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.351623404 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854803105 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.338292477 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.391963994 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.336020338 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.366081588 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.981449611 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.34307124 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.636170793 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.407079651 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.340529729 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.339271846 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.369922246 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335419436 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.356573874 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.342700719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895134233 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.366533363 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.326092728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.353736986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343149279 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.349900855 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.340751646 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.340676531 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563224923 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.72080546 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.356715408 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340409804 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.348706073 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.340992221 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.522241904 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.344277929 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.689133792 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.354884878 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33651546 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.339863625 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04246935 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.392574392 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334138209 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.338354417 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.269455086 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.543788018 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.358226605 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.338889758 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342858617 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.362391767 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.66883442 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358476766 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.425915261 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.342238152 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073458622 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.383012187 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.363630338 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.653268813 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.345943459 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.342937001 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33919183 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.344211969 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634497019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.62733454 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.376016256 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.339472309 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.335817504 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.048175927 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.384728087 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484915425 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366586223 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.383911677 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547347936 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753320467 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.339931595 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.939239062 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.33970657 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553482172 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34487969 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647865044 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867120196 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.359491713 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345396177 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.084509942 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.058637763 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.98469445 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.350313016 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.682465134 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.353265705 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.825120923 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.344383373 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.346510317 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.784087608 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.346278211 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.347065955 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.340510593 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.344521092 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.478008504 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519875149 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.693542964 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345688212 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825551811 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396252346 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339267534 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346281206 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.342275809 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.692852455 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.395760955 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.343131891 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.35633327 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.341455944 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.351082693 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844536109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.265239776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.348095066 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.502201195 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008463638 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.357157628 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.348449667 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.883422614 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.515819998 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884610826 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.416635688 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.686648737 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.367761221 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.387370238 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.951895517 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.373057089 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851834851 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.361184477 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.345526609 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967464599 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.361843412 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708114098 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.343902652 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.350815209 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920222243 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.359971826 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.356129712 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.687856546 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.365550625 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610809158 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.348259099 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.361174732 seconds)
  done (took 1113.554584586 seconds)
done (took 1390.294508028 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.349306216 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.351761236 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.331371607 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.349047212 seconds)
  done (took 26.640530054 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.357412253 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.355357232 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.35849142 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.35629392 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.357110594 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.354459974 seconds)
  done (took 9.397799257 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.571522729 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.351968705 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.348928446 seconds)
  done (took 19.529280198 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.579222991 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.744513455 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.740479115 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.803522646 seconds)
  done (took 11.130499445 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.357959748 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.355305948 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.356934155 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.354843329 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.35838429 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.360219242 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.355546812 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.35724377 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.361548898 seconds)
  done (took 13.477801601 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.621890563 seconds)
done (took 87.05416944 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.329534724 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.355310211 seconds)
    (3/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.638399551 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.219241636 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.345595265 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.707664561 seconds)
    (7/309) benchmarking ("sort", Int8, false)...
    done (took 4.409188365 seconds)
    (8/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.955821451 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.357984241 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.65352968 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.640486518 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.381464023 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.387774285 seconds)
    (14/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.540510567 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.635371227 seconds)
    (16/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.433923712 seconds)
    (17/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.331978907 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.88771619 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.375353962 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.344244394 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.079442722 seconds)
    (22/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.459809947 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.313076251 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.802390654 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.326194927 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.481363491 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.351715014 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.327818569 seconds)
    (29/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.96840689 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.355425554 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.360932226 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.356516078 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.198272492 seconds)
    (34/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.458419733 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.155371266 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.442505433 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.166371687 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.376389676 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.376016399 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.807430883 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.66407267 seconds)
    (42/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.768703143 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.32802313 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.483888418 seconds)
    (45/309) benchmarking ("sort", Float32, false)...
    done (took 5.419679315 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.989895306 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.369277475 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.364604707 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.932384552 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.329252817 seconds)
    (51/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.021343901 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.333160242 seconds)
    (53/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.490524609 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.254712683 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.37149113 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.989979078 seconds)
    (57/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.185722161 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.455721477 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.335764851 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.535070231 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.355223043 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.612916192 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.813475402 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.397917975 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.261268679 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.892385022 seconds)
    (67/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.929653979 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.435075782 seconds)
    (69/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.543373152 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.798584549 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.575167784 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.406491653 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.482112925 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.335156672 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.990052354 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.438280935 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.366741915 seconds)
    (78/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.327818509 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.378482339 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.366041642 seconds)
    (81/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.432260599 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.724545041 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.380260847 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.780350779 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.044484024 seconds)
    (86/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.124170188 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.620389114 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.092008795 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.56181611 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.332762958 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.36327864 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.364422513 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.152144044 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.829983357 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.435539402 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.432320841 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.404459736 seconds)
    (98/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.522100439 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.337997658 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 5.612768097 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.182703463 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.161261935 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.465499025 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.348854728 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.437688112 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.41921214 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.582430791 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.25038412 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.397369974 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.338424108 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.363731642 seconds)
    (112/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.83435974 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.775215879 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.386249876 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.875463335 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.041963575 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.1347714 seconds)
    (118/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.442693411 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.766441202 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.95653415 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.315842608 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.379515053 seconds)
    (123/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.79640994 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.462679775 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.442073448 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.561550307 seconds)
    (127/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.342799627 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.572202409 seconds)
    (129/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.764895216 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.355963908 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.848073642 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.165485133 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.396448929 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.38582409 seconds)
    (135/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.448592786 seconds)
    (136/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.027896574 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.359869818 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.347209331 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.161515496 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.34547457 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.479446378 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.226469851 seconds)
    (143/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.35209338 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.967478832 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.357687596 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.07855877 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354600436 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 1.878401908 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.39866318 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.305872017 seconds)
    (151/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.350175003 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.618243604 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.340622614 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.395122051 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.072237018 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.33454198 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.209463146 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.383869212 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.625936526 seconds)
    (160/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.34210285 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.357141773 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.459973749 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.364315525 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.416367715 seconds)
    (165/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.766076586 seconds)
    (166/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.351137897 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.635238244 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.342081246 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.742150892 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.458498281 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.362666478 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.216760231 seconds)
    (173/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.38143375 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.980770534 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.422290156 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.463530942 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.964905877 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.35614945 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.357981335 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.340461642 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.360824918 seconds)
    (182/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.366176458 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.448132135 seconds)
    (184/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.383644413 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.204615434 seconds)
    (186/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.336289317 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.49880389 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.46649398 seconds)
    (189/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.740823045 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.945213766 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.007410935 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.926828308 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.366037947 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.425628102 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.362652342 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.385637393 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.363670516 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.693825464 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.861657399 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.621450533 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.399555387 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.338506481 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.404765036 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.343114244 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 6.378248257 seconds)
    (206/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.442762162 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.40597754 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.630348564 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.355974234 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.389031692 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.363822405 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.189628296 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.385414968 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.36025375 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.385018313 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.423369605 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.386998123 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.371425593 seconds)
    (219/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.099427245 seconds)
    (220/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.355765016 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.010643278 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.564186092 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.43393667 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.794746301 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.632752202 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.827378149 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.728147593 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.449354969 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.393764146 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.386475371 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.343389564 seconds)
    (232/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.522109997 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.359734064 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.423538462 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.414473417 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.465523259 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.409827249 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.560655836 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.788259741 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.361612815 seconds)
    (241/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.060980347 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.305610202 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.13587324 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.347709592 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.361367884 seconds)
    (246/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.101077609 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.504263069 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.919856301 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.367103149 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.365206812 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.114869475 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.3742436 seconds)
    (253/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.345610319 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.737868364 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.387043931 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.876490318 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.237455353 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.323590248 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.589470773 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.507916786 seconds)
    (261/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.770631902 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.360087533 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.861525453 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.364432003 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.366298228 seconds)
    (266/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.523791501 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.340484573 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.40451367 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.745840276 seconds)
    (270/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.449130901 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.368140346 seconds)
    (272/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.058486649 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.34799825 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.425648433 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.355058669 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.199557533 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.9914267 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.343411377 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.307983498 seconds)
    (280/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.389402444 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.127766951 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.397780011 seconds)
    (283/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.5968712 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.461416022 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.450628859 seconds)
    (286/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.373134539 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.342951992 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.487150384 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.368502315 seconds)
    (290/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.345122038 seconds)
    (291/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.385995702 seconds)
    (292/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.389742876 seconds)
    (293/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.475352223 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.209960343 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.262613148 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.922701329 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.344479038 seconds)
    (298/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.395122235 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.410926221 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.353620201 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.378165206 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.391666764 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.349115253 seconds)
    (304/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.19618482 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.373127034 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.391365982 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.466918918 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.37195291 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.48897079 seconds)
  done (took 1056.20232053 seconds)
done (took 1057.4615241 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.403693575 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402001806 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.382507661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.40302635 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.492941703 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.406608054 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.394639921 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.384218934 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.430349657 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.433886627 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.382177089 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.406246679 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.382501416 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.383210739 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.382468132 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398213113 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.516004795 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.377499576 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.401070836 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396323831 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.400760435 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.380721984 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.433606776 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.404521343 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.3889046 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.387836113 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.387497275 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.40237436 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.493719377 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.387097671 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.389147768 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.397060043 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.516375285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.377927625 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.379775278 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.404903031 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.396031053 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.392074562 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.387761393 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.416336779 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.965306934 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.395294688 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.387563798 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.386865754 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.388009665 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.391112297 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.384325672 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.392874161 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398280766 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402124187 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.953907635 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.411807505 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.385675631 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.386592416 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.39876864 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.387385383 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.390932635 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401936308 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.406229808 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406455735 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.503184232 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.385886481 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.388604638 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.403037561 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.394868938 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.991545794 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.394663001 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.394453865 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.964247416 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.406941844 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.98797792 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.404746966 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.388502384 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.399954317 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.418056165 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.514240028 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.377573567 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.388462975 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.394089051 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.385652526 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.397732508 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399695753 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.389882942 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.39010394 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401432953 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.40882914 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.400297281 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.388909961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.396448984 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.407942643 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.394772813 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.395365888 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.395323571 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.387877497 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.398973978 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.394119867 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.39236158 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.390030648 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.396158795 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.401958422 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.962671905 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.421582444 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.38563055 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.387614007 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.389970057 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.406340803 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.957781711 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.401769201 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.412236248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.436457528 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.390490933 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.506568841 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.388844368 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40510673 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.398339807 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.393559213 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.3867185 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.503809398 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.953416332 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.417381925 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.391918896 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.389475348 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406827426 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.394010229 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.391849763 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.522154142 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.386197025 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403305439 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.506243728 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.400700693 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.417485773 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.385106245 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.390795211 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.413608061 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407057941 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.419360724 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.392579336 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408466136 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.404220052 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.383647784 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.400283457 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.404334142 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.395755197 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.400711521 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.387545845 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.411901656 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40623232 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403700907 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.413546762 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.509354344 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.387377354 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.507517948 seconds)
done (took 235.555724112 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.451093518 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.389503787 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.477811137 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.385099978 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.493378712 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.484436924 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.38636864 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.38504206 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.385470834 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.762873495 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.384875178 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.38669973 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.385871521 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.383362945 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.47155702 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.384334083 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.382684594 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.778329513 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.384947005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.456887809 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.389827695 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.384918677 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.388082258 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.799016598 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.382470478 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.38143366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.457436706 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.384896246 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.73223797 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.38046277 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.384665357 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.732745631 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.477509711 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.40331644 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.400845153 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.397995381 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.495185114 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.407916918 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.472509701 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.469798394 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.48017687 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.424522865 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.391626505 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.383458475 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.393441099 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.393317677 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.384237367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.415999136 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.384759187 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.388416101 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.748973685 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.396967603 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.400322221 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.390506458 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.385428505 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.41199074 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.389234643 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.390799983 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.482792865 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.388672627 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.453824828 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.798070073 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.766413793 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.390611419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.3928846 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.387695633 seconds)
  done (took 152.228813576 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.457131619 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.466730023 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.511855194 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.410029287 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.440150307 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.515864036 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.410089529 seconds)
  done (took 11.502941895 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.395624956 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.391711081 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.440267275 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.442542213 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.391020325 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539728064 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393146298 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.406650261 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.391726294 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.445160249 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.395860561 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.393722219 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.400048709 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.385284513 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.443740706 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.40528504 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.510368808 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.397454475 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.391683162 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.54295999 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400654 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.398773485 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445898562 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.404313164 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.395838625 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.400868111 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.963550947 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.392060349 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390564493 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.398206033 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391461542 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.431161341 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393349053 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.393640846 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.388878119 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50873123 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.392215173 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394170371 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.394550937 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.395181623 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.394981776 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.395084362 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.393887026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.393268674 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.393210577 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.41895132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.394932584 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.397644151 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.395335984 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394403711 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.446908318 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.3979493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.395647199 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.395291427 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.453570345 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406045893 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.396791497 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.391004954 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400680392 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393641793 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.544570986 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.441280865 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.393639847 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.444158083 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393132189 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396680641 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.398358705 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.397653194 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450904352 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396927789 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.448097089 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.392681964 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553025267 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.421635472 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.399423148 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.401267254 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.399981153 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400817005 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.395661216 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.405395587 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.396308521 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.403154892 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.406948252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392309004 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397536618 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.500017355 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.504865587 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.394737308 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.412382898 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.405827561 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.393830392 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.449852252 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.398865681 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.394545983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454650369 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.512378798 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.453477134 seconds)
  done (took 159.271757837 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.404976831 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.409294746 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.403169191 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.414134213 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.391993962 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.397293341 seconds)
  done (took 9.722043582 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.401046167 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.399309385 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.400368632 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.396891748 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.399791494 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.399454867 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.395127496 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396956247 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.407232793 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.396960966 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.400441959 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.398223272 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.402160675 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.400912967 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.398098437 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.395397258 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.403059371 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.394315898 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.400957794 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401227256 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.494438034 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.397759314 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397363143 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.403116569 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.404307747 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.39997494 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.408820414 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.399622021 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.401916173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.410266778 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.421001003 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.394346043 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.397537535 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.403523424 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.4052434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.40216384 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404057283 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.403303819 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.397407276 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.402614114 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.400713029 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403293035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.397120417 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.406846138 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.404301616 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.40375294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.406589415 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.413569218 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.399790334 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.400902818 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.402711134 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.403206523 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.402611359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.401276621 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.408488653 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422401306 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.406485125 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.402692697 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.39844615 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.402980919 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.403049394 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.40087259 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404772547 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.402477046 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.406220209 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.404999888 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.404173796 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403311564 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400231714 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397830507 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.40223805 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.399604675 seconds)
  done (took 103.356804101 seconds)
done (took 437.369509902 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.585877384 seconds)
  done (took 7.891215631 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.648089468 seconds)
  done (took 7.955361163 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.742318637 seconds)
  done (took 24.056156161 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.433879923 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.47843712 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.407159373 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.414952895 seconds)
  done (took 27.038607128 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.791920477 seconds)
  done (took 8.097265243 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.402109973 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.389703056 seconds)
  done (took 14.09861629 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.623898482 seconds)
  done (took 7.927959669 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.078850367 seconds)
  done (took 8.393619368 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.423240592 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.418473015 seconds)
  done (took 14.421154848 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.3772871 seconds)
  done (took 7.682489443 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.091310074 seconds)
  done (took 9.397415037 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.402626752 seconds)
  done (took 7.71059585 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.480171095 seconds)
  done (took 7.784548539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.184040418 seconds)
  done (took 10.489246641 seconds)
done (took 164.24847143 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.400706606 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.394211788 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.393750635 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.391359211 seconds)
  done (took 26.884714801 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.436799001 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.440780906 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.440880825 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450544076 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.443779098 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.440406909 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.429204349 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.432036343 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.451842614 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.446509874 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.442739213 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.44229973 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.440419212 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.434991071 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.443288533 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.446064241 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.450836503 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.44077859 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.434950898 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.443539023 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.403362795 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.451541683 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.443135138 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.407033768 seconds)
  done (took 35.843813242 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.929440644 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.482395174 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.561830361 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.457683378 seconds)
  done (took 7.739632979 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.457588216 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.461890941 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.470681552 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.514366004 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.532525421 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.471347992 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.432580428 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.431074492 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.417092644 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.461414383 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.538910699 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.478680646 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.551835802 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.408596564 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.594995139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.4109748 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.408634908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.460891645 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.514113112 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.530457612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.409762459 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.461333487 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.467273712 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.477110879 seconds)
  done (took 36.671541616 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.403912112 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.428916953 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.405449112 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.404842502 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.414437913 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.409212825 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.405286598 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.408285063 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.406116747 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.41170107 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.40732526 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.422795238 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.407281174 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.408372619 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.413593863 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.409990074 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.408232314 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.407057788 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.404814033 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.410858513 seconds)
  done (took 29.508256663 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.399551161 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.311727642 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.752177738 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.65692971 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.403109647 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.405207627 seconds)
  done (took 29.237141209 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.491438591 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.65228767 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.407180056 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.832046343 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.935001083 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.426225298 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.410808459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.681237455 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.037362428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.044791995 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.470949046 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.48692644 seconds)
  done (took 21.188533275 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.406756251 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.398935642 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.406395177 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414597813 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.475750192 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.425840861 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.420152658 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.403655737 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.47119078 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.488481468 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.426020967 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.474707027 seconds)
  done (took 38.523749296 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487304115 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451896908 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.581543063 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431202239 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125969532 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61578607 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.468606775 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.862017038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.405881273 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680508351 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411891285 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489354173 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664592114 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41808357 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399622458 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.489141416 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648343251 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973671557 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409272891 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.822134162 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428867174 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401757812 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.891296293 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.441315629 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620078007 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.547037305 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.666152452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.185400571 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739120138 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412161408 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416421221 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407123357 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678488109 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121603706 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517051564 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415861727 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404075073 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.951577427 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.398250784 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.811806331 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404861816 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404802403 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416235096 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404935221 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338156961 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405439818 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879639967 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.409475904 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.119172463 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405502139 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422968743 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501416567 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.410648441 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.976972139 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469045394 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414125051 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.404786919 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502906689 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995292289 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203905131 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416507866 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.346943631 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429692482 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.776044653 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102600204 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.52658133 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.410108599 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411210283 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339657978 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.737828203 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421871105 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545555685 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.427792741 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070008165 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180173471 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.429881201 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336038906 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0440216 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410890695 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.34778259 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64035024 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183215617 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349014266 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.354963845 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34131717 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230315149 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421282175 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.926716254 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427944306 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888335034 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.419309458 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424660021 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432595026 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632999931 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.283474902 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407129333 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.421868178 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518589428 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427411253 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87825427 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340968559 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.409917961 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664946212 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.618084727 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420134636 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.513313955 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644815349 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410941659 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.421705691 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411236832 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.423853549 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.052224285 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436002752 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208490272 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425142411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.19158991 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269373166 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428769614 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.508885732 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409152275 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676343262 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.290540658 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.576143488 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477668381 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417336888 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410593446 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.840106056 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002719925 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.5747849 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.406415943 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4289736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418756154 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.415899283 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374708329 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.413341856 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421518939 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.184857936 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.634326667 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410324188 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682389901 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345338781 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546300861 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424039341 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.632632582 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.722241023 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.425977254 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671874575 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409614195 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437895824 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421568721 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431377983 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517254881 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434040118 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.412042724 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682822087 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.421666961 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.414716318 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924611329 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.193091463 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420828688 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.415827889 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412461798 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059243196 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40224147 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419434812 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309297639 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.424822452 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482566925 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417930365 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.424044781 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.480590773 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445013351 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.415707953 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.410567501 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636975017 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426974351 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.817534419 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498576213 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.629624716 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061523637 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443939575 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.349000823 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.126382821 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.106650457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411448091 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.612857286 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42083509 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424201184 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423623527 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437793899 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063787218 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432727194 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.826970737 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.421692672 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425833266 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.420855353 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417774809 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.461394645 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251204 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41450274 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.440298932 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560239044 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.430812692 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348578766 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.935000436 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423818312 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415693601 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.198580784 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452018883 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822778835 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934324593 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675536497 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420983153 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429671287 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959708544 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.45651544 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.419779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422642762 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433574278 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.445747322 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42283513 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.425472976 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.871026906 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.786298757 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983877868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212706566 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035659945 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458015867 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.429410871 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.304795135 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890979153 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350755894 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082364607 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631839524 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895919142 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373451672 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633771469 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.738757931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2933744 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426627594 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650620409 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448022165 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.426970602 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428144348 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631564666 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452438931 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422001785 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350466323 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.697526262 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67631026 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427203685 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49339942 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887484974 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435286368 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.200180382 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.473898734 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.891300012 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626284603 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.964560137 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.820810166 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415373999 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.450083206 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926731409 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423421608 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954504435 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104422005 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.433755957 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.662938893 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358320438 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430613154 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.433700118 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.416584448 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.961950766 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.417456833 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.675998769 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429408617 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356650374 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419652461 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034386875 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.292070041 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.429190214 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423319023 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257972857 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420787126 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768003147 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.423341914 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.44682977 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438604638 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.35615762 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358094237 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.116052351 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422100107 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393176253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007634261 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.432963683 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426481276 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422775435 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270696516 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674638463 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.433459523 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074449538 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66280783 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444400513 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443404337 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.522031502 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434484399 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.403308235 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.324399505 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661058738 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516964767 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.662920053 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.616605574 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.328283224 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458191342 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632858004 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316866517 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.424451245 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71134555 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.157855098 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.433611823 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208529344 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461805512 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432729299 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439703357 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43891568 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440770934 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513431005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435063384 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.434692 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.435422319 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614398655 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429690445 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425324117 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.439886993 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518906609 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.266344698 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.454761486 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.194627934 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084901981 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24798745 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096013082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45130954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425170505 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434117365 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362393847 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573390974 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954375107 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697279456 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545285866 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.435259103 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447411923 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423089307 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428994376 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634316185 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698730744 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402492977 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439012553 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214514944 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.311159081 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439491601 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.639249342 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014430151 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084342654 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546735794 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424030202 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901081584 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701848068 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.517208303 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425316001 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017771984 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.439727778 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.9003368 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.450691201 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430348469 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571272655 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438259116 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149031672 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45659658 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.589942458 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.201058623 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903436989 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684392106 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.983570409 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.438046211 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087347396 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227096224 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689126775 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500296856 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439573757 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.540327372 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573897289 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.423696119 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.32730685 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430147403 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273626927 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.136705773 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.438460693 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087830423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713482396 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.42649894 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.430768853 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451016161 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.439909732 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654209239 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.257378718 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656088587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435599848 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43008713 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.999694472 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089119444 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460790725 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370094993 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.43277149 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715949487 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691567341 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454724004 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.884603842 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.141245936 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054311323 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.404101018 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451672387 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431966184 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217392601 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090957387 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.492296125 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009302471 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088761178 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438015445 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702232547 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.434548711 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43496901 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70736221 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.439466727 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427348784 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440098648 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.090599338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315344963 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.450602032 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.927119195 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.370002882 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.662998715 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49679405 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388782644 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436880729 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.626251573 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430322709 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556833251 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441121045 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.429010708 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438064386 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.164825095 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725216529 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.43943979 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.429697086 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.424234404 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443427239 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535191468 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691940215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436651537 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.124530605 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.780847895 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.692553791 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445539195 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.41691414 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.440239754 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432718597 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158747916 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452142048 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438409421 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069424832 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.433934564 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.444143284 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440299078 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.649399275 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64515897 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433840717 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441547574 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441119588 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448388319 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.335244973 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.20686034 seconds)
  done (took 1695.643365826 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450226102 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.488864684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.480225941 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.444349995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.47751159 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.579639718 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.487875093 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.566491422 seconds)
  done (took 53.315255696 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.44864648 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.596284639 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.467394643 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.441967502 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.446218065 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.44303611 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.937295542 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.461022404 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.444218451 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.443081804 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.443641822 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.449939973 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.153296687 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.443701597 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.448750636 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.43034949 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.443143943 seconds)
  done (took 67.292307823 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.445572473 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.062354303 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.490672602 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.439764564 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.087350647 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.452603942 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.950895885 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.471190581 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.454185112 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.536977806 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.093886413 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.468146256 seconds)
  done (took 82.298790466 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.443687953 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.446573231 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.44368894 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.446461707 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.444202934 seconds)
  done (took 8.567329028 seconds)
done (took 2134.01686171 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.759081342 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.237772897 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.156041616 seconds)
  done (took 5.74003257 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.58519526 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.638592493 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.805311961 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.765568893 seconds)
  done (took 8.134801014 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.715125066 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.825497362 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.628444618 seconds)
  done (took 6.510144113 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.058925665 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.445794882 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.470805578 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.434607259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.43905928 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.441754511 seconds)
  done (took 20.664214665 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.441208999 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.441812329 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.442676767 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.444828278 seconds)
  done (took 7.116751836 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.419567363 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.177419448 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.427065326 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.440025317 seconds)
  done (took 18.807007993 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.18697161 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.200535551 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.185324931 seconds)
  done (took 7.917474616 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.452800259 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.285087698 seconds)
  done (took 10.081512681 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.744827456 seconds)
  done (took 3.087997401 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.574708625 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.774953286 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.600854042 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.560923653 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.139518063 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.881729409 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.337311984 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.856732563 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.541989075 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.004921696 seconds)
  done (took 33.619769409 seconds)
done (took 140.755567998 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.723879559 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.839571791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.640907416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.697102414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.682697057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.645526213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.970476046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.665812313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.205874503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.193276408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.740138938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.685333982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.699708595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.843882898 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.702791127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.462272025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.671960416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.774785401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.422984618 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.436930463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.990662143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.340248318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.571680821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.357567539 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670716048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.599944498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.916767581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.460851608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445944541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.939468838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.597306554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448010037 seconds)
  done (took 201.391815648 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453416694 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.441177861 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.466177869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.440853886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.446054538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.441356556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.444599727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.456966657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.458866245 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.44712083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.447414833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.441234199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.443715152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.463135492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438950302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.463871225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.461000761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.440068287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.438412475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.457025412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.440384849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.441088369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.45910466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.462574484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.455053579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440733387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.461766037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.440709892 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.439784414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.441781248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44474334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.460175177 seconds)
  done (took 207.730756694 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.438398707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.457205137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.443444759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.441668389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.455319468 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.442414983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.464009671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.445975135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.443220977 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.442928391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.460628132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.444331839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.445098869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.443620892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.442971447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443786027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.445079876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.477997232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.455490197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.453554102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.452032864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.441613807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.443338678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.451403243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.442282676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.467043078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.464847152 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451782401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44324724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.446892315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.446410798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.465401295 seconds)
  done (took 207.755136875 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.642866958 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.450725154 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.448876222 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.40882917 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.452371759 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.451217472 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.4504514 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.638388182 seconds)
  done (took 15.29477326 seconds)
done (took 633.518012491 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.904157891 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.61208103 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.666401314 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.466876975 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.339354103 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.49035037 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.472078878 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.658524153 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426022233 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.671315519 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.845205543 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.485453159 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.994726282 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.469787843 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.748642789 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.574229651 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.379207297 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.507647159 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.813917266 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.100366051 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754536019 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.020167259 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.678488732 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.409841904 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.012263508 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.01542505 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.286018679 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.37055241 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.491320264 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.821044941 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.332346876 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.557515384 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.545168643 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.545899188 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.597258503 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.573246058 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.520387223 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.53843824 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.685106697 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.778153558 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.091803199 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.237245245 seconds)
  done (took 98.839104436 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.438896645 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.436835424 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.434694748 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.438885018 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.43919676 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.434109588 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.437750495 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.43705113 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.436219368 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.435246589 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.436275764 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.437988555 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.432890965 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.437329497 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.433940756 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.440297882 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.435083437 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.437619124 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.43820228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.437050854 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.436353095 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.436396998 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.438744239 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.43469901 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.434749219 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.441060956 seconds)
  done (took 38.713891735 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.454492845 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.723699356 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.905226819 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.460857817 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.456668477 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.460500125 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.547086145 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.454141502 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.461935437 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.459869535 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.644192283 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.458334334 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.497409332 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.933186532 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.460695191 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.45752548 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.469066333 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.46024846 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.731390214 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.466159228 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.567962226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.458699465 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.546275629 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.467994235 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.479078074 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459433336 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.464996112 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.990155008 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.476660402 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.636058129 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.383792094 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.546293633 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.938498268 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.932252997 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.386141014 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.46326783 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.456704376 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.641086629 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45868699 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.465167044 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547992089 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.458044917 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.916503558 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.10739653 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.478431712 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.460676837 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.015894055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.662813301 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.743179647 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46855633 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.942314857 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.46183943 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.45880606 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.462752983 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.74144381 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.466454645 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.458160076 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.027000759 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.485959838 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.55259204 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.459942626 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.45709992 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.739434476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.462701369 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.727502192 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.465780492 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.46927903 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.478389819 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.917605444 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.458360683 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.135096521 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.479913211 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.45945965 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.640321468 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.729929541 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.049274223 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.480863117 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.742995198 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.953525064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.563722835 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.463700716 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.979478986 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.570118776 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.465854601 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.463341355 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.467609154 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.462828833 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.514309266 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.54969422 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.068031417 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.145657137 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.045209186 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.578393785 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.471655229 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.462576208 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.028676175 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.484072056 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.463484861 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.917942455 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134001437 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.484127393 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.473888997 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.135515543 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.481862895 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.555337837 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.468397982 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.924364035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.466691164 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.517308991 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.462196475 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.467914059 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.486656846 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.556935798 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.467955711 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.464376197 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102673069 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.673399392 seconds)
  done (took 192.259792287 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.457775932 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.456617836 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.454764428 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.456432972 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.459449224 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.465002405 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.452322597 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.456834231 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.464059601 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.45704687 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.457313114 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.457959813 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.458225346 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.463034362 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.468666141 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.463802654 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.069216576 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.457291152 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.461226102 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.457983666 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.285071804 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.460774725 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.467274845 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.458682023 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.459903613 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.459640801 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.463368466 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.462649594 seconds)
  done (took 155.679739553 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.467042871 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.108354984 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.485998108 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.615176919 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.489915263 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.462648053 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.612603135 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.534133919 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.486751686 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.459876123 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.459245423 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.809524512 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.464627134 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.054826156 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.688970377 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.632001575 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052527377 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.483112486 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.460365451 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.464073593 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.621456224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.473957192 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.809544981 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.109215147 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.482381475 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.111361862 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.454218385 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.466077506 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.467048562 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.11148184 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.480909897 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.813687149 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.555239484 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.536271148 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.129255341 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071485811 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.077675861 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.638978836 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.46504539 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.466757129 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.463357944 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.447561649 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.116795413 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.487153355 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.468163893 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.105814535 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.485247308 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.466072922 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.467362416 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.463250804 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.542001596 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.557826717 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.833776462 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.11858607 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.574979428 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.476491497 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.62082333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.846987942 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.467985843 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.061288904 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.451530053 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.118661794 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.486369646 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.454000818 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.469010996 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.475744024 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.641232046 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.617753884 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.062236115 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.484897377 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.065764072 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.656014643 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.466296062 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.46795494 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.470872967 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.119020578 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.080782118 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.659899544 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.622267506 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.696326369 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.454466386 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.473130948 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.455402207 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.558902197 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.467699404 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.128626659 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076986611 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.486986377 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.47223009 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.471772628 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.471211235 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.678258162 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.143939823 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.577050267 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052802565 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.840738122 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.820598217 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.471432522 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.539574922 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.486703944 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.829718304 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.470248037 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.539167074 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.913741065 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.825395883 seconds)
  done (took 176.348965962 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.741454158 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.809806616 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.57006661 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.621816324 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.120095195 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.056902444 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.821474713 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.621165109 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.591846019 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.7497134 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.751004824 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.557954122 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.668675326 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.558311498 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.258760397 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.569383429 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.589060426 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.62063388 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.595148611 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.573072773 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.176260674 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.777648031 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.664431587 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.529562607 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.57520314 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.344978171 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.068423975 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.044107478 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.661242384 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.928602334 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.042671846 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.669373179 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.51907494 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.217299357 seconds)
  done (took 71.036462151 seconds)
done (took 734.224807382 seconds)
SAVING RESULT...
DONE!
