cset: moving following pidspec: 9043
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23218027 seconds)
loading group "string"... done (took 0.552048366 seconds)
loading group "linalg"... done (took 7.615967322 seconds)
loading group "parallel"... done (took 0.172256807 seconds)
loading group "find"... done (took 1.180769466 seconds)
loading group "tuple"... done (took 2.091353947 seconds)
loading group "dates"... done (took 1.320203645 seconds)
loading group "micro"... done (took 0.242106302 seconds)
loading group "io"... done (took 0.693873045 seconds)
loading group "scalar"... done (took 40.332773701 seconds)
loading group "sparse"... done (took 12.556903433 seconds)
loading group "broadcast"... done (took 1.126030363 seconds)
loading group "union"... done (took 13.540995223 seconds)
loading group "simd"... done (took 4.772773646 seconds)
loading group "random"... done (took 9.687387197 seconds)
loading group "problem"... done (took 2.122214114 seconds)
loading group "array"... done (took 22.456845259 seconds)
loading group "misc"... done (took 2.083164352 seconds)
loading group "sort"... done (took 3.448964798 seconds)
loading group "collection"... done (took 19.416727819 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576517508 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140484415 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148466299 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147371174 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186869863 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154191051 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156362599 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097354976 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.96985722 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177889846 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153075075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519532252 seconds)
done (took 5.155561754 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217706396 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094295399 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104980877 seconds)
  done (took 0.869790641 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077446261 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144768838 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094472013 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077450686 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094452716 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077131189 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093846605 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079286278 seconds)
  done (took 1.338046364 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08586656 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096436538 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080806957 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096427985 seconds)
  done (took 1.036691106 seconds)
done (took 4.224429572 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734811707 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273010782 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202953658 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464137466 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196077093 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215481394 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681749767 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353832592 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251586211 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099263455 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142954786 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382818837 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137031053 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682204422 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091840188 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124687509 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17747806 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452038901 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082673017 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109213575 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115856623 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140709634 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129428498 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092062978 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184263133 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081028248 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192307896 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106592795 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080040042 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285042718 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199480606 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688071756 seconds)
  done (took 10.864647035 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109530618 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132589652 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097667885 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136603333 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132410736 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097955731 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084738485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095983592 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120199478 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173742125 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112977737 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135215654 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094269754 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081159754 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114704833 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243251675 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120759664 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103281212 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100220916 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103122026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120080968 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112043664 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108081608 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092174093 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166126008 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220203551 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110171248 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124961709 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09562309 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110676203 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143207993 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141344845 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093383644 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080197836 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170207029 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123985492 seconds)
  done (took 5.092566253 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.070160377 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188555996 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119791943 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16856788 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080115108 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14124542 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093999299 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112064442 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253405788 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187903959 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17530427 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140557174 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098558553 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096595594 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081209435 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095811564 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.615022917 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162092292 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133857268 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09638117 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103254698 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098414793 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36223061 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086136015 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100613863 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080816444 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082071299 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159745341 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080735567 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.156601688 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102014167 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100928088 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132092676 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198680857 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126102283 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116603671 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096014825 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077680575 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190157596 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090032241 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09556401 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102027719 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134969921 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133555893 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096886829 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080324056 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219662679 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079951923 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112773826 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939076888 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.157080629 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180449589 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088390299 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096484482 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320127248 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098469523 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096632514 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08074937 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290271643 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.178724886 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097748896 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07966393 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096423618 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080142868 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395682492 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080315507 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.013939295 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081769094 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106754486 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081178494 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095838003 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102309929 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086641503 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094288204 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097930897 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096572885 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080394673 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097144825 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077423216 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098941428 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105833382 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085534298 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099288968 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147633785 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093419763 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098307556 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127078118 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100673434 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078316544 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131040065 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097956063 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080396394 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093634609 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131713814 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080844822 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108070099 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098317066 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127099134 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095554058 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.167192991 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094106748 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077992177 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12710187 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099176708 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128834747 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11212512 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081035947 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102624469 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077751775 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094178432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159913887 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079210815 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097056379 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081946434 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109382461 seconds)
  done (took 22.708660626 seconds)
done (took 40.412156989 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315226179 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102373115 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101830922 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101984415 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099251483 seconds)
  done (took 1.472009137 seconds)
done (took 2.196847679 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285988126 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172121298 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095610894 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165359527 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092648959 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170107519 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158341365 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110027048 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199160803 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093968667 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160877819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092958737 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075877908 seconds)
  done (took 2.624641881 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094231546 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113982257 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081619987 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1108469 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075092848 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110615648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091749622 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114683315 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109225565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086695837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092792667 seconds)
  done (took 1.808460405 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092931215 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111949011 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081804873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110245413 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076138798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109868059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092029469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115336703 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10898861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084263107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092763945 seconds)
  done (took 1.798460447 seconds)
done (took 6.946848903 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090017109 seconds)
  done (took 0.806942648 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.916135388 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.782770695 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111657295 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147897336 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297325418 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.187985101 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466961788 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123537348 seconds)
  done (took 10.954347721 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114704798 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.112231265 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103445301 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08473502 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101316586 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082098411 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10014887 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10100245 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082809565 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103837863 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083583884 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100704102 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099637996 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086197334 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103427324 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082835165 seconds)
  done (took 2.324776889 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11848777 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1176056 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105877243 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107198101 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087109922 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103166692 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105975501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087304743 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100284387 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102844702 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089616738 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103778384 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102040714 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079146179 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106278952 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.1085311 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087213214 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107242546 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107991163 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090825139 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107396933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096947096 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088510559 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107425261 seconds)
  done (took 3.247254502 seconds)
done (took 18.053735146 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157847264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108333767 seconds)
  done (took 0.990959803 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093668295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112349202 seconds)
  done (took 0.938663248 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09659163 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094345814 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120138544 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108389326 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079616405 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09568546 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118004125 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079663843 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096363015 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078807516 seconds)
  done (took 1.703570358 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08157615 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109576772 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100409486 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094144152 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105899108 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096103871 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088188166 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099015901 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108233616 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07614516 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10215283 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116021625 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085741552 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117863556 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104539324 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083159804 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101269769 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099878605 seconds)
  done (took 2.506610021 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079124076 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096909313 seconds)
  done (took 0.91133441 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08062591 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093743328 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081686353 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098842297 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095862614 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077442271 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095383959 seconds)
  done (took 1.358263236 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488705956 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138606231 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267848063 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104088003 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121452158 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302790183 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096991913 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102066446 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.083975997 seconds)
  done (took 2.48418222 seconds)
done (took 11.622389937 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092756593 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116946732 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112609328 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.461089327 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106111024 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097048052 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146484669 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.243335593 seconds)
done (took 2.115116202 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142705007 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323466301 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113560727 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067694568 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097234282 seconds)
  done (took 1.344463023 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079238006 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101252971 seconds)
  done (took 0.920775652 seconds)
done (took 3.154268862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.112181325 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100613456 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081437875 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097916635 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081339205 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098492712 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077828052 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095730262 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097712014 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080634037 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097844001 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080688035 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097733349 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080490308 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098675323 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078244984 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096244525 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08017792 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096399263 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07905511 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096189898 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080996375 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096278028 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078361956 seconds)
  done (took 2.935053166 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098132818 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098626326 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104603947 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086163481 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102932975 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088211575 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104146548 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098866173 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087163742 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09997651 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102593873 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084703881 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100824121 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085298259 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101277658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102900238 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087279883 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100076284 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083507667 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101989265 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103714227 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082412023 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102668479 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103858669 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084509409 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102499315 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082978154 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099392117 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103773046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084662077 seconds)
  done (took 3.614368288 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083322082 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093458381 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078163526 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103871769 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079373321 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099350774 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079347927 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097564235 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079795668 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096533454 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081294541 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096605768 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078869367 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098889565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080760166 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100726791 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108255721 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077353787 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095928314 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079114007 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100172387 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079191066 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097635363 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07885461 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096476886 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07894268 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096861144 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078816115 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09764447 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078341961 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099988681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082762833 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096948267 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08593903 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100574808 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07937303 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10019594 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079027747 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097951503 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09651536 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078530505 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095941937 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079302551 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103235715 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07931069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099048595 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078804588 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09834535 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079862376 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100904839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078276541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097053659 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080506164 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09783721 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083020775 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09619258 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097663037 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078829089 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098255096 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078654558 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096257241 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078420729 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099781851 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079994747 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112950851 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085579813 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096677526 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081044817 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097575057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081495881 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098680959 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11094847 seconds)
  done (took 7.238708942 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082356908 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105200821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079547593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098802917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077177118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098043335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100576266 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079052165 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099388417 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085678501 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097350204 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080593784 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098834943 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109772772 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079481925 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099536222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085952571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095798823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079408824 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100867896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080669991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100329854 seconds)
  done (took 2.769289344 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20748112 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104576773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142038521 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106668056 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081540173 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10637135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101379387 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086839395 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103068574 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083577039 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102015139 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103874453 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084155258 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102964379 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103078 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085601878 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103957935 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085522532 seconds)
  done (took 2.653607426 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091446454 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097787416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101775546 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097326159 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099463295 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083405139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104103602 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10764005 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084114544 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10062441 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092261082 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102373505 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102424527 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082057935 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103033282 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082367969 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10307114 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082320196 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108444308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105486961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105302507 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091661172 seconds)
  done (took 2.889173734 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096176107 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1000942 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116717492 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08279201 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095188049 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078856392 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105631575 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082069443 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107456012 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102504652 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082148658 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099277639 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088825063 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099219435 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105319658 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081916273 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102801776 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082488179 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102988827 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078164035 seconds)
  done (took 2.652323349 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101200883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.209213927 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098745663 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091570401 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100028309 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08143199 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107818047 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099664566 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081972785 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124442041 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10047521 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08280983 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108997094 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106645378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100184413 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09176902 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11069295 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111199767 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083864191 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1012817 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127457387 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083958336 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111323104 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102200173 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083859345 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101555434 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102330055 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089184881 seconds)
  done (took 3.660259371 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080476334 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099000711 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078637685 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098223384 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078974829 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098510109 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079268801 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098171893 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081975249 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098246157 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082578394 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100486275 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084902665 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099525369 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081205133 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100228323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082469615 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097916961 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079968472 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097421522 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08184568 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100748435 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082651933 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097966847 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079856141 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100216783 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079561347 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09761794 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081792654 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09758464 seconds)
  done (took 3.463366112 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089836707 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104888545 seconds)
  done (took 0.959465316 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07804864 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114623871 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077926263 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10288032 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085573033 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099036858 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107625297 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08493078 seconds)
  done (took 1.516288722 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094554623 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111175258 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083201992 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11211726 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108898455 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094828569 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16486889 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100111182 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086584775 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097514054 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111692317 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080025708 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106385212 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082029964 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105857804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089034902 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097689977 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087292393 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101491844 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099536984 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08339798 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112716745 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085602284 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097666659 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084531642 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111131427 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109149063 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083067289 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102956676 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107997884 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086468174 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092883652 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081279944 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100797867 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079425565 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110303051 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112944063 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083384114 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108981344 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082132914 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110530331 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093874416 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085304128 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105648911 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091609691 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099582735 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082539531 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09422392 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.079251866 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101223664 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095370606 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082145666 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09404153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089007848 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102556212 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111957742 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080000952 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100534284 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084359588 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102846715 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087275279 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100721022 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083682092 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098688745 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105992032 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085418247 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105941176 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076943204 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093952334 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082577514 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107978329 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122606063 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089524872 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100770937 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082873952 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097994395 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104601622 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083920939 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108257953 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091098563 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102641322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10772852 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090697684 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10075957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084737507 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107153919 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097816956 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082960134 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096638904 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095911945 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097808724 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080018052 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097165723 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10761801 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084292676 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099255177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078463233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106294343 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075203092 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101527572 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082647182 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099264606 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.1073395 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087214366 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105597506 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106690668 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088369731 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099539444 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08489012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096316887 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082804472 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101565652 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087799009 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093266928 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101639531 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083073327 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09983523 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089238239 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097921439 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081880501 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107793482 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106308854 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080064261 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096442624 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084299898 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100155761 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085330564 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106503495 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098053414 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076658586 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096206831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085583982 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100673951 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08649699 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105437302 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103368051 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075745367 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097969849 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085470618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10728441 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081672093 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10034139 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104598348 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082349772 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098902812 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086334918 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102222977 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080246224 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104510355 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083205734 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094580037 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103929477 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083512579 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099530421 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085131727 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104518938 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083759189 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100118948 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098405768 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087179126 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100884993 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080448906 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099753857 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080531155 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108627419 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101679003 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077100741 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096916217 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089962398 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09812155 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081551994 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099128912 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084458818 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100640655 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097955703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081092612 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100980724 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093127416 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10438259 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101605323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086723438 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109683576 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081831873 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102216545 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081368168 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101080035 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100885672 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088766077 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.1049452 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086709653 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103442155 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078959146 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105871828 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107298562 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081109257 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098207756 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080409566 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103090369 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106345777 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085236589 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101665791 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07972355 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100226249 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086330783 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102866023 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100294334 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081052849 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104739607 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081243006 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107107578 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082966142 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109566659 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103444992 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077694143 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104065358 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08055294 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106105259 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07767037 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097154615 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09842499 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083736232 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098586962 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084472893 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094426375 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089270102 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10847805 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082275457 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099416541 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099436141 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090121896 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101909234 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085354123 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103382412 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086742104 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113103058 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099705441 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08526364 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110007621 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082384152 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09347956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086802956 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098787535 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099696365 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081209775 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097851325 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0853761 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110054423 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104969201 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07598848 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103899294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08070132 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.09991326 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078109523 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107683156 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086399684 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102382764 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109567133 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082954508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10228842 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086731893 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100482246 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084484717 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102455129 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103804856 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084139293 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103672951 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081783025 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102780324 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081602048 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102196738 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084004362 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100700635 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08230047 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107147797 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099852176 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082925013 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102383404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.082910287 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101269393 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082230348 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100458317 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1038565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081993014 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10080263 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084834738 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095790955 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090151848 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100440985 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089635522 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100832207 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096934162 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087448314 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10353495 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087216092 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101490588 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101281879 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083399585 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100257553 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085808302 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109565236 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079952129 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108885341 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107008773 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082996281 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102842025 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081662824 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102401015 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081962505 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103116791 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082787891 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100627939 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081166735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105997467 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103341684 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082395954 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101885182 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082956437 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100347018 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083241307 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094816091 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080645025 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10089117 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100493081 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08935237 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102125181 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084978634 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099277946 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08378212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099921281 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07948584 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10850693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110792184 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082931967 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108754582 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10023395 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084339175 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110477075 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076222211 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100485219 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080584714 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098937399 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108201862 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082355801 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108921093 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082493207 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100093556 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079609111 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102198022 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081615098 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094783077 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079901028 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104072048 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103227473 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081300699 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100882953 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085023378 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101849638 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089762538 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108928426 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084455984 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101691169 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098260488 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080953396 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10066101 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085107302 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102258866 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079999282 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099738811 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082118032 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103200333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082523737 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100644064 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10213289 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089595161 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100346147 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085529005 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105330088 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077620665 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104624155 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101067839 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081918706 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099766433 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085951823 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104422861 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083455523 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109466494 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101511789 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083311202 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101371092 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080647928 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10108493 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082428895 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102038208 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081923733 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103235073 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109510603 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080502601 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104436174 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081874836 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102892805 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087266934 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103677665 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084393899 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108069772 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103749317 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083447535 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107716369 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086929216 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104143517 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102505619 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084364773 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107061333 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081131315 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109452472 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082716697 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102033587 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102570222 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080025819 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101535136 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082501989 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10113039 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0875263 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103065766 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082200097 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101527799 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079928945 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103618928 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104956917 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090922514 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104985116 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085302685 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097353834 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079935244 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103539377 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099658667 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08510079 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103811006 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089187252 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103738025 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083614467 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101460825 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089044143 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107542243 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105998338 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080960871 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106586343 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083765724 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105027137 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083584325 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101417112 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103021238 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088280857 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103225995 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082002132 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109539351 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086944613 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103618006 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102514812 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08338571 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101761937 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07864899 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102972122 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084855164 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107874486 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103542527 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082171929 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110932257 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082448027 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101454442 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08651563 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101123867 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108121025 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078384507 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102026809 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084299165 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102500196 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078113549 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10167724 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080046921 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104515778 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080987248 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097366724 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110609494 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089603905 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104793376 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08152039 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100634859 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079312561 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096633257 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082145788 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10350967 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103587999 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09201643 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10087033 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082118947 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097395839 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082349858 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10503219 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104741847 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080484884 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097255712 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081235067 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104848227 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089652628 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100548568 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083173579 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105237955 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084746778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100261542 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106975201 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079253357 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10586929 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093137563 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102993788 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08374488 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107552746 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109482243 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084277402 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098168143 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083683447 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104038998 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083224929 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103821522 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103483952 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096836454 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105721778 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082358947 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10214461 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103969817 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082888867 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109186077 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084201061 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102848813 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087850956 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103789205 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111013212 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086098895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108427464 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085504743 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104578191 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081398725 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103120344 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100148225 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08103371 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102957155 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084711961 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107583205 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110424825 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081805691 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11154913 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090790604 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108078971 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080240632 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101979711 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082673723 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097828273 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10393674 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082879266 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101184881 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081326904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101807578 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083640965 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108321787 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085127725 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103611804 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082952765 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097127295 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10649298 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086719285 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103032454 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080852622 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103066489 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084589768 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10863403 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105986132 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083857925 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104134169 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085326614 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102297656 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079212389 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10857407 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083108737 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105800695 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082883426 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103011306 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103914548 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08661746 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107855226 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085285404 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105285086 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115393593 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08626605 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099792509 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081344035 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10814714 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081178956 seconds)
  done (took 57.321339492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145662432 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079760502 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098676132 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079054163 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112105862 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099102302 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079156922 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099580978 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080186512 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102390754 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078674478 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099036577 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109124137 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12281995 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093656359 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103158279 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078209037 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09986038 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097714547 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080642964 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108606668 seconds)
  done (took 2.8635314 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103978803 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116839401 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114429862 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118464793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088737527 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115172181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113088429 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114106238 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098509714 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110364728 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117999488 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115013015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09074937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109840664 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109796712 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092163358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117977681 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108572138 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116612237 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093815659 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113422558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113382138 seconds)
  done (took 3.206553018 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083252822 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102048389 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083967309 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098303742 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082895168 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098669545 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087145995 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10070707 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086600376 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102722809 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081679217 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102445385 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103719842 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078338348 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102886701 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081177199 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15146705 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107132831 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083084485 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105409511 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077764499 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105597546 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098493078 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078901617 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101675143 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08835414 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103718254 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081151396 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102178486 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082408518 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103168109 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081092823 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104723107 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103376055 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081929499 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102121128 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082888943 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103188352 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078855126 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100999898 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084210567 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099081999 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084307326 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104096711 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080926117 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101781383 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084542964 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103093168 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078044125 seconds)
  done (took 5.422880542 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103738202 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160727809 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085197341 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142772588 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120032973 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113127117 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087632993 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141901102 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101675615 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081576665 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121444862 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119116402 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103159245 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089420513 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107135524 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103204306 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086420914 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102173225 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08876762 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103912379 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107115896 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09093805 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118892748 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116611678 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107180471 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082946963 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10267196 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108943859 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095748562 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109323907 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108485577 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089222764 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119484145 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105221783 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083770554 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105505981 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120253528 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084077689 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106634774 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101837031 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086365836 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108585073 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110086452 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102535044 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104778232 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107542232 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084077454 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099693156 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116823783 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086992895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112309173 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11994288 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087627856 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104684568 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109017596 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118434415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084013384 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101654097 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087682277 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117731489 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101127235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088208245 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118541507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105789061 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091705306 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117864076 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107885806 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107448073 seconds)
  done (took 8.074435176 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092946922 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110728453 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119396245 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119919924 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09053897 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110992011 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109607769 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089638024 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110613453 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116569916 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110088016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133880276 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086357794 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114191076 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110281239 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090525171 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110627713 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109782901 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090278365 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110988618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111190276 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120236017 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091485232 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118932309 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140240653 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105430163 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090640146 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110665417 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120367143 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110711152 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123823601 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089994363 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110097669 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120604603 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123984139 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0901045 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103926387 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110152082 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090972145 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112636694 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106287232 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100826398 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110857965 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106027867 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090956898 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110787325 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12049727 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124257121 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11335282 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095834175 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111174541 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119928078 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109908559 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091327946 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119827015 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146479875 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120234831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120194015 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109958765 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099293797 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120509956 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128404338 seconds)
  done (took 7.634362998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10717734 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11470956 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116822172 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099595311 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082273003 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108762181 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082278187 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102999877 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112887547 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093568994 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117031623 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107801795 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091095161 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117240217 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109122704 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111548484 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088257624 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107610634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113854229 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107319383 seconds)
  done (took 2.919706257 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092357468 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123437945 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084326612 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111620635 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107347097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091109718 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107251462 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106645604 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084832893 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107204818 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095577162 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11570333 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105314281 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090778558 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115585275 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110746326 seconds)
  done (took 2.477663016 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095463224 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116491586 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120182638 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084283047 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102941503 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080296514 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10530708 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100577448 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080772191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1204514 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084576702 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112053141 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104440211 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082470866 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101496187 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08805375 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101186427 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081967687 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107029905 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121183029 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097063236 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107127983 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108375851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08853677 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108227984 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091021345 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107668647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102102635 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08286993 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104888724 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085428851 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113982726 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101612517 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08318408 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104334469 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082431125 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106856389 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085182985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108066635 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104592235 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083136414 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103530289 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084120032 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105735951 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080503249 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105472336 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099660566 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09095073 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102384271 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084048175 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104522224 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086356565 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106670116 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115547176 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087900017 seconds)
  done (took 6.236032455 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098841923 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108610919 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081021758 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10475706 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087909012 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108840384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10823408 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087111881 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106673703 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082526838 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106646209 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088859159 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108336158 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108590477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086514354 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108560992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080196396 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106150005 seconds)
  done (took 2.605690088 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089985879 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104131237 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092464199 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106617081 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084202497 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10981966 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080453653 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104788377 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103204258 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084998257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104338569 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086548713 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104116151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086585891 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105709895 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084254438 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110475781 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104680886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085243652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102255773 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087860315 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104478737 seconds)
  done (took 2.96229248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117356298 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124777146 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.0922613 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23015192 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103087258 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131288432 seconds)
  done (took 1.635169298 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109316419 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119323521 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105367734 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106342547 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114051305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086041356 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107578608 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10738093 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116693451 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099888689 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107500644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117793876 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11747742 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095459311 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113406069 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114056648 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106951856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0871208 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105396965 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127995494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087655412 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117281165 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108175137 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086666018 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107631696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117124945 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117736594 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120307765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085975765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11634122 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114332278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086367899 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11809181 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122372436 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108948221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097540787 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107788191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127670595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114047674 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096446823 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108544317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113869218 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096494839 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113285481 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117022883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107739243 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092331748 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108063864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10747843 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134627911 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092838911 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117580615 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114272038 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117251645 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09680973 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155057629 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10120949 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116311383 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11499415 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122224044 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117942528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093112136 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116420178 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122200749 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114362391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116445065 seconds)
  done (took 8.091165297 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100645333 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125593872 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10783722 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12205047 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09653362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107652576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107195023 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086888611 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107534282 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106923163 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151441826 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087867884 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117684272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116824086 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086883277 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107884101 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107339775 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117755797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08609494 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134343007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107423846 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117047118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117285242 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095599574 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123234441 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114348877 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107376229 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086956082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107994847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107874355 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09365866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108293463 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116984232 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086459428 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117443437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109150472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086588931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114023903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107675263 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114648629 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096329096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126761908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107610058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10795493 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100684868 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107788858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108270298 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086089801 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108608298 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106788247 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100650565 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122773126 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121417028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117194461 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107526583 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087400594 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108873819 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107546103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086962368 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116972772 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118221266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086388148 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155793202 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087793503 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107996909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11685952 seconds)
  done (took 7.973572813 seconds)
done (took 154.515870014 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221117997 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.231606608 seconds)
  done (took 1.294049839 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097060415 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136159588 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094961872 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167736177 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106508408 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118733983 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137509992 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096408442 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105764623 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084865332 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10607486 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086585352 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171341159 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084674351 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106063687 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106518158 seconds)
  done (took 2.653437594 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199391779 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253026941 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101876165 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105303311 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08848603 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109636294 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104625623 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091066695 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109050485 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085233455 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108378261 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085516999 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105314074 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085710097 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110048465 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087037651 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106126441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087366815 seconds)
  done (took 2.87345101 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112145232 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145943154 seconds)
  done (took 1.113420445 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118461162 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179159601 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314074098 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154871641 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106244997 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126555154 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156276118 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129925444 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197092027 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122565622 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121203683 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096463579 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13960902 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114891881 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093659431 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118480402 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141198163 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092116316 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115148901 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115473758 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116110281 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105771596 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114945363 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092686904 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180804267 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.1198826 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084421705 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108201237 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116146717 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094586716 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112883042 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124034751 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097801495 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176397888 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101225436 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174591413 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097236951 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111719854 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113135767 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090640921 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118963252 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117638468 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102599486 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117077778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084035267 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117825354 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105752637 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084735347 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114571486 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096650025 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114409094 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113893469 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154249728 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118124763 seconds)
  done (took 7.497521542 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792653825 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155701767 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089820272 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886145792 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137796435 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103783003 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781340323 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134972727 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232568717 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76027526 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134797423 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121574444 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227234652 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237156777 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954844236 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312433631 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671509451 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101095438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151863675 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152536612 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119311611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136045715 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108492927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448825035 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095499371 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111923244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09543379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122369781 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157066456 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124723383 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11368093 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178953744 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247274808 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206015406 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115452928 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089634916 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111774043 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168250884 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267360548 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214147025 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179816032 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087941922 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110751045 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100031148 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133034601 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108130067 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163495632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172347505 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193037388 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092206011 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120965358 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119455022 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099207462 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186778907 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09809651 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319911514 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310073678 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110722945 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098336197 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127134958 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262486077 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121977648 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222008587 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117966183 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212309332 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110511129 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780986084 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18872567 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09019913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117467469 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096513626 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116143552 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121390782 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167905718 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392367333 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122913232 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092272613 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110972909 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20316766 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125970956 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110175492 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162045207 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094207142 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121267748 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124570965 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122503236 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169952505 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229044446 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127754682 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119313281 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092992529 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124850646 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116206444 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212040208 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21979212 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162084193 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207293629 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12344632 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163546781 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188721883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098095367 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19359552 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097880026 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12651228 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121551368 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215038812 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144881712 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101802255 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116199927 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117587184 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147576614 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105331874 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118741959 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168356983 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478300179 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168541016 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108723918 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10521406 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120343177 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16074597 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117237965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256672667 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099280656 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191006404 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097187524 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109785868 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120230017 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164848718 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121720079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098629008 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123034307 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117993307 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235016593 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21565956 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0999072 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242784596 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184135304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117754926 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171702401 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120779344 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168168481 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119863153 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098199063 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116489338 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793542988 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122545129 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098646046 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11560462 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187685536 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089002574 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124240788 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12432516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08623786 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775763835 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12700865 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121317448 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102214012 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118599728 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120367688 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096246199 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115472439 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161395548 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231747552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120254419 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097764352 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125237552 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157972572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117595686 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124675651 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124107302 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103090091 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122982472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114144525 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102437981 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190019105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162027451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219431537 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568067715 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112408797 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12446446 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226616635 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090598681 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286092586 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119251843 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203726306 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187326403 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098931392 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308578069 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187272568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187561511 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105400963 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195355441 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087153713 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119432544 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163572228 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111785622 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095479755 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182769621 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102592201 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123140689 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956211872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089280126 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247324532 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087524572 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192263938 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094687799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120388211 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293311775 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090295448 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1304947 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163357042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115790482 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124435356 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699462729 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125217712 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120967828 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097266955 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221764687 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163065659 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120211618 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119720232 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119671384 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163629252 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207217536 seconds)
  done (took 43.901259892 seconds)
done (took 60.179427566 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275357519 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216668994 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261991851 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168067513 seconds)
  done (took 1.876976998 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17014154 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148595092 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120655036 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10774893 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150101962 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083972742 seconds)
  done (took 1.661147786 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.354703075 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270759367 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239200299 seconds)
  done (took 1.74686165 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.315431911 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246597667 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473676704 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323729581 seconds)
  done (took 2.336855154 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207312128 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133230536 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110528439 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104195765 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195447044 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244292513 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141232899 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200389383 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098813833 seconds)
  done (took 2.358673973 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195482233 seconds)
done (took 11.060009935 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.249424263 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.237283814 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.161249204 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129437177 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.241625 seconds)
    (6/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.268829381 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.218196522 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.230702824 seconds)
    (9/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.125685681 seconds)
    (10/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10327065 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116253948 seconds)
    (12/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.17577893 seconds)
    (13/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.089534859 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097958309 seconds)
    (15/286) benchmarking ("sort", Float32, true)...
    done (took 0.226904555 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117537396 seconds)
    (17/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.172015446 seconds)
    (18/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229109775 seconds)
    (19/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.2646304 seconds)
    (20/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196945036 seconds)
    (21/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.165117574 seconds)
    (22/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118468602 seconds)
    (23/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.249424771 seconds)
    (24/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156592887 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114873443 seconds)
    (26/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.154578764 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.249257546 seconds)
    (28/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119956957 seconds)
    (29/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092613253 seconds)
    (30/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192996801 seconds)
    (31/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.20372771 seconds)
    (32/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099996075 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.219910684 seconds)
    (34/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175230097 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141138371 seconds)
    (36/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121229188 seconds)
    (37/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.187010033 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09381896 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.181912295 seconds)
    (40/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.145213255 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097459749 seconds)
    (42/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.100667667 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.216065144 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087127769 seconds)
    (45/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120196407 seconds)
    (46/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096697304 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123620015 seconds)
    (48/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.18756579 seconds)
    (49/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107026838 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116950067 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131923635 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.150834301 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113106367 seconds)
    (54/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117676185 seconds)
    (55/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.129867079 seconds)
    (56/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.144735962 seconds)
    (57/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09354106 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.136149312 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.180166502 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093613179 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197360499 seconds)
    (62/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125115334 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08617007 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129390607 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09355276 seconds)
    (66/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108599197 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096311612 seconds)
    (68/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.116487337 seconds)
    (69/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09365508 seconds)
    (70/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114010086 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135213198 seconds)
    (72/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195764774 seconds)
    (73/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124208807 seconds)
    (74/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.100403563 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134999683 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117069347 seconds)
    (77/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069614819 seconds)
    (78/286) benchmarking ("sort", Float64, true)...
    done (took 0.231077056 seconds)
    (79/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135622468 seconds)
    (80/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194865782 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101951584 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111368732 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066865824 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.108901441 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182737122 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160886513 seconds)
    (87/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.120576429 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085015577 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108724667 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077769838 seconds)
    (91/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112363347 seconds)
    (92/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149940851 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107953166 seconds)
    (94/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122187047 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.13097242 seconds)
    (96/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184477467 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109901229 seconds)
    (98/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1738237 seconds)
    (99/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156239515 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101373381 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133606493 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119642153 seconds)
    (103/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09247873 seconds)
    (104/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113564374 seconds)
    (105/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086900034 seconds)
    (106/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132132808 seconds)
    (107/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075443633 seconds)
    (108/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172612942 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066460367 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112314074 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091890501 seconds)
    (112/286) benchmarking ("sort", Float32, false)...
    done (took 0.173175767 seconds)
    (113/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115315216 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.14968676 seconds)
    (115/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090052785 seconds)
    (116/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.18212825 seconds)
    (117/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06666835 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.207223707 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.181876482 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095080979 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115891823 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.183305653 seconds)
    (123/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066742394 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093411197 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115728062 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117648434 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093657411 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121138988 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093788298 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090147649 seconds)
    (131/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081743974 seconds)
    (132/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170022635 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066779007 seconds)
    (134/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137473102 seconds)
    (135/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090345787 seconds)
    (136/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.197049391 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109018018 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093761502 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134003705 seconds)
    (140/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120569267 seconds)
    (141/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094499535 seconds)
    (142/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120802355 seconds)
    (143/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067109771 seconds)
    (144/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134979115 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092425623 seconds)
    (146/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107996482 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091487513 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117161008 seconds)
    (149/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067019864 seconds)
    (150/286) benchmarking ("sort", Int8, false)...
    done (took 0.186053801 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14696341 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066658377 seconds)
    (153/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166887518 seconds)
    (154/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.149300336 seconds)
    (155/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.0683707 seconds)
    (156/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066771225 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.11056401 seconds)
    (158/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124109568 seconds)
    (159/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130059875 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135185969 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088654654 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110029198 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 0.171862944 seconds)
    (164/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068274983 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173536725 seconds)
    (166/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147433195 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116943887 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184105814 seconds)
    (169/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066943836 seconds)
    (170/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077021143 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118003672 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085914826 seconds)
    (173/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110985233 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127369758 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111336098 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091436197 seconds)
    (177/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09811341 seconds)
    (178/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171162193 seconds)
    (179/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.206306146 seconds)
    (180/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088650269 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.332878263 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.220572355 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085696874 seconds)
    (184/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089735011 seconds)
    (185/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097113688 seconds)
    (186/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108973415 seconds)
    (187/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.126473273 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090634397 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065804462 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114167067 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095603318 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06578696 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117707063 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085774932 seconds)
    (195/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.089930758 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085545978 seconds)
    (197/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.089512901 seconds)
    (198/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087199369 seconds)
    (199/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089275465 seconds)
    (200/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066314481 seconds)
    (201/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087160721 seconds)
    (202/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110020697 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116746122 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087497624 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113912217 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086290067 seconds)
    (207/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110298622 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091593498 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137405386 seconds)
    (210/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138952722 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085249153 seconds)
    (212/286) benchmarking ("sort", Int8, true)...
    done (took 0.216715775 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135155075 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085854029 seconds)
    (215/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090604179 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085823332 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108498488 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067227136 seconds)
    (219/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067442022 seconds)
    (220/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113202887 seconds)
    (221/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091705037 seconds)
    (222/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11727113 seconds)
    (223/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067368309 seconds)
    (224/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089276678 seconds)
    (225/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067739236 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119870329 seconds)
    (227/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095305229 seconds)
    (228/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111380329 seconds)
    (229/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077312766 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112925999 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068056604 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132751404 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085599155 seconds)
    (234/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077325662 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109016857 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128638811 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067439731 seconds)
    (238/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115646927 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092058988 seconds)
    (240/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135338759 seconds)
    (241/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067205745 seconds)
    (242/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066093306 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110628754 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119164619 seconds)
    (245/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093022984 seconds)
    (246/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229189698 seconds)
    (247/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065966628 seconds)
    (248/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108613222 seconds)
    (249/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067043278 seconds)
    (250/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090461581 seconds)
    (251/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086894093 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124148213 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066539039 seconds)
    (254/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108494204 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085577383 seconds)
    (256/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065713878 seconds)
    (257/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.100096907 seconds)
    (258/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068679675 seconds)
    (259/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218328964 seconds)
    (260/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117532335 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181682225 seconds)
    (262/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066001467 seconds)
    (263/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067753569 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118394058 seconds)
    (265/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.127485908 seconds)
    (266/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112773431 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085581279 seconds)
    (268/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136062648 seconds)
    (269/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066550893 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109245246 seconds)
    (271/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163560774 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094840072 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110535975 seconds)
    (274/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.0886048 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11577032 seconds)
    (276/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068526884 seconds)
    (277/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091066284 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069066125 seconds)
    (279/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066989898 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089399127 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09188761 seconds)
    (282/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067094749 seconds)
    (283/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101711201 seconds)
    (284/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077169085 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089561449 seconds)
    (286/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06782606 seconds)
  done (took 35.97604201 seconds)
done (took 36.860688548 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099100085 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14738761 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09507384 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134438527 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122806782 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090459464 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117905836 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09800368 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12275016 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123770395 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098853589 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092737519 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096453501 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118831194 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098866424 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138294052 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123783455 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092916168 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117773712 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085683399 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118484856 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085621807 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112297314 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069444979 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121893818 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094197155 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116017849 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120243339 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087309104 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110448184 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090404167 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117627551 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085885173 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124821298 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09361149 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11832785 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096469557 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120514633 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088517132 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110053382 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118096253 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085971172 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117133812 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094568859 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116111717 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092239981 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117374258 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099512104 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138315298 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11540356 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094690375 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119130741 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095310637 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117144154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089716654 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11786886 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090570506 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138836195 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117972788 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09167593 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11769961 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094429368 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114522085 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094848968 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117979384 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12158506 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097368674 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114477417 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09622022 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115541408 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086502207 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118591162 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090152302 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109623922 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095385895 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120462318 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085675616 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116224215 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09372745 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11479275 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110037168 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089071591 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111359809 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093064529 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112654315 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069576227 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090338431 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117015736 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085390372 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118363449 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116334487 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093187284 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111604474 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098870683 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109243867 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091551571 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110135035 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086561981 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111504776 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090468454 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110476179 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090019597 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118991107 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088300479 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117457907 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098961982 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110149242 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117380736 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085759877 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109551973 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101225885 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120054983 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086637992 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115545436 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085927546 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117537984 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085985492 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109879173 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087280163 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109838659 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092376198 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11029572 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089576315 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116868007 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124683189 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086420138 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114075904 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088861433 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109894376 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092023447 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110804967 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085990058 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11156509 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077515612 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113918769 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086700876 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117377568 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089319085 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119717326 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088716073 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12012629 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091302348 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117108761 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092098708 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109070205 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074439358 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116857407 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089388748 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113247502 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0866219 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112531119 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086996066 seconds)
done (took 16.842523665 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086895341 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182755736 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150531548 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141942911 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106459909 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110660385 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121376567 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117516924 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112519147 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141427516 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10979898 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13103568 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147492345 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086526669 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110974363 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090560041 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112035992 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101739972 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145798485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132117676 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163446365 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085914658 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145537747 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134658257 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120902778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113220063 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111423656 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091152449 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114864266 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101841584 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131575649 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09077479 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111630775 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13214886 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1042648 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119312179 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086751302 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1188861 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086711463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111574134 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139895146 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107941653 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116029284 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11648233 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09138521 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113071888 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089180325 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120772682 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096932569 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116677621 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12499686 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155276976 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090542374 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120735871 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086184681 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122282661 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120807334 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089543428 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112342341 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089899552 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111216943 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091280864 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126622827 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140796806 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091050707 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120524591 seconds)
  done (took 8.554213291 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104593523 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138515803 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104598283 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129639716 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110643818 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088010873 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112625239 seconds)
  done (took 1.734043557 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087735225 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133743464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111302555 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137159858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133435163 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108715595 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124917665 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087880513 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130753873 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114557283 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1084709 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150726576 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089334193 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120350309 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137961684 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088799399 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136160634 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088441558 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115707555 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13572498 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090061344 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134796818 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090881185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112958799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102281918 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112993744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16190698 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093372577 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114244786 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092178853 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111880161 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164449975 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101734828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124363332 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113482896 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102543292 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127979094 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105457826 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129616744 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09277082 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127088671 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113446655 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089524748 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111863298 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092786011 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123342141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089623489 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114420687 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091623507 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133128228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089608099 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12727412 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088664001 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11835284 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114879178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094153898 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12219782 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089527051 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13265521 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090389798 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130592554 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129830133 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10251939 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129956068 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092097061 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126985014 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102903789 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116729368 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090203982 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118014599 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130116818 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086908086 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114516424 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099092932 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11519517 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112173616 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136740399 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114939561 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.097980934 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113992931 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089243469 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113678076 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111872088 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118158155 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088652296 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120403129 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091462359 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111626131 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087540438 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116183927 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086628762 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114724059 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116082296 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08901801 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115686423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105167253 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.1146923 seconds)
  done (took 11.778064702 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089384915 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115765816 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090456004 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114302026 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089679753 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115277667 seconds)
  done (took 1.573523812 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112705573 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117192177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10362097 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11953583 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155220512 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103655807 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12946113 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123315508 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106749063 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126335219 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128350214 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104182288 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134005904 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120096822 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102411395 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119783876 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10313736 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124532466 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126823853 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095842948 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135885421 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120995568 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096781204 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130612517 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117396255 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095337908 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124850737 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10297534 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125897469 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123712589 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095701904 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117972186 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095022506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123029995 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129728416 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096064599 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119819224 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117936751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100088078 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117166242 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103612516 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120795607 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125741124 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093983201 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122289079 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120806353 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09361816 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124815019 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103091266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118906591 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118449264 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094511317 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11801578 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093303546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121125996 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121897225 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093266432 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129387599 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095418776 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121277117 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117939299 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093273492 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122615552 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117761629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10341575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118381027 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094906879 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120988731 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121101289 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095064458 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119169634 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092025037 seconds)
  done (took 9.154490302 seconds)
done (took 33.738653311 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687151254 seconds)
  done (took 1.644993989 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817652682 seconds)
  done (took 1.777630802 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.998142315 seconds)
  done (took 17.982287098 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.494091252 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577397698 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995774357 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179099756 seconds)
  done (took 3.203734943 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947860739 seconds)
  done (took 1.925647587 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281678861 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230734103 seconds)
  done (took 1.474760643 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763569896 seconds)
  done (took 1.737018618 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.358570154 seconds)
  done (took 2.321832795 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325655556 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18339635 seconds)
  done (took 1.479714147 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546314264 seconds)
  done (took 1.518385705 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.798589959 seconds)
  done (took 7.776067002 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268113937 seconds)
  done (took 1.253257601 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298996207 seconds)
  done (took 1.275519131 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516206401 seconds)
  done (took 4.495436544 seconds)
done (took 50.836067547 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098489992 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1258988 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101342104 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123566238 seconds)
  done (took 1.420757254 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100642338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12126468 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099439679 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120245427 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125611758 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095706906 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122418647 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099846484 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12034199 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096433911 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12014007 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120132046 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097956029 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122636826 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092991653 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123098142 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098989844 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120122719 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12382299 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095884243 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11788092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097248288 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123865447 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094436791 seconds)
  done (took 3.631241781 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09959467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119068833 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095442847 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117590531 seconds)
  done (took 1.417450015 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100049325 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142271716 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138913305 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100118798 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141954649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136363629 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091781273 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117418347 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093080912 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124532783 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090138824 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149473871 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136744577 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124451167 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101935949 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113603481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090896617 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136028787 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099006829 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125371219 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117311969 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098736955 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115148096 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.114684723 seconds)
  done (took 3.780839873 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168218849 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125998443 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137081434 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094800215 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159746529 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139538018 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087281712 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140178552 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087421947 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130155469 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117112256 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132384386 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12811918 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086833785 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112993438 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086885918 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127846163 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127034647 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090786759 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126603997 seconds)
  done (took 3.395514965 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096577613 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117003967 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087617373 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115954448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098580982 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120397777 seconds)
  done (took 1.621174109 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090373767 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113884827 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088875261 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113769844 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093648557 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114412812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088558552 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115466021 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088827735 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113859195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088831818 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115148165 seconds)
  done (took 2.211774996 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497030587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12016464 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119770351 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088349006 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121095467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088647946 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129434124 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091800577 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141279722 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088749241 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115480372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090049421 seconds)
  done (took 2.676764286 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232850999 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124599772 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283827057 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370053873 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153172899 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175891971 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279220238 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159780821 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224541732 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164816233 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200975169 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222182976 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151083698 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18900471 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13688479 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14369726 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203073037 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245061644 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152953483 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206803263 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225356064 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166655774 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179919286 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149700719 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13754159 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170807591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093970384 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12947165 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231874758 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175027176 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21181748 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159971065 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145464035 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207698193 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252338536 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220395625 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282169892 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133440506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149376272 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165480976 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261029342 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137417063 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201252907 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153434116 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130978357 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217277848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166580799 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175596869 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150577452 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138561267 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193338345 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237571914 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191584697 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137779513 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301911523 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146707306 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.199483844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192906661 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248939322 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199025329 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211546977 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094098051 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187696914 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216773681 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184308872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173864063 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206940526 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146495516 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197594425 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187741622 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164179035 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21963118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184779467 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139993871 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168224978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171327912 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17010168 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256043064 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209474286 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095191849 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168532816 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149232633 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132783778 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193331631 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097968204 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239526002 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143090718 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162828998 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213422191 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158726515 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15978182 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202357888 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227965997 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147646204 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082675319 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15373572 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155630588 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19143657 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139532411 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158237132 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1619 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130282198 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181470065 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124642387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183444395 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117650572 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172952842 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182385251 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126451421 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158961626 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150337919 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125489042 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19993918 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196881697 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141090109 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132809394 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208289935 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17663957 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149949155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176929575 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226869456 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116392146 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14942529 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225681307 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213937226 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138861397 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228322529 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155482791 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10723478 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131753354 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18004703 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153493804 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161404014 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134101953 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181515001 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23145603 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097730758 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1381368 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192228987 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132453102 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131399813 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161468929 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146836239 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110737917 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15081888 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151655656 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207558585 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177314008 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153339928 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165332805 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151380395 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25213088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14086694 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122937126 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147620949 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119405678 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191433156 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196805558 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130275435 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229098991 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171705713 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202352115 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1685408 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134316043 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176905966 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129358817 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092745503 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220252699 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166721745 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16028196 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194366149 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223847922 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177415348 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180777561 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197358048 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171805938 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164528159 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155918866 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111656221 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15999286 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168871412 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123181713 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142795284 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133077465 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145695233 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114790491 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134190733 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222028334 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169402478 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188517484 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158310164 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148459695 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179816476 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128374986 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174026378 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17637874 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148464236 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196468304 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21991246 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184777954 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143195663 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198518635 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121118258 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124458194 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114633446 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195227265 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106723662 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13413623 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162077214 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179605369 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178535538 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202319964 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21056499 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19683806 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189824739 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093960339 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167480235 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184951187 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174811187 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190866535 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138744983 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.14935061 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180311965 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158244767 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253739782 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167072661 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174416409 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233264724 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.121816498 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130763735 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151264145 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191668732 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152610015 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203239232 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119958368 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140908544 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160840365 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132603893 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159309388 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182202741 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161107631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213548948 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148850452 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184638256 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126180974 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162086228 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158878805 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164591279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080647574 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174340988 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230831294 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147944088 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167137311 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187439073 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130596917 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307125858 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239048386 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19415953 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136472983 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156255636 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161044489 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162459574 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172082602 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177739628 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157343198 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18557764 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159568654 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136429207 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139307823 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120977218 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149793567 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13062723 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148435182 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175763403 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139564694 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184735879 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161875662 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158710671 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171064473 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150302749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143104405 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149228521 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2130834 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182360599 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237171799 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150528988 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178715824 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231948033 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0979233 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132351307 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132223838 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178466559 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107801046 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219587567 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186170999 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22772504 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182884686 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191908418 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13937911 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11889593 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12901395 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199021513 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206908972 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151189084 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157880698 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229755981 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118061091 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13238014 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176688603 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292079024 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141834933 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221145066 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080419336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278130984 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125047725 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104173032 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162488162 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234593008 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13564999 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187420828 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171010031 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169607609 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16396682 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149263666 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189417304 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241014637 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200360758 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178106387 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133093529 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155533667 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174309621 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218852249 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156648191 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112264709 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229543374 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194155308 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194183438 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14111788 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167597036 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167024214 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157070192 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21374583 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106059726 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23348088 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13421452 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192899112 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152991783 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143161998 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174800201 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187313569 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140382398 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214656282 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183161225 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134402901 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104901824 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168935141 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206997479 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154993358 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099074546 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206283261 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097310022 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21921457 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228745181 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134265404 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154608353 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146177704 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106791561 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153649376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183979906 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112303916 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163259953 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200896054 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134837654 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189571478 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230132073 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168822891 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172458797 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144359625 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690660393 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131043162 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192771032 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158553638 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233488901 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148792732 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172205944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157913555 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166962858 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193525783 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160375824 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23148255 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217593485 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178463633 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103411008 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157403779 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190099251 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114502792 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149597662 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167424283 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158282771 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153927902 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204919318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171495672 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106318078 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140090976 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197849543 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158960994 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209807046 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179121348 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109379741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20020053 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187191153 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132214598 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179289799 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235384389 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113106152 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151149596 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133348786 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15704383 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261267398 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096097528 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232048683 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184148782 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158637942 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167342118 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147192521 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2188996 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156433588 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184917804 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146279944 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15897359 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155451908 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136627062 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101706643 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155408714 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166115083 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149286061 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157722124 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163937166 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194442148 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094830241 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14357822 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315550437 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191968537 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24210462 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10633135 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135521447 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16153835 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150708632 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176004666 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176318017 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135009568 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135045022 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108203894 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157304454 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111599627 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155519531 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192403078 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192755178 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204857551 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135033876 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276611046 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111122382 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15532076 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114053979 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103877641 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149340049 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145605825 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157438068 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191121424 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262553479 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14651405 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131265597 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148957469 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098153561 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135386988 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163725537 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163574718 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176416837 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144749735 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080375937 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155975604 seconds)
  done (took 82.759675982 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161747916 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132037393 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145732632 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201864891 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175001889 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268880912 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209746448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252071298 seconds)
  done (took 2.623244859 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092317472 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14539688 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157028531 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131677631 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090169453 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118649974 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34180692 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131167185 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116939366 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120294594 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172342707 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093294978 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545645119 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090671961 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119602649 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107533835 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091612798 seconds)
  done (took 3.737748811 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.472624749 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.721814598 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.510090792 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096482816 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.134457625 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111874327 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.716351117 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19628595 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113950731 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485378442 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.783357478 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165146721 seconds)
  done (took 18.591565361 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116431742 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136423829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.121966248 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151754544 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139639782 seconds)
  done (took 1.753334936 seconds)
done (took 130.592236291 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104114263 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400960344 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071163546 seconds)
  done (took 1.589626635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107253502 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135832275 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108501722 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135267752 seconds)
  done (took 1.581487606 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097391757 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125707231 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107982234 seconds)
  done (took 1.41957449 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320680056 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189184747 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167994365 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105806111 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129245496 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102029783 seconds)
  done (took 1.426187779 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096576291 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12691925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096813575 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129187549 seconds)
  done (took 1.539074169 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093901475 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070433009 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100249251 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074220147 seconds)
  done (took 1.425084489 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114262158 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131148522 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102605007 seconds)
  done (took 1.438796596 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128016479 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138383893 seconds)
  done (took 1.359223888 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105060548 seconds)
  done (took 1.192433485 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116438418 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16815836 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187891318 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164235984 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233850495 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164283866 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140564293 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113941551 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130909719 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143743591 seconds)
  done (took 2.65618365 seconds)
done (took 17.492930461 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10293382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.516459675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411005556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115761405 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724225361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379282074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03849973 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145701004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164069806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092277472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138671826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67171414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064953265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472654723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376143832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675343619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120964831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119249824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092997543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.024900617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090997791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120716281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091434644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703422497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424918823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094673075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370340943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091930514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125621853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381322576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122073096 seconds)
  done (took 17.16977667 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094171653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173590035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096906951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137230717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122601355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093646753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12375254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091761049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178041409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122632986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10980637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120900733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12534559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094431802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141524927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091754214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124138727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092117014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12192239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120566466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111437537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120377928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094163752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121319292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092490362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135049683 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093284039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120580109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120106333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098321116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12646883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093432412 seconds)
  done (took 4.797001157 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140042813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18294761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128020484 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125931574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168606286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123636191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198756245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116936517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181200509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122046183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139072827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092759058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156411132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093662244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142066269 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119992783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096305724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121660887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091871531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122663972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139072664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093051853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121874384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092901327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122248912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10737049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123319621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120725034 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092985235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126063637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099782673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123738312 seconds)
  done (took 5.128421755 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096762892 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126198627 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108656752 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137904932 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095322959 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125275233 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096485908 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123872868 seconds)
  done (took 2.007635886 seconds)
done (took 30.19269222 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110409156 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126441551 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106291106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134427237 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10200561 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132509294 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091124771 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133486466 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132913431 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102326763 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137046077 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.090458021 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122664963 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09209911 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135027537 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096505322 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132856537 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101761138 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133047045 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132301525 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094431076 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133112162 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102561662 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133939647 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103812753 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133300542 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137085595 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098867656 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122814856 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094016971 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124880893 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103008199 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124266466 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103953977 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127298431 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096565986 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123420959 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094271619 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132702095 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132659989 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099210313 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133170933 seconds)
  done (took 5.98609031 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106757904 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139628091 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104280846 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08012608 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116821974 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08036756 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137847171 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079297589 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109856695 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106696506 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073535688 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106417035 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077656759 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101490291 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076625842 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075167291 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108221371 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075341623 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075332175 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105588293 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079393219 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071916008 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108872505 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077695828 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073821438 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110502706 seconds)
  done (took 3.563449694 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099885139 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133995773 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112190937 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18295791 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159610269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098341094 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13148038 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10987213 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138192304 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120684149 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094960827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14903027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108729453 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129017203 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090482529 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137379266 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135828281 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093756072 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127776372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110853394 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137916591 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102517211 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140700397 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132522731 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091462952 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122965797 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096118534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134371068 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096610888 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131308389 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096030069 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125251384 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122364021 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10442823 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125356434 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093614246 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14237856 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103405736 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130686761 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092317743 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130449077 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122044293 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113230179 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161225939 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091106549 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129705905 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0948815 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132045824 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121098751 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110113809 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131739673 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091074579 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125436585 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090855528 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121026688 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106428206 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.1240965 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094385621 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13078741 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126556436 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10483799 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124492587 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108357982 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121806855 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099775409 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122192722 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092211297 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120155842 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113604473 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123727545 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160692338 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093756131 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123741135 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101004244 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130459871 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128081584 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09328122 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137369601 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101825072 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125663914 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101745471 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125957024 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095249859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141273833 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094745448 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12438899 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092397188 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128621024 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123152216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093823896 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135796317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091827793 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124990331 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109845182 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.1217703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093221272 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128036693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126085894 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091872326 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136602845 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097047699 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122689281 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102503171 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122149306 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095210837 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132628752 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126157209 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091881799 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126447459 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099067474 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122930251 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093670748 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125211987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094367666 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132610884 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098766603 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127409206 seconds)
  done (took 14.768321135 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22757494 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224270917 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236020528 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262001979 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135849471 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144810585 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20973146 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.12323612 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124166202 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159344509 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173456342 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179651308 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167879669 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178062023 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168352401 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092113874 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142213851 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164095946 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214208217 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257225946 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143921841 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099487995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160015768 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159021123 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137189295 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131415935 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109227268 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134247708 seconds)
  done (took 5.778217148 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107643619 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155054409 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098473873 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14431464 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148747457 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092238092 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127853639 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094814407 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135830814 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13540982 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092410133 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128546674 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099188927 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132081371 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123272095 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102845857 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130901594 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094956934 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126454141 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096813474 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133551148 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100976112 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126831271 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091212734 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132368979 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120887581 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086814182 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141615428 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092189606 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144537662 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12037126 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100011974 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136422044 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093021502 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122848241 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094204202 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12439321 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095392725 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124700903 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091740963 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122621615 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077175437 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122660261 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105793426 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128764153 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079894286 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129764324 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098039593 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123998941 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120191444 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095964818 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12574583 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095968907 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129823448 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096505044 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123909273 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096280676 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115544874 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099595591 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125532925 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084581138 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091227225 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128831681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117335126 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101474363 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127779127 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091050339 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125344033 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097323726 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129819938 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094627386 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129801069 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09126579 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125877516 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095507588 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129029292 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096717972 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122239256 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09203282 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122941556 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07478952 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123233586 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073613769 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126395612 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090580731 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121612981 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095287531 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129527041 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13786293 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095322232 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131629566 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095016129 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122159372 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095667475 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112619837 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095766025 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138991275 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140532474 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092890017 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120602464 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107521092 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125078202 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091624833 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105550465 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102069014 seconds)
  done (took 12.921912922 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126565581 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153878763 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094592573 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142155981 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156803003 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158150567 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100520984 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131262922 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094720038 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141674231 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093188827 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132400709 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093054474 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136809779 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156506421 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10386739 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124845058 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107789043 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127438925 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169720908 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111059293 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142013949 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110793811 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12351885 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098391912 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140577994 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160308675 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106897939 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137641418 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142155525 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107374195 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16015181 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112535729 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128320456 seconds)
  done (took 5.465617805 seconds)
done (took 49.581343362 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208201661 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.438355521 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196884078 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.134407005 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.210262834 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.202001374 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211677235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198975149 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.357928112 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204995451 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.459040775 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.855784768 seconds)
done (took 58.807679601 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.255295677 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334326796 seconds)
    (2/2) benchmarking "String"...
    done (took 1.467111672 seconds)
  done (took 3.929516827 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.552249002 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.149820771 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458497824 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199049078 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200508715 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496159524 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.851504081 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.565302892 seconds)
  done (took 28.04900168 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.209282764 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.286018994 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.224799693 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.208278517 seconds)
  done (took 6.057776846 seconds)
done (took 47.973901133 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221632725 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.238989163 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.21016159 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.188847724 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314690492 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.227279133 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.592018711 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.24837446 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221746793 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187963231 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.222183573 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203419826 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208416579 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.595799346 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.202747585 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201660709 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.26877056 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.708094943 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.610759206 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.213316131 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.221700435 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.245376565 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223935508 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205489392 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.242413975 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.201318659 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203685172 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.232035387 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.808854985 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20233259 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.219681404 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.788503312 seconds)
  done (took 191.011692074 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20257333 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.296376618 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.386441516 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.249909061 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.793424422 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.400573502 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.336697115 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.864663605 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.22059723 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.221919933 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.471164241 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203988161 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.547489326 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23850578 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.232820625 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.27363905 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.410757663 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.546489402 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.251105583 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.373654947 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.204447257 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.578196302 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.510621796 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.416108828 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.238882309 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.251214081 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.220918065 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.233844947 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.395141253 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.340831492 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.215995488 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.231180766 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839345289 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06195747 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225914223 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.23468947 seconds)
  done (took 150.853233768 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.25388884 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205730837 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204119818 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205068005 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.237591733 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204850318 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778321455 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797514718 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710525558 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.720750452 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63815869 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.472284275 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20469916 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299827655 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217763838 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205500442 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221225703 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.250675137 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206903683 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205855251 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796537063 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223546915 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.301030629 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389215886 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221960031 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239814609 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597384665 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206171839 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239173054 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537866589 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.256630492 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206329799 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620691892 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.046714433 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320972727 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207870165 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24035397 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20778855 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487505998 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207432954 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207460615 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.210044999 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907075945 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212138119 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.783375369 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207875246 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17313275 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207258605 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208497083 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.373935027 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210819828 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.910583425 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227961324 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207687208 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210478907 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207113426 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206333607 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241469916 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.42220202 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307156935 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226821766 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212359552 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242435162 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208112902 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.277034003 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212943719 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.594346633 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270003643 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.436213847 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801396803 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212497435 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308320194 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331103063 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20844176 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209891745 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208911859 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20823895 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209538956 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.321449504 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209603536 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.636661621 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386759099 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227493108 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.651389595 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311014808 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209721345 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61592278 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214465859 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209054992 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979204582 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307447412 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208763917 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.210215499 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209987468 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209354687 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642075171 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806263217 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505594572 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215405003 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.468383806 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214958863 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210091525 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657765192 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776991837 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.867540766 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211745508 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322749877 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388765295 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228307829 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210264697 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.648267403 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.215969204 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.270081399 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210972174 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609543195 seconds)
  done (took 367.502264318 seconds)
done (took 711.747969503 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.799101866 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.797620379 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.910684303 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.792050479 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.757074236 seconds)
  done (took 10.194020425 seconds)
done (took 11.332482656 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401037127 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.400118566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272274343 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402866935 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240006512 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419644989 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382448172 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236848444 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313123851 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293861965 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311487962 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265460865 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239134958 seconds)
  done (took 18.316182996 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526858716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.521064845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277829838 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528679016 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252635519 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528150704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410421002 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429164819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433036619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244597815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227038243 seconds)
  done (took 16.51918302 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560160039 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533302696 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280849276 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524779698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253335924 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519853999 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415818984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430278572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427916843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247828652 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227592961 seconds)
  done (took 16.561066854 seconds)
done (took 52.534653753 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.22185987 seconds)
  done (took 2.36118121 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257626157 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.422173094 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242008758 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230299816 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223955606 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225745665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.229575758 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222876349 seconds)
  done (took 11.196435518 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220778279 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222156485 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222431803 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22283081 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218102746 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218869709 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221689385 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22416645 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.220407911 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.223374894 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219571461 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219923851 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22026503 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.22302462 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.222228848 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.220641434 seconds)
  done (took 20.681687631 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222058246 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221192306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219532692 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221226922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220243034 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.22126027 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220669666 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220628025 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222092961 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220848297 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221670097 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220918376 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221582536 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.221430271 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221940405 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.222686944 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.222198971 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220607721 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225970962 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221250968 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221928643 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221887011 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.221063579 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223027231 seconds)
  done (took 30.462489823 seconds)
done (took 65.842227532 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.391067073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.952881647 seconds)
  done (took 9.487821219 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224898461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.224267639 seconds)
  done (took 3.593612955 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224779516 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.225773293 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224747482 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225798921 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224789718 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224445649 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224514534 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224818696 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224560824 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225459978 seconds)
  done (took 13.39411112 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225512894 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224338604 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.223107591 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225176567 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225338876 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222902519 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.225106386 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226429467 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.224630506 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.224589479 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225884129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224796164 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225853265 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223552455 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226301387 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223252407 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222769272 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223953031 seconds)
  done (took 23.187779433 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225519469 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226554526 seconds)
  done (took 3.597437336 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.223732634 seconds)
    (2/7) benchmarking "second"...
    done (took 1.223804501 seconds)
    (3/7) benchmarking "month"...
    done (took 1.223602508 seconds)
    (4/7) benchmarking "year"...
    done (took 1.223231719 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.22402243 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224520353 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2227032 seconds)
  done (took 9.711439808 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227646965 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400001337 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.480348831 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832131411 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227383848 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229623215 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.065455953 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230641674 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232490109 seconds)
  done (took 14.070495098 seconds)
done (took 78.185267766 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.25595839 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.239682584 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.44437387 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.234664588 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.257719236 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520974798 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.262854226 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.353296702 seconds)
done (took 37.715531111 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.231862576 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.213296965 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.05093178 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.208453318 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.256416086 seconds)
  done (took 18.877473542 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274022666 seconds)
    (2/2) benchmarking "read"...
    done (took 1.556657201 seconds)
  done (took 4.977105959 seconds)
done (took 31.232333809 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226115317 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22905353 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.228848929 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.226515584 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228117031 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.225039734 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.226376929 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.225632723 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.228423637 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228703973 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229633743 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.22838572 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.229755916 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229809885 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.229416851 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227605323 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224991476 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229081604 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.226105767 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227163478 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226873723 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228819988 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226355038 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227578446 seconds)
  done (took 30.613017583 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229540839 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.22849671 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230312873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.230245218 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227067349 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231934137 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23087071 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.228490907 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230682562 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230807024 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227950088 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.228855932 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230770826 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22814829 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230915675 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22798694 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.231011322 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228293823 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230267808 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228197259 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231142025 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229052358 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228197393 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231873443 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.230662445 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228562354 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231947767 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229148101 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231488864 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228500158 seconds)
  done (took 38.040225504 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235926677 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.238118689 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230552915 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231875268 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231160969 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.23173625 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231910449 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232415336 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233152901 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233158626 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233174036 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.233039002 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232608969 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233242087 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.232508246 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233670116 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232877282 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232840492 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233186292 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23343681 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.233258705 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233444528 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233856545 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232920526 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232688558 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232693684 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233805236 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233620559 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233145235 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.23285906 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233452969 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232884835 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233477923 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233700523 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233404838 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233616538 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.239035484 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241224136 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23325724 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.233329576 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234051229 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233682836 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234458353 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233914986 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234219399 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.234740185 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234310194 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233497149 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234863012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.23566518 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234222194 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234174553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.235251953 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.234949978 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23452083 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.234964405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234381318 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235435228 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234574619 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235241724 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.235630173 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235016593 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236061935 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235696038 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23571808 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234820512 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235386549 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23580066 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.234584344 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237066456 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236033273 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.236877026 seconds)
  done (took 90.012182832 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236591728 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233791506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232966924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234346396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232609498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2364329 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234384467 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236682741 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234889859 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236884221 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236794626 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.23558305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234377299 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237025228 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237097669 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234367628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23769045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234890322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236873859 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237287517 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23664471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234745856 seconds)
  done (took 28.337671838 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238393014 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23883597 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.235277969 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236204872 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235212826 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237438288 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238318832 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240188769 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239006292 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235777376 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235528162 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238503489 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234658548 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235589636 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235993817 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23772043 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23889765 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237412261 seconds)
  done (took 23.425441553 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236289823 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.23591491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237842376 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236805988 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.237172706 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239166183 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236226406 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238946384 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238621849 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.237011837 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239804962 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23952524 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239256605 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236477724 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238438628 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237009239 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239701211 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237204532 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239124952 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237094749 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23838616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23946683 seconds)
  done (took 28.391844155 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240300607 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240155183 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.236547887 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237999698 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236447088 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23929882 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.240138272 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238045236 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240899798 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.2407799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238298674 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.241664251 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238165963 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23832097 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.238180777 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237541955 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241104814 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239211952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239641444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.239164237 seconds)
  done (took 25.940040615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241873814 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24241354 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242687206 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241985798 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242075508 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242050567 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242078735 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242473387 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241336146 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242557225 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241103973 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241812852 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241636251 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243034682 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243878606 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242343072 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241891323 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242056174 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24396274 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243842377 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242700422 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243029764 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243949675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243344731 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243879887 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243345873 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244306622 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243841088 seconds)
  done (took 35.955067842 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243567609 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243325034 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24119895 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.240223249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.240973039 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241097007 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240857734 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.241166081 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243776763 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242114973 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243706619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244619991 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244218245 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.243935498 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244704247 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243939405 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243903153 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241378978 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24247703 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241753462 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.244614414 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245162743 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.243639418 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242762731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242196641 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246373433 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242249061 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242744749 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245252783 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242335441 seconds)
  done (took 38.452470378 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.263589145 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262818811 seconds)
  done (took 3.688649929 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.242886358 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245473991 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.245020221 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24328144 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243197475 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245108992 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244915313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242441429 seconds)
  done (took 11.115811946 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.244317831 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245745327 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245979309 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.24587172 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246145584 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.246054502 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252229801 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266962666 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245709615 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247706045 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253587693 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252882942 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248044882 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245893482 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246037583 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247939841 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.247013302 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247414428 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.247965285 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247913271 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248442594 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25002904 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250751311 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.245732926 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.248961614 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.259459202 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.271910913 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.247156861 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246977716 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251422423 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.24858678 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.245666916 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.248287707 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254954227 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.249223222 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.247351318 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257498608 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269150101 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253448732 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270105339 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250078537 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.246282077 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248250589 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248720505 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250261334 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.247778604 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.249705369 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.246946381 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247581084 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2528412 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.25495314 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249393402 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248205945 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252920278 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250919458 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256240859 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268479293 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252795803 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258720229 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259742536 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.283243553 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275506386 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25133819 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250338313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260470985 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274212021 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256357973 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.268427087 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.247226229 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.250581805 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255782514 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285033067 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277199793 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.249514999 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251548238 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251578976 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251750507 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250750803 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258535329 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273749275 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.250671294 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250851589 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260875481 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274169111 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25099883 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251640607 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252685144 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25236957 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253724862 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26213834 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.271742557 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.25294577 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.2522071 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251554924 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252260697 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253071242 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252777254 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254317944 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250843897 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252431625 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252248406 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256096778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2617479 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25285699 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252058145 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.261226504 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.273716201 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252575234 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.258842945 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252197084 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254006776 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25513735 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259490718 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.251454503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256192119 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262065465 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253615276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255094453 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.253204004 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254032005 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263489635 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280143106 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.254199435 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255332854 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.259101266 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266228173 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254038133 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256303881 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252769017 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.252043193 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25294963 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.255829516 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.255319493 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255446382 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254827539 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257278905 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252705956 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.255155403 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.256315787 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254778348 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256340838 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.256174792 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256707728 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257241653 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.255585291 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.25607189 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.260301687 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276550561 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256893708 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255729203 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253571078 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255319644 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256540498 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256050545 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25565993 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257531064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25557357 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.255939553 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256903012 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.256449643 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256203221 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257221287 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26088695 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256038724 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260741417 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.256833007 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.254587581 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.256679397 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.257585121 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257283426 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257522757 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256124267 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.260387164 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265893527 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258049039 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258010516 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.259165825 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257977255 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257330928 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259268597 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261315153 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.265697045 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.257966786 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264746731 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27819851 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257582285 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25834478 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26053148 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.257899279 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258095093 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262968513 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.266040793 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271923722 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284168915 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.260364196 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263146886 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259281715 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.263704697 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262955671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.258789383 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.259468467 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25852926 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259135209 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259488234 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260966787 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.25776248 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.257718201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.259268242 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25988815 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.260613865 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259595366 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.261109931 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259930738 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.258221808 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260286518 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259881482 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.25957482 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257922951 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259450338 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.260483304 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.26150322 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.261313158 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.266332272 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.259001506 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262069632 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261649769 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260067703 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.260361136 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.262327234 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263101901 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260845672 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267172823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280524838 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.262687276 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267526373 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.281212437 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.261873894 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.265351814 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.262128364 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.260567045 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265160453 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270256215 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263369523 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.262114885 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.261828186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262003086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261865998 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268730372 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.28140826 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.263062058 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.262728805 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.263653388 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259890115 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.263308825 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.263129014 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263795562 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264055208 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26358142 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.263440069 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263504027 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263268827 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26359629 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.262573368 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265523094 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.271679032 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.268101317 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.264436431 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.266145907 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264316195 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26818256 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.264441687 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.264956033 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263650117 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276705576 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290086473 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270147612 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285248748 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26561507 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270919273 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.287485715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.268618486 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265909095 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266219349 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.264851335 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.26443669 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.262364744 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264743619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264796289 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265817049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266315611 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.269873326 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265322892 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265283464 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.265616351 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.265266776 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.266201559 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.264683822 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266462671 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267790761 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266495748 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.264977508 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26691238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273745451 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288004653 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264897974 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.265227131 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.266419034 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.265772469 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.268709906 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.266299232 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269551765 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.275001657 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.268813172 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.276158194 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.267311176 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275808825 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266834531 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270223315 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275191975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.263212951 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265692122 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.268130547 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.266651273 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273667319 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.287300598 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.268178399 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.27106372 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26717021 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269272335 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.267740819 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267985914 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269026473 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.267337162 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276046198 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289274469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.271459361 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269624518 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266237842 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267798982 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268428877 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26755545 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271446326 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268450824 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.269433871 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.268901425 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.268631777 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269081129 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.268097012 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270225255 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267702644 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270063201 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277497368 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294909449 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27324185 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.269286563 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276179278 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290722302 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276347407 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290605027 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.270074445 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.269687822 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26967866 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269672516 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.270240221 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270588477 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.271025751 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271952175 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.274663428 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271817136 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.273047509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271842929 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269996845 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.270789546 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280233139 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294531924 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.271261102 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275372804 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269531324 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270983612 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275072586 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.270857221 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.270712365 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.273590508 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281010002 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280588093 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.27197678 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27162538 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272041271 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271905914 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.273152212 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27155368 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.272656741 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272088572 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271931653 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.2715845 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273787442 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272098576 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.273489521 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273535351 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274209892 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281843259 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.294245941 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27276921 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272619376 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.273877829 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.27355023 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272734397 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272057663 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274509395 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274707233 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.274291144 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27909595 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280128202 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.275238856 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.273954085 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.273734804 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272979484 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.27316897 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27396368 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274263159 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274080719 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.274692838 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275002671 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.273971731 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27345739 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.275194405 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27528315 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274761628 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27719237 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281234334 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274842408 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.272046071 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274482467 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275052544 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.274843562 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27626684 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.281465166 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300238393 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285704437 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.283074019 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.278030393 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.274770693 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277904028 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.283439081 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.27413504 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27758088 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274930304 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27481197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275570594 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278551319 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276829945 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.281164633 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29525221 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275429606 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283285934 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295891702 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276870767 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276165743 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.280464007 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.276862193 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.273345 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.277315819 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.275530063 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283595339 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297303216 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276075289 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277185151 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.27549436 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277622447 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279554055 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277010757 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277654023 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273955036 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276216763 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277409316 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276597505 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.274969805 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.277305475 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27585814 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.280479388 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.283022918 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274659336 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279811074 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277839007 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278984175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27827899 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278313541 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.274974693 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.275199407 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.277346006 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278875679 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277506757 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279758437 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.27786159 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27927367 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.279068112 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279016529 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282084252 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287838361 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.28692047 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.276423801 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.278903326 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.279057626 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.282146452 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278355364 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277997011 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279600603 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.278951567 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.279057009 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279387875 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.280060111 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281825903 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294600359 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298707852 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279949993 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278921444 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282591233 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280745403 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.277633383 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.279979471 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.28168437 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.282414746 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.288599977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.280735843 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285656948 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299710712 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.281582353 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.283923853 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28415177 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.288492446 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281925343 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279692924 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281004001 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.285906411 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.296237789 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28242397 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291449071 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311400406 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.302723315 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.281987188 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281907758 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28061029 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281591323 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.283127258 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281520089 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.282615685 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281561009 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.282022471 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.282933 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288311102 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.282849292 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28332454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.282259789 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280701237 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.282796183 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28037529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282259329 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282268143 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282507245 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.282303143 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.282447361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.28404254 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295117084 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.311564229 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283151587 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.283462824 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280079844 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286470634 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284737974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292732826 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290417884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.283838987 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.28293704 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.284388728 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282860235 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281964995 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.283203986 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284060563 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283549806 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281977123 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.295635302 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311676308 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.287820777 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.282831808 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284682084 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.284729496 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285758299 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283877586 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283178542 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284779973 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286268643 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288668615 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.285752736 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.285780975 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.288168293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.293038438 seconds)
  done (took 757.310402714 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28164449 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283983719 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282416401 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281967255 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282631999 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283458872 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282897138 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28413167 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282127188 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282138525 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282886244 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28305926 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283449633 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283108008 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284360665 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284125653 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284076818 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283145359 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283046403 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284416628 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283276556 seconds)
  done (took 28.147291521 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.287087167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.28341663 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284063987 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287737479 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285331952 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287762613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284567221 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286380433 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287620712 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284345041 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286134297 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286857629 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.285153746 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285362968 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283657651 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286389607 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2881426 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283262921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285300699 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28531477 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287652275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284689385 seconds)
  done (took 29.487856508 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.287887765 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.289697593 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285739908 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.285583525 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287778067 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.285126075 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.287600253 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.289199762 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.28762134 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.288871125 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.288044211 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28922727 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295105933 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292298214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.290670628 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28909252 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.432654782 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.289080143 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288484921 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.288192223 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.286541725 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.293993523 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.307735889 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.286754316 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28713043 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288902633 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.289925178 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289545207 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289325958 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.290295678 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.294535553 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.290066291 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.288504172 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.290171256 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287567184 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289793933 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.294265852 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290406547 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.287209444 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.290255907 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299067275 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.311975867 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.289151295 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295797877 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.312776286 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.29119898 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.294329873 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297856539 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.288584993 seconds)
  done (took 64.614973034 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290529988 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.291208471 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.288841611 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291375684 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290887633 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.291232727 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.291441326 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291615299 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.289199666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.290129791 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.291178164 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.291029179 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289517215 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.291987585 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.291313845 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289831175 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289241583 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289314716 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.289274009 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28914966 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.289538352 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.292144802 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.292319972 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.290605018 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292754879 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290037565 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290405764 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29253428 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.290789661 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.290489694 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.293088092 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293595882 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.293203875 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.291885521 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290566195 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.294211318 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294477182 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.290366122 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294298919 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291113865 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.29403926 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.293642635 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.293258042 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.29329372 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292424623 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290893192 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292141907 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.291853067 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291442546 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294983286 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.294243682 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.292249188 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292960041 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.291617302 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29465563 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.294855957 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290470233 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291298273 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.293883914 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.293219294 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.291089587 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293773244 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291988513 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.294785835 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.293978638 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292576755 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.292416491 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295227669 seconds)
  done (took 89.056825787 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293405108 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.294677729 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293867519 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294770971 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294692168 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294134293 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293664331 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.294759354 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294158526 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29593022 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294850611 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294716525 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294816986 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295523263 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295697423 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294530421 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295324122 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295363294 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295216814 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295324626 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.294388836 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295151173 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.295419387 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295819208 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295697677 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296411206 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296739077 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295005844 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295719648 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296164809 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297831073 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.295748053 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29627936 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296196888 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297257914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29691282 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295551352 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29683556 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.295993696 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.296504333 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296403001 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295095506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296200296 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296675557 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297606801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29707043 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297431468 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297416231 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29734009 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298453371 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297306283 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296628494 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298440201 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297696917 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296902321 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.298862293 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297720804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297221238 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299502925 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29887615 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298377771 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298602967 seconds)
  done (took 81.572892542 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298312678 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299008921 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.296194903 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.296754908 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299363027 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297582526 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298211476 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.29900438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29897161 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299505342 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299121691 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29654849 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296592257 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299609655 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296621991 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2969658 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29696681 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295998257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300016168 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29681909 seconds)
  done (took 27.170573429 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.2974898 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300538097 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.297349661 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298228104 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.300473171 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297453409 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.298998333 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300183365 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297358316 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299908183 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298995565 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300416471 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297073712 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297155881 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299371548 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297825671 seconds)
  done (took 21.991865661 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.296463551 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301385729 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296347362 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295655087 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293968656 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294939115 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297694922 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.293527114 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.295204471 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299033801 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296215545 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296719929 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29546663 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296402001 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293530372 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297315335 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.293764052 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294857853 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296990679 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296048687 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29527854 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.295568992 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298138652 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298630433 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296211785 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296110941 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296143826 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293941139 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29406131 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296805942 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295105865 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295287767 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294054087 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294684433 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.295556322 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292839047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298315336 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297024021 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298211139 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296768856 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298061486 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294560965 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295964433 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.29646327 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29392394 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296474131 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295478876 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295350909 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293444385 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.294421333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297271437 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296378455 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296964787 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297446004 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296135349 seconds)
  done (took 72.49219681 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296210745 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297895849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29386314 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296866619 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297426158 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295840249 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297133789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295497138 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294901043 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297035925 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295577742 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29789384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295322549 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298317537 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296543326 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298738404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294788368 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294541433 seconds)
  done (took 24.544664333 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295414542 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295591916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298777706 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295324352 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296338197 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299319547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29569024 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297829938 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298474603 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296453764 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29563493 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298408863 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298416989 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297984729 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296654709 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295477102 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.299313409 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299290886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296481366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296482973 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299844287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29891228 seconds)
  done (took 29.752423932 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.299095918 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297956785 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.297078101 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314185687 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316900885 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.320459183 seconds)
  done (took 9.057897377 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306341098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299035955 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29680379 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300475294 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299425202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29614095 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297105761 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297273178 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297773545 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297488881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296901345 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300358053 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300664115 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297963691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299356244 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300942498 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298290042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297281223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299399094 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301465237 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297753147 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300022441 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298787696 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298207642 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298947925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297663068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299711841 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29747852 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297882313 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301512113 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300994097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298234093 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301255275 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29922374 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302006755 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3028097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299483053 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302358566 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30290121 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299651332 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302627131 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302317369 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30193709 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300302947 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302689229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30028431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299895862 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300002461 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300138107 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303877629 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303062103 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299901812 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302646243 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302672146 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301509661 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30301285 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300886196 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299900396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302994742 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300533929 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300793505 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303091331 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300263686 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301499308 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302688981 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300400037 seconds)
  done (took 87.054512804 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301723353 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300832573 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301557329 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303486768 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301196373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301817665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302436219 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30119108 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301709925 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300755983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304201171 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302851292 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302216403 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301871404 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30229636 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301987679 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303095075 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302679706 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302363049 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304489396 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302992878 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302068554 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304314113 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302763568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303279126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305058193 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301897513 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301964408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30392227 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30175554 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302975136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303238118 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302836174 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30265012 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302867522 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303013646 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304376466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303823611 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303330152 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305728557 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30312818 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3062094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304201083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303823486 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303362459 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304533545 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303706496 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303662804 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303410712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304265826 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304274684 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304157436 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304895361 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304653946 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303852011 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302736488 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303145699 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304396657 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303405302 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306700341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304771237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304313932 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307498182 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305467054 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304515593 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303988628 seconds)
  done (took 87.242135301 seconds)
done (took 1764.616651753 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.301021042 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.3178511 seconds)
  done (took 13.837329243 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46782975 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420950006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303723433 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.299665561 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30407024 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.327538898 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.324083332 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303213859 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303904149 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302459754 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301375576 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490662743 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.357582626 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303152413 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.302056115 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.397999714 seconds)
  done (took 42.730665565 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330825578 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.309855191 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.42504725 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.328079768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.332095109 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.500680969 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.364837131 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307874313 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485961127 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351225829 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.921520055 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332397101 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307518675 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.45419166 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.327882143 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.499286715 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.565974391 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.92473717 seconds)
  done (took 30.287662896 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.774940138 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.31364201 seconds)
  done (took 9.307214003 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.327898172 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309769221 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309049179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307184155 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.299713487 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.3011363 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306980319 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.314961557 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.146372154 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444436849 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.309684409 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.316460695 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.328467821 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.308667128 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305692433 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343352554 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462656611 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306768888 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305795075 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315413132 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309001102 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.429350613 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350420768 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.310641344 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.440488283 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.145929775 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316062876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.314931753 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441151484 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306847587 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.3077128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308083931 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30843688 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.92009197 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.81249888 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.323681591 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.35019246 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316354295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.306122794 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.496956021 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309590252 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315525755 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.300183581 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.77704005 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44390781 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433034792 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.576132499 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325739422 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309568669 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370128298 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310183906 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307863909 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.335554517 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.065891858 seconds)
  done (took 110.588752114 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.351673282 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688456712 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46992334 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324268751 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.001495207 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.080829931 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321838167 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.597435758 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338500908 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299514508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.595977738 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821707145 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.326914055 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.341722592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81136474 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314761013 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299857481 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.092334838 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.323505322 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.298657355 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800326977 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306781297 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32414358 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.421926245 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338461057 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769711118 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.738422841 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.755670538 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325769396 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.298641661 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774930504 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323687777 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.323528852 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300255535 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562933786 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659721759 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644999575 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.316023177 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302862441 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299132265 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.314237864 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739256952 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.647918624 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313675638 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312283589 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761626758 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.313320434 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.296112901 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299559548 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504563954 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.007502445 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302241324 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.659333385 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.303187712 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.588754786 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.3563921 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.383435954 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773983806 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314452786 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.388783464 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363258466 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298262706 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30472969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299884034 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298067009 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637925898 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.710540233 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299080896 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.6367716 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.770465544 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.31494039 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82644642 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.20950181 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308892521 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.347350845 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.304765183 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.891897451 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788654096 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31432676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.298157418 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.623472769 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313831305 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.577337965 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.31955878 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299740761 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814909623 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30605113 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.316470717 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.302946604 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.306246297 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.076089159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305102244 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.581477466 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.347028027 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299294173 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300637004 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.322012919 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299378162 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306273624 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.301411971 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82229697 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.326075559 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.274505112 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323335102 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299377207 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.325516979 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.30355601 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301636267 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523277451 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.785890689 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326087645 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30016111 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.300231909 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.30783963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.440047864 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.305594076 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599569752 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318617279 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30014769 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309922736 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04214106 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326249444 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300682517 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.324094424 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211876594 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.511255189 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325344345 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.318188845 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30272376 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.318718455 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.51141207 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322329404 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.32013 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303766082 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002859532 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34128158 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.337435597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.654167427 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.30594806 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.196698347 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320628062 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304126938 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588587395 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.568480354 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612775531 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303918353 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.318639819 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.99073825 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32990185 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449041499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325888536 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28983603 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500409615 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553971964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305195481 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.891344691 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.305891105 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521516725 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308667507 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.602963243 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789856601 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319984201 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.310420508 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008734652 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002703521 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.064003269 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.304381762 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.580733848 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.284602761 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.782401619 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.304245876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30590641 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.894921498 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309767554 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.309387033 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.305395064 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.303394046 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36003767 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477581289 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.503919282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30876077 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749429485 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365992493 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305948734 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.31052824 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307261192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.652016375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378208439 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.306253781 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.320867854 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.305355572 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307301324 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.771434054 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.250884632 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312561237 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458266242 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.937276659 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.322301257 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.304903014 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.93960443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.537197637 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843345921 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.36284838 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.607762406 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330293243 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.34479976 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.937704289 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.393772846 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812590097 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325439149 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.307558835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910190474 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.325246075 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.368734475 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.307212695 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.307320372 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840793729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.323469703 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.313451084 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.558457534 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331801266 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560784751 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.31296309 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.337428051 seconds)
  done (took 1104.14303887 seconds)
done (took 1312.113827931 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.306892977 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314732973 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.295340041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315042703 seconds)
  done (took 26.457526746 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.317557007 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312265143 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.314909648 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313601875 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316593563 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.314017155 seconds)
  done (took 9.114753683 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.357378397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31418645 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312318829 seconds)
  done (took 19.210190779 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.5146295 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.614296579 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.666189426 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.529022397 seconds)
  done (took 10.550269849 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314477865 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.31500261 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.314416206 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31718489 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.318254566 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.319672154 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315911532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.316198194 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319806431 seconds)
  done (took 13.075300133 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.320226485 seconds)
done (took 80.954423072 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.656041594 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.719292929 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.324844 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.068983408 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.088654263 seconds)
    (6/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.359566801 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.411511624 seconds)
    (8/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297654584 seconds)
    (9/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.698057632 seconds)
    (10/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.133498721 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.552187079 seconds)
    (12/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.768102372 seconds)
    (13/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.311515295 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.351541168 seconds)
    (15/286) benchmarking ("sort", Float32, true)...
    done (took 6.309291494 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335997929 seconds)
    (17/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.324717083 seconds)
    (18/286) benchmarking ("sort", BigInt, true)...
    done (took 6.309618238 seconds)
    (19/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.888651668 seconds)
    (20/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.850129607 seconds)
    (21/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.423873589 seconds)
    (22/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.395694035 seconds)
    (23/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.900585618 seconds)
    (24/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.299064393 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.337508209 seconds)
    (26/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.062385193 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.756690701 seconds)
    (28/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.357226529 seconds)
    (29/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.584691726 seconds)
    (30/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.319583764 seconds)
    (31/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.291430628 seconds)
    (32/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.317095465 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.312030363 seconds)
    (34/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.299192283 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.311194588 seconds)
    (36/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.431398091 seconds)
    (37/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.293207856 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.423756779 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.156785629 seconds)
    (40/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.516536421 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419536818 seconds)
    (42/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.763835013 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.295027346 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.311236785 seconds)
    (45/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.373823624 seconds)
    (46/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.417287016 seconds)
    (47/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.395852224 seconds)
    (48/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.558551508 seconds)
    (49/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.6970791 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.420733131 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.565948397 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.330418661 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.366997274 seconds)
    (54/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.309033168 seconds)
    (55/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.673537385 seconds)
    (56/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.92980108 seconds)
    (57/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397836833 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.204447871 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.711983073 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355682056 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.342691003 seconds)
    (62/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.038793055 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.727279788 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.020549039 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.417287558 seconds)
    (66/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.518129356 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.736210699 seconds)
    (68/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.35277227 seconds)
    (69/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337008262 seconds)
    (70/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.435989532 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.216847481 seconds)
    (72/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.291741014 seconds)
    (73/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.440810613 seconds)
    (74/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.513159602 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.117275037 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338738163 seconds)
    (77/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.292205507 seconds)
    (78/286) benchmarking ("sort", Float64, true)...
    done (took 6.334963943 seconds)
    (79/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341283914 seconds)
    (80/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.29875111 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.660770922 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.318987017 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.294110693 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.502047889 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.302696142 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.329976021 seconds)
    (87/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.035650609 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.060013622 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.661127272 seconds)
    (90/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.315671437 seconds)
    (91/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.376130795 seconds)
    (92/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.56051689 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154580682 seconds)
    (94/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.508705005 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.370528117 seconds)
    (96/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.723381354 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.329356043 seconds)
    (98/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.292298874 seconds)
    (99/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.410311168 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.456854701 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.525955449 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.941926607 seconds)
    (103/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.33831879 seconds)
    (104/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.376035214 seconds)
    (105/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.324215622 seconds)
    (106/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33185036 seconds)
    (107/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.663506953 seconds)
    (108/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.514146512 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.298218335 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.377237657 seconds)
    (111/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.764688665 seconds)
    (112/286) benchmarking ("sort", Float32, false)...
    done (took 5.296843569 seconds)
    (113/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.41604899 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.805567559 seconds)
    (115/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.508951368 seconds)
    (116/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.624269191 seconds)
    (117/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.299738567 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.135585275 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.84472798 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.358842941 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.084280001 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.294436013 seconds)
    (123/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.0984619 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.594556571 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.040843357 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.312605977 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.607155285 seconds)
    (128/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.319945759 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.418364682 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.296757018 seconds)
    (131/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.917677501 seconds)
    (132/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.493114639 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.294999574 seconds)
    (134/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.776045237 seconds)
    (135/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.369633163 seconds)
    (136/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.306413096 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.046930459 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341738842 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.156033367 seconds)
    (140/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.388709779 seconds)
    (141/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.370175829 seconds)
    (142/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.328120551 seconds)
    (143/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.873367717 seconds)
    (144/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.759329341 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.431741447 seconds)
    (146/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.027069914 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.340910404 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.336448452 seconds)
    (149/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.905860207 seconds)
    (150/286) benchmarking ("sort", Int8, false)...
    done (took 4.369664554 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.30009736 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.304017506 seconds)
    (153/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.295927485 seconds)
    (154/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.663666552 seconds)
    (155/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.294496893 seconds)
    (156/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.175956992 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.880511169 seconds)
    (158/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.490415054 seconds)
    (159/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.590736115 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.612723738 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428729048 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.313776125 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 5.611778419 seconds)
    (164/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.297495554 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.33302405 seconds)
    (166/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.078907023 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.365188197 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.302808144 seconds)
    (169/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.300367931 seconds)
    (170/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.059827697 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.357506327 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.209710199 seconds)
    (173/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.330014469 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.676611097 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.336107587 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.297283814 seconds)
    (177/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.342826074 seconds)
    (178/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.361393504 seconds)
    (179/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.879082863 seconds)
    (180/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429858458 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.202959122 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.407614301 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.388996979 seconds)
    (184/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.005341007 seconds)
    (185/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.334429453 seconds)
    (186/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.421072177 seconds)
    (187/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.682688333 seconds)
    (188/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.832873752 seconds)
    (189/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.512569251 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333512502 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.958661575 seconds)
    (192/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.297958178 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.525955672 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.719736017 seconds)
    (195/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.169619302 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.662970923 seconds)
    (197/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.539378839 seconds)
    (198/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.343346926 seconds)
    (199/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.299344443 seconds)
    (200/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.913665463 seconds)
    (201/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406855948 seconds)
    (202/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.326147769 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.329436861 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.416337967 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.341302325 seconds)
    (206/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.317879948 seconds)
    (207/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.402450753 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336300023 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.917137447 seconds)
    (210/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.287380758 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.358480826 seconds)
    (212/286) benchmarking ("sort", Int8, true)...
    done (took 6.317272979 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.640119544 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.938637039 seconds)
    (215/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.839888388 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725252422 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.876044801 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.298123255 seconds)
    (219/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.49811353 seconds)
    (220/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.467117481 seconds)
    (221/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344922072 seconds)
    (222/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.345042682 seconds)
    (223/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.305503206 seconds)
    (224/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.299276067 seconds)
    (225/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.299960314 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.447313568 seconds)
    (227/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.407237391 seconds)
    (228/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.334672691 seconds)
    (229/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.685205581 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.420317764 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.323642943 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.744170031 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.755732351 seconds)
    (234/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.299159988 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.526209278 seconds)
    (236/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.192881307 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.060155277 seconds)
    (238/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.362007811 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.346105325 seconds)
    (240/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404321254 seconds)
    (241/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.199324979 seconds)
    (242/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.300627231 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.320387977 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.721040404 seconds)
    (245/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.347800962 seconds)
    (246/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.321759664 seconds)
    (247/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.280332312 seconds)
    (248/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143254567 seconds)
    (249/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.300922214 seconds)
    (250/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.300702065 seconds)
    (251/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.320426539 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.547385491 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.302150655 seconds)
    (254/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.443628805 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.92198028 seconds)
    (256/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.415187461 seconds)
    (257/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.58892899 seconds)
    (258/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.301651855 seconds)
    (259/286) benchmarking ("sort", BigInt, false)...
    done (took 6.335844167 seconds)
    (260/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347896636 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.436469062 seconds)
    (262/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.679968385 seconds)
    (263/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.367854329 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410999836 seconds)
    (265/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.551835424 seconds)
    (266/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.427281017 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.40472288 seconds)
    (268/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320974593 seconds)
    (269/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.945627369 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.432346416 seconds)
    (271/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.324793276 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.154700158 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.157537616 seconds)
    (274/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.445983952 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.364862722 seconds)
    (276/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.307179221 seconds)
    (277/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.926406247 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.310150923 seconds)
    (279/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.33656892 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.151524474 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.364543169 seconds)
    (282/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.871784078 seconds)
    (283/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.30360722 seconds)
    (284/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.088979627 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.28243886 seconds)
    (286/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.616495322 seconds)
  done (took 931.886921795 seconds)
done (took 933.114167108 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.358649711 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354818507 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.335491926 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35729264 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.448164475 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.358978903 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.345898962 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.338930647 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.384425156 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.385733011 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.335923475 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.359508736 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337126526 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.336664072 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.335182507 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351680674 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.360372642 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342758027 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.355319452 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346280726 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.354756807 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337282551 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387855899 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.359707101 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.340539857 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.339331766 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.342092001 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.357482601 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.45028775 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.342333712 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.339988688 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.351482828 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.362334824 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342075088 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.332131928 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.35672285 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349576352 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.347748556 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.340860589 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370461882 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.765390898 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361007774 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.33751222 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.338538801 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.33841504 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.343525811 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.339671848 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.344905667 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354185502 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354347142 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.76758548 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.375815173 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.343412294 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.338447439 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.350202848 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.340272981 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343091635 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357152552 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.359863115 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357999084 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.355195723 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.349568297 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.341178729 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357327055 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.348245146 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.807053679 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357898036 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.342044852 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.765601391 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.368964988 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.808023629 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371243545 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.340325654 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355410472 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.372650888 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.352951702 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336804751 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.340791242 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.350172418 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.340375591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.351621463 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356663333 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.345490038 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341749514 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357335594 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.364977736 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.350826593 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34240645 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.350044214 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.361236762 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.350171001 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353750895 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.345038797 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.336696603 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.351444242 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.345747388 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346084562 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.344808232 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.34744153 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353080707 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.758631835 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383953371 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.337763194 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.339459139 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.341548591 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.356924533 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.748796793 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.361249473 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.363160676 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.389994863 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.343221833 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.343246807 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.346834044 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361458222 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.353016003 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.347118301 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.338383915 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.355493365 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.746784233 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376398607 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.344888183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.343167806 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362701374 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.345623516 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.338815955 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.36008192 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.344299464 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360855895 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.466123219 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.354789032 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376757095 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.342062244 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.347746217 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.368194589 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363288492 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.376452925 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.346042989 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36191026 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.361120545 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.341734421 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356563006 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.354993175 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.344707255 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35000476 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.338648761 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.36739462 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359845586 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359833812 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.365318708 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.468487434 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342895914 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.348128062 seconds)
done (took 226.508055047 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.402822794 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.333532194 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425276225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.340625636 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.438768358 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.437317998 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.338061419 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.338954605 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.336798076 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.717845134 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33861925 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.337834544 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.333956473 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.337626189 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.420222522 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.339609939 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339156582 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.73186284 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340620401 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.41160019 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.338854393 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.338989159 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.340979436 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721168903 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.340227361 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.339226517 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.409838651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.34277431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.684866024 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.333454056 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.341862518 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.68562646 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.431153668 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359347887 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.351478511 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.350429503 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.441327977 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.36057488 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.422984266 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42285492 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424336244 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37982028 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335582052 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340754276 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.345228967 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.343404019 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341863044 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370333433 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.342740387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.340750569 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.731390491 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.352754112 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.342013823 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.341003378 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342659791 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372424423 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.341213442 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.342519686 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.43226044 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.344638016 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.404947484 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.722101738 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746106567 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.343178601 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.342120137 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34231524 seconds)
  done (took 149.058505857 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.41152397 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.416282618 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.452877915 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.35966391 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.393321022 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458544238 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.359088027 seconds)
  done (took 11.103984544 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.349281346 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.345042094 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.393796529 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.394115334 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.345155753 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.493068387 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345839024 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.355627608 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.34361168 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39717998 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.345962504 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346357085 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35269161 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.342210149 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396445615 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356908834 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.460805089 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.346157814 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.34544695 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.496668362 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343147858 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.353503545 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.396952607 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.356500356 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.346750427 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.351272953 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910954933 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346636536 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343762031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.345064748 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344460533 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.382408117 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346915076 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.343429689 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344137977 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463430015 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.347187768 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344643628 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346955784 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.34398246 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.347541067 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.345664135 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.34683686 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.34423661 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.346014196 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.370386612 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.346536422 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.347669383 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347177446 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.347487714 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.396385952 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347997949 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.344846059 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.344314209 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.402677993 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354263173 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348231746 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.346247971 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347994587 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345897824 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.499114714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395805577 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.348346076 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395627911 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348815013 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349275322 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.347731349 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347675563 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402779398 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348888624 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396034519 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.346348397 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.503899648 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.370557277 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350390986 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.350207686 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.351176749 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348668683 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.345133107 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353689094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.347340296 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.350788014 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.354140213 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346488483 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347807813 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452765124 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45884425 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.347015222 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.363686598 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.355772215 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.347919779 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.401824444 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.350133334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.348358501 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402079805 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465724162 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.402310698 seconds)
  done (took 154.523498955 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.35405619 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357370486 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.351693567 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366249872 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350796249 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.350099501 seconds)
  done (took 9.389276625 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351399756 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.352681014 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.351231605 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352239632 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.351817856 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351127909 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.350296451 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353676024 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.3533838 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.351063451 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.351565681 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.352609201 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.352775512 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.351648192 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351871315 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.351792568 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.351037298 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348403197 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351731022 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351652679 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446510776 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352001816 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350955873 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352998044 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.357133703 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353793171 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360226281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.354210414 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353348695 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.357417236 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.3710174 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354028627 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.353364506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.357653668 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356261778 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.35418666 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356578979 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.354468912 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350868636 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353726228 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.355191209 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353432244 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.352920898 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.355826275 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.354039869 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.357937202 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.359730733 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361003476 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.354157443 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355580286 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.35665713 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355337733 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.354407801 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.354786314 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.355888452 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374998483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.359358135 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.355248783 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.354741664 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.355049105 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.356583116 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.354437979 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.355982696 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358389739 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.361906582 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356924282 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.355729885 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359795244 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354536589 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.356150917 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.355999095 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.352864664 seconds)
  done (took 99.912534011 seconds)
done (took 425.238215004 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.678067202 seconds)
  done (took 7.941482274 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.443660026 seconds)
  done (took 7.708439262 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.55049398 seconds)
  done (took 21.820683397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.388641822 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.383644756 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.368520047 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.374521063 seconds)
  done (took 26.78071303 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.549237322 seconds)
  done (took 7.814236729 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.349222415 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.359668242 seconds)
  done (took 13.976079029 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.932189271 seconds)
  done (took 8.196604054 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.003032436 seconds)
  done (took 8.273833395 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.366223876 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371088843 seconds)
  done (took 14.270768102 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.330927713 seconds)
  done (took 7.596790925 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.133616654 seconds)
  done (took 8.399883403 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.363351677 seconds)
  done (took 7.629950068 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.378780122 seconds)
  done (took 7.643850086 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.261719221 seconds)
  done (took 9.527048453 seconds)
done (took 158.843895904 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.34908036 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.358181161 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.356809107 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.35676752 seconds)
  done (took 26.685747616 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.392732701 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.390704987 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.393609468 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.402041088 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.394886111 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.392792405 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.385530837 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.38324609 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.400780037 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.394826885 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.394455445 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.393611062 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392679904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.383335025 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.393795265 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.394263398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.403452849 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.394345863 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.385251599 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395470533 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359130816 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.404124015 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.396258325 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.359052261 seconds)
  done (took 34.647776462 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878609339 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.429122846 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51189346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.411288557 seconds)
  done (took 7.497605279 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.411511122 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.412439957 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.423435077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.46172994 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.493211786 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.422107136 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.385240014 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.3821762 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.367882462 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.413051065 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.488891206 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428484666 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.507599125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.360286071 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.552632096 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.360123134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.359019159 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.412330831 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.463335071 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.478613649 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.361340271 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.413255281 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.416476416 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430345166 seconds)
  done (took 35.472983122 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.361167428 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.379746893 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.360024396 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.360817527 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.368322685 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.360534686 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.360841623 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.362592875 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.360498048 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.366911777 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.360145935 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.372200739 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.360414092 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.360258007 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.366895211 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.360859 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.366501052 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.360396922 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.361095861 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.368112882 seconds)
  done (took 28.548694066 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.353884776 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.207871621 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.70647494 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.610572073 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.352784463 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.359570643 seconds)
  done (took 27.861158666 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.42843419 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.58528418 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368193188 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710014403 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.803341968 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.380503639 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.361657932 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.601604927 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.918603457 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.905411285 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.424361246 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.435467105 seconds)
  done (took 20.194176844 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.365643401 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362672854 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.367233011 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.378783846 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416047375 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386997936 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.368862836 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.356009949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424561093 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437082562 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384170319 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417284518 seconds)
  done (took 37.936242691 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454571452 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403476234 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.280757128 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401292627 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082968771 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570709374 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436418566 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.796306236 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.369873835 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633267908 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359173324 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464521205 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61385902 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36875653 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366673201 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337495379 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607819025 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835806616 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366236783 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.363652005 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390503747 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369638151 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.458136509 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395596935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571177705 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501498653 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.619561215 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.135662489 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662782875 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372795583 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371132394 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360688677 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634930276 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02523209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481849752 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371178192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361626579 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911688496 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.346917539 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.382030655 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242654442 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36776148 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3709651 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360338882 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294861859 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37061877 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798311895 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.375088653 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.073952338 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361356581 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373193049 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456259745 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366181887 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.352325475 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38381099 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392964904 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.358821683 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462027018 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951379227 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775891688 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380233391 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.303150667 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3726846 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284296364 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002104274 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.488737683 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.365985881 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367220048 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296396343 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.39211163 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384463049 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510512841 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.385679315 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012102734 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080259385 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394433326 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30147428 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904290433 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38425415 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.303973528 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591179698 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139769837 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299469917 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.304675179 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29742761 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051466975 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378471305 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.751020673 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39148373 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.814567111 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.382035357 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382005286 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387412505 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588289925 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.242462865 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362927857 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.302323681 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513588853 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384824311 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.792830605 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306204487 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.367436447 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618558276 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.57534623 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376509634 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341606944 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586699673 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38177234 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385582879 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370849036 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382554877 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.939960961 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400100224 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.774915736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388793299 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.142816029 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08345925 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37331115 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.473492889 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378031958 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616521984 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.105049017 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.53247538 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434342415 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371250981 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365994497 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.390740897 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96423088 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.525378614 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.362103898 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378183996 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.383232145 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.366769433 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315415255 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.371443657 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365817854 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.151094937 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588930507 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36791501 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079759587 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300467997 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514497576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377245785 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.590695003 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.553700573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.38390391 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626585661 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366942249 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393751832 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38491315 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385239149 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468514509 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389399963 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.36715859 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629743362 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.370797467 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.372492279 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.414053541 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.146064898 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375310902 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37344836 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384926837 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953995886 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363970365 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371110516 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257987304 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.383098911 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436679995 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375076079 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378171752 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.166403974 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390357962 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.393085841 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.378283834 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592552966 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37946795 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.308771809 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454177037 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.563205237 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962731626 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400043119 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.303545872 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.080118815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.062217198 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370274818 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558478074 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36869363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380859177 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380145925 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373024789 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948152241 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389203039 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.314069967 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383233891 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380616854 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.376472827 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369761314 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.146993216 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.819312336 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385129459 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.388980056 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514683709 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.385517168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306063627 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888762697 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376850929 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371879867 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.148686802 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405109435 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.306080031 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852208218 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631967486 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380691642 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383968432 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.419137106 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.411044923 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368324982 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320472526 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396283483 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.398241821 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380853865 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.382121714 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.318203481 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.740578118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937980137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088462793 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931827698 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302198057 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.382047109 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261112908 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.804148919 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314835493 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.028926427 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559607708 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.829834529 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324886623 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570699791 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.580344436 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151067173 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384346616 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60005176 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283694382 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.327613892 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403926347 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584292012 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408036572 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386852392 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309746862 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.654013541 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606291108 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289471865 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453247214 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809181094 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336840966 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171447931 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.403532393 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.712760588 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568214081 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.010877394 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761372937 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374166744 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383156734 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848381235 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378119021 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901695241 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996776146 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39424043 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.577430587 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31898975 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386884216 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386030658 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.371954456 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.656441685 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.375487814 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630710259 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385976663 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309832625 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375122698 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910824412 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.2469347 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.38129544 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376293095 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10543594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397979845 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675068255 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.386442361 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.149803315 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395612438 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310664525 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313293665 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.06987592 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386248311 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352773235 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87042594 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.39824044 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394133125 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395018262 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229716179 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633237354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390818416 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967011443 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619241395 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389994666 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409263648 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.477980012 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377560381 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.384109491 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.258854347 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613163019 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463734898 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627543929 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.318138608 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.290919378 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.470956178 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59638782 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259438471 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384165242 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644776354 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.114000109 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.396353932 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104180482 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428871757 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380746747 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39719225 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396064189 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406379808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468753697 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389659498 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.39014734 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.389407807 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548377842 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386820056 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389763138 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.394624592 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472371377 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.826993868 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.15841398 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.152366704 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974876304 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125487249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981037023 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410250491 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380613996 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381078665 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313895962 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533256223 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906000207 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655348627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511200944 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.38732951 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404245037 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392110107 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403411019 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599996969 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656321261 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359803461 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381095827 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18936063 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.539636567 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391038579 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.593141221 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875423181 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939594383 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495716145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38869269 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819389603 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662721825 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.47048308 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38210771 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971276327 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.404017543 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.756665856 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.414278115 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382093424 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55413793 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392441335 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053410184 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419158138 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.538586303 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.155405773 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.356619947 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645426251 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.836718441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401511912 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97748538 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108047484 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660893758 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454524413 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394822139 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.499284622 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530105035 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.391281631 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290167355 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383378631 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227999871 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.094649571 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394391549 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973126835 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670645586 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.381019965 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.390268064 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406867275 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.395066418 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606435549 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077726919 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615764697 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395717504 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395034701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.954251992 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97224613 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422086433 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319492553 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.38909135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635766014 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646340061 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408070141 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.837712503 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.09722438 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924102247 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358257694 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408711802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384379288 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090830412 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98206364 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.19014196 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888491693 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050966735 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39955783 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666009228 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.391476491 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395434608 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66942723 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.390126353 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385862221 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404448011 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.978339574 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169993492 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.397409991 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.487994824 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330230977 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614119276 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418415107 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330027008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389990877 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.562054498 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396098957 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517618299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399561039 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.398027663 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390560204 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.128274592 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661024035 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.392909967 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.375797456 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.376134964 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399712796 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489736662 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622140044 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394383481 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.062185262 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.737438381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64344247 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388951604 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.367779732 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.39329879 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389450922 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108258023 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399486023 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40480479 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950359964 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.392979773 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.399456533 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392649627 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.60545838 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59956324 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389571777 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401445745 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393689834 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403667617 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.290097793 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157606977 seconds)
  done (took 1660.677893777 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388846757 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.402815016 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.419161105 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.432452364 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426042 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.468688175 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.463749246 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.495948795 seconds)
  done (took 52.798847416 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.388376202 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.545544608 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.419712576 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.400744504 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.399177683 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.392635993 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.858209039 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.40543579 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.398351556 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.400395633 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.400569826 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.391279035 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.053297364 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.399471158 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.394010045 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393622014 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.3970413 seconds)
  done (took 66.345510032 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.389888933 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.967194519 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.488681336 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.404303325 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.41752912 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.412823388 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.173244969 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.396467247 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.390685067 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.743364352 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.06771256 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.396136856 seconds)
  done (took 85.552397328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409508301 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.408128576 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.408670937 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.407818387 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.409081559 seconds)
  done (took 8.347405695 seconds)
done (took 2093.833830745 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.400405441 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.086794512 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.043250347 seconds)
  done (took 5.433251417 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.54244724 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.58988764 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.71056083 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.730246885 seconds)
  done (took 7.878644281 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.689475003 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.780050621 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583423896 seconds)
  done (took 6.359776676 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.678106073 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.40251413 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.406943096 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.392501936 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.402165415 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.403097663 seconds)
  done (took 20.506131353 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.399845787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.401693226 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400948338 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.403764163 seconds)
  done (took 6.914009128 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.375150643 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.092451304 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.378678105 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.391579704 seconds)
  done (took 18.546632764 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.149152579 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.157786835 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.143836053 seconds)
  done (took 7.757797985 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.427516727 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.420731005 seconds)
  done (took 4.15697013 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.69698519 seconds)
  done (took 3.004744148 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.413932099 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.452650806 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.420623798 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.344060646 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.864292861 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.769922989 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.016481076 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.615627406 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.314922589 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.603634633 seconds)
  done (took 31.12579361 seconds)
done (took 128.875123783 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.188266474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.769938564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.594499209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.15776298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.632641844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.594620644 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.60599502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.133346356 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.671429394 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.659841507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.203011918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.639124941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.766022505 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.768935437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.762969851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.645003993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.632640837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.231728411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.85311567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.084262835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.608476641 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.800224335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.037418906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.817918561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.631205084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.549513852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.386929603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.646312024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.021477384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.394564413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.551872169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.258580092 seconds)
  done (took 194.609449631 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39893767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399168171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415275046 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403470432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.398555864 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.41601849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.400101717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.414448875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398726191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398481033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.401946713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400573542 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.399249762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.398276263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417096811 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.414247685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.400126667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.417033856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417634884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.428842836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.399658192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.415329757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.413667456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399528853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.430773655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.39988568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.399889892 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.39962369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399085088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.400343189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.402158988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.400659745 seconds)
  done (took 206.310664238 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.400615787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400383281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.399398892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402421497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411598533 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.399732401 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.402007392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.400494267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401213054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.428798959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.401451674 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417873502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408567106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.401441697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.400865597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.41657773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.401614884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.401487098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.402329366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.417803655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.402798936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402540618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.401455629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418030064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.421085234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.402707692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417605954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.417178985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.418099052 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.419707352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.402234928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.417912179 seconds)
  done (took 206.371091634 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.605780571 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410713097 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.410707391 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.367617229 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.411910457 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411483322 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406241003 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.6016333 seconds)
  done (took 14.941313291 seconds)
done (took 623.540861442 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.724082525 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.443073337 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.615936981 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.431832544 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230223109 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.455890464 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.430401131 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.598142147 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.337072604 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.612322859 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648390335 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444340772 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.791113153 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.429829857 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.680093622 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.528875089 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.293528985 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.417927428 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.744547142 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.994840295 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.694045413 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.937583865 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62673377 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.327655277 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.80584988 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.896923488 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.143800542 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.302609624 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.454282675 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.747810494 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.071510794 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.377794431 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.49112469 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.490490658 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.547372625 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.526756868 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.383117952 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.495694661 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.630559307 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.684476489 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991616804 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.160290077 seconds)
  done (took 94.958014491 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.396373348 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.395747193 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.39513534 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.395144956 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.397417596 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.395922196 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394078987 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.394061929 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.396403686 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.395429666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.395175145 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.39699357 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.394056383 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.396530435 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.394491543 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.396170245 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.396363082 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.397694076 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.396134376 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.394460592 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.396910079 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.395444379 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.396737235 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.395616117 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.39612861 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.397049023 seconds)
  done (took 37.609338234 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414860051 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.658343988 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.823577433 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.42051884 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.414707503 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.417425375 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.49364713 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416327765 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.417517489 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.418074533 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.567170707 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.420083713 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450563097 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.849480501 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.417136539 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.416760557 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.416163766 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415594803 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.668702105 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425146445 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.511993569 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.421230385 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.494223566 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433560804 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437727972 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.416324558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.421098122 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.002871828 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44220077 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.567961968 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.208619316 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.499571645 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941874151 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.854799236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.214992417 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42644985 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.417561739 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.571205323 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.418472889 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.417773601 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.494564638 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.417715697 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.832648289 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.086927255 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.435215892 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420010795 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020768837 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.589906722 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.660473563 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43396626 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.861509511 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422012303 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.420484497 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.418922205 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.661540882 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.431287244 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.418769362 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.020669222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444708699 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.49700376 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.421368124 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.419472853 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.677041092 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.418828186 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.662368353 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.419573537 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.427126762 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437571769 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.837777675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.421547871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.118733034 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.436974286 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.420054844 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.573678926 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.671378549 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.056543443 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442398812 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.683201278 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.951560831 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.512997062 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424117573 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.992401931 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.517880278 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.42346726 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.423818131 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.422626679 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421529996 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467264149 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.495925384 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.048921544 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.121043686 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.048367642 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.516283279 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.43409695 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.423088487 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.025232808 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442692294 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422950447 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.833801095 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119810357 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.439731351 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.43096235 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.115730808 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.442360319 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501206852 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.426853652 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.84913191 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426136991 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.469685996 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.421146443 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.430413555 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.445039939 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.501018807 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426285484 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.423041776 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.084285543 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.596518772 seconds)
  done (took 186.840628151 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.416278987 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.44080058 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.416315466 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.435065975 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.417171007 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.424545202 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.417376091 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.415889421 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423565441 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.417309659 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418510794 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.417827742 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.42003403 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.42380997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448964639 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.424290732 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.076218872 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.419829741 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.416802367 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.43352708 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.214813913 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.425508668 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.419322138 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.41639645 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.418075348 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.418506507 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.420040005 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.441013332 seconds)
  done (took 154.627268256 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426676733 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.98346509 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.44333571 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.556384163 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.447550664 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.423816589 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.554607865 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.481479263 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444434821 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.422989968 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.424650147 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.727799873 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.435243068 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.943803314 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.624132702 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.577466415 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.940657037 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443925949 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.424187842 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.425378579 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.557953774 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.433923904 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.725052014 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.985110988 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.443944652 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982583586 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.411252041 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.426736616 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.425100851 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985562175 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.441914428 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.732953726 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.511017755 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.493852111 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.003076679 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.957844373 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.956846837 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.572324294 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.434083902 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.425187367 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.4251762 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.411288146 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.987099834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.445855207 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42753649 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.976255749 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.444681627 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.429207006 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.433457958 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.42606481 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.484667762 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503003513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.746782295 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.993070793 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.522101312 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.448324882 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.558266251 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.812101368 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.429268414 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936095117 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.410105158 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.993731684 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447488985 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.412159846 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.428716628 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.433442689 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.578438007 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.565499463 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.946662881 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446715487 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.938279351 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.594501307 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.434677652 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.42835532 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432061675 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.001317778 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.963903797 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.594971782 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.565108597 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.62838023 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.422045826 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.429044877 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.413215033 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.506080323 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.428225516 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.006200131 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.963982604 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.447708443 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431595257 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.431657256 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.431768418 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.605352154 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.023536912 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.533370956 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930848334 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.753810169 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.746212285 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.439614992 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489214508 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.446855419 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.740249177 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440092197 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.486982043 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.870815598 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.740026747 seconds)
  done (took 169.634081133 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.671842064 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.645403475 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.521039343 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.580222302 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.044064595 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.00970823 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.724462202 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.5800168 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.540320341 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.688584426 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.598183791 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.531439706 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.654442879 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.50691102 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.164688427 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.524153229 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.538660036 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.577110755 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.584171412 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.444285564 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.123228011 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.733630291 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.622564341 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.321586613 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.533212674 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.204236996 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.991937428 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.972503865 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.598836271 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.765392845 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.981366713 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.574890675 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.404586213 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.129716189 seconds)
  done (took 68.422552274 seconds)
done (took 713.406847598 seconds)
SAVING RESULT...
DONE!
