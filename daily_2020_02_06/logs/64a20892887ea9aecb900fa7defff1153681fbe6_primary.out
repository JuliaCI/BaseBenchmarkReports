cset: moving following pidspec: 1125
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.425232811 seconds)
loading group "string"... done (took 0.604908479 seconds)
loading group "linalg"... done (took 7.871501787 seconds)
loading group "parallel"... done (took 0.179786585 seconds)
loading group "find"... done (took 1.18876889 seconds)
loading group "tuple"... done (took 1.976448578 seconds)
loading group "dates"... done (took 1.309274957 seconds)
loading group "micro"... done (took 0.242373922 seconds)
loading group "io"... done (took 0.970289066 seconds)
loading group "scalar"... done (took 39.498276651 seconds)
loading group "sparse"... done (took 12.380653283 seconds)
loading group "broadcast"... done (took 0.988039769 seconds)
loading group "union"... done (took 12.656499171 seconds)
loading group "simd"... done (took 4.672254718 seconds)
loading group "random"... done (took 9.395525649 seconds)
loading group "problem"... done (took 1.856693346 seconds)
loading group "array"... done (took 21.591881815 seconds)
loading group "misc"... done (took 1.71316531 seconds)
loading group "sort"... done (took 3.456248733 seconds)
loading group "collection"... done (took 17.973213182 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53586711 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134826225 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136086216 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126830667 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153043209 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118621228 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131489043 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08995774 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.838272582 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154935562 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123954615 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.442142734 seconds)
done (took 5.308671122 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176932311 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086998455 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087813792 seconds)
  done (took 1.307084699 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069776913 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130049199 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071210285 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070992569 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072307442 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073146854 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072851895 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07204576 seconds)
  done (took 1.696264544 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077332822 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072229251 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.07025037 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07212115 seconds)
  done (took 1.428979663 seconds)
done (took 5.820950683 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.812006172 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.223584876 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19299575 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.434423966 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136135123 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165652816 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643241965 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312870042 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194219068 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084799517 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113875131 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35416768 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116840584 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646390538 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078219756 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095016923 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142438618 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430896086 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070833718 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085661738 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092735428 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132159418 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08956804 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077881355 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150107946 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071514236 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140759006 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083740793 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06980336 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224772476 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176165938 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66525166 seconds)
  done (took 10.482412035 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104855621 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105285571 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072510196 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129699136 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104261761 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073310789 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078705001 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071385877 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094486805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135410414 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096403277 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107616117 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069101291 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072454104 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089468982 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210119893 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084816948 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086148177 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074431842 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083589124 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112719702 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082054329 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08479679 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084784349 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132668632 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18414908 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102551629 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100959832 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070147275 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087024265 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117948056 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134623147 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069443524 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069743223 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.132094054 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097682595 seconds)
  done (took 4.77810472 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.052066897 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150186276 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094197891 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139913723 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068688009 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113901789 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069735383 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085460846 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217662684 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.345729012 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09079657 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635062806 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115408474 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068460095 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110839313 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071868208 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075307916 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07069644 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.58892932 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102633369 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112788649 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087170797 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074761462 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073408206 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360105767 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071714401 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068388837 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073087927 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06040881 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12977856 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072106327 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.978615394 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167443273 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071389887 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104746903 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.299231952 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096169117 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149042614 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073601271 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069501982 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16214715 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074875003 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070028447 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090336407 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107999187 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122267936 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070091203 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073756797 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170583439 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069480984 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097404887 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085232952 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.135527586 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157827762 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085074134 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070736186 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265896714 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.0932493 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074866976 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068940625 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.217655664 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13164122 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071534911 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070420476 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072322208 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073073188 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370163032 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072740535 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.185127041 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071566798 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080111949 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073430867 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073489491 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077088669 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076468359 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092066632 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07071995 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079079724 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069743941 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069793428 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070858685 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087584104 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404211122 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070422423 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071726771 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068814812 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093797643 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099955022 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.173073154 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070255498 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103058143 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072369522 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071188586 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113330413 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071223036 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086834838 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068550115 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073323323 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116875205 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07133405 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099655663 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072072818 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10273287 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074362999 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102416161 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084823819 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072747834 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.450091239 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069704944 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068785739 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072553393 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070048506 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07179994 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070666442 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083589999 seconds)
  done (took 22.597177812 seconds)
done (took 40.042822413 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268582633 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077681859 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077927378 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077342381 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077405464 seconds)
  done (took 1.808758482 seconds)
done (took 3.018474424 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128342434 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105924561 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068623271 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101780698 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068063354 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107061282 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105764513 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081308787 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105917105 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068203264 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102114035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068088084 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068035022 seconds)
  done (took 2.410195039 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08775464 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08851738 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073706912 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087514547 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067509102 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087490555 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086365146 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094019778 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085992637 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07726933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067475049 seconds)
  done (took 2.106634386 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087152621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089700713 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073916693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087221571 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067433043 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08674255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086566088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090873114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086675136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078656223 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067390217 seconds)
  done (took 2.103257105 seconds)
done (took 7.817063685 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082335312 seconds)
  done (took 1.276311504 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.613645678 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.139583172 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086123977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116936925 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.205884509 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.126440896 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281281412 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094636336 seconds)
  done (took 9.049313646 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093059878 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087974011 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073923556 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074651503 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076574341 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076319822 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074785806 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073583914 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072214234 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0745495 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077841759 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074618348 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077511826 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074407252 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074184534 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074625582 seconds)
  done (took 2.500136493 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099050366 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098764969 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080249606 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081584446 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.078262381 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078428764 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080370134 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078731032 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077064914 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077394715 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078404155 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076919747 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074914104 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068392476 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077412008 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078858548 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074311169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07738912 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078959524 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079707827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078649461 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067710246 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075846784 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07752985 seconds)
  done (took 3.20492846 seconds)
done (took 17.231438158 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109782477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070914757 seconds)
  done (took 1.380485809 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085592911 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087536411 seconds)
  done (took 1.381042465 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087529519 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069498079 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094626718 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081197515 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069426079 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068909917 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09130685 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069271702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068934086 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06969503 seconds)
  done (took 1.979204758 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072296189 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081349246 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073574362 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085330121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077014284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067541398 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075473807 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071487609 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080288106 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066889506 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07450462 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086274381 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074388735 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088575834 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074873601 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072157245 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074149499 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070671793 seconds)
  done (took 2.576780655 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0702559 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070264836 seconds)
  done (took 1.353494929 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070530473 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067177411 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070655836 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06966447 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066751293 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066773526 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066498608 seconds)
  done (took 1.687630758 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401540335 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122915438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335456259 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077542895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088385076 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.274900602 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071628808 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074395836 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074800038 seconds)
  done (took 2.780854073 seconds)
done (took 14.353316377 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085055778 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090849155 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100335422 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393411515 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095340836 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0701203 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117460091 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192351849 seconds)
done (took 2.369140784 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218141268 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.72110709 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.452489436 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218594341 seconds)
  done (took 2.607118285 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357345044 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095234551 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064023394 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073057824 seconds)
  done (took 1.812994219 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071234264 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072775068 seconds)
  done (took 1.363540109 seconds)
done (took 7.222772765 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069901242 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070031443 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090951721 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066880988 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068909699 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067317572 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066830561 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069642208 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069654257 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070930189 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.071757604 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071455421 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071625869 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069109113 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068642012 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069376421 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07172628 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068867958 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068839127 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068800471 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070332194 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071716629 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069038819 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067035765 seconds)
  done (took 2.94484159 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08823292 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069878061 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075304117 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074527702 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07259341 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074888202 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074118749 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069438199 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074645471 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071659634 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072686805 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072440987 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071327462 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073506938 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071207843 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072587829 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074472832 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069642214 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071687726 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072637755 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.18760401 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069063977 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072780127 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074388133 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072395686 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072229556 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071712788 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069058459 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07453729 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072099175 seconds)
  done (took 3.530427122 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073945986 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067116282 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067767797 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075194798 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067423587 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068001325 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067491195 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067266553 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068435548 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066849155 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068622658 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066530007 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066955717 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067995829 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06721976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071066895 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082806991 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067557571 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067871794 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067245805 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070260221 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06646348 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066757405 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066304108 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066681083 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066499363 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066724159 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066469688 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06756101 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066250476 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070330493 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070408985 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066601278 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074730112 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070904757 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066831924 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070716939 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066855604 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06720473 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066229142 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066961739 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066526127 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066829492 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074947033 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066435161 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068430314 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066577007 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068801485 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067017938 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069922335 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066372244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066568588 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068813172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06781273 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071086236 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066718207 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068384883 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06682402 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067702569 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066512103 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066697226 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06634208 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069587771 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067671909 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083285404 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074310303 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066879714 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06864199 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068512273 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069865107 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068439823 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081613812 seconds)
  done (took 6.185737835 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094293782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091372766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069340999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06880606 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065015279 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067899652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072812283 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067843197 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068771863 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085474233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067454456 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068718238 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068442173 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073429405 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069122112 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0695499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078625486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067144347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068326956 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072309474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068661327 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074280957 seconds)
  done (took 2.839143883 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159717233 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073663522 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110214055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078670917 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073376392 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078355295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073225275 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073250737 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073494598 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071366826 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071836786 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073127383 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073578011 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071302634 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071377511 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071845462 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072953147 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07047218 seconds)
  done (took 2.678634499 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079116097 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069147005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090865482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07017381 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069543921 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073009121 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073714648 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07718561 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071259727 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068779281 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077059756 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071558599 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071986695 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069035715 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07197373 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069373943 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071669992 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069987997 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076964824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073197015 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073223485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077226792 seconds)
  done (took 2.853982367 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08333568 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071272201 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08501949 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071652414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065558204 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067184589 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073635521 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069916265 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073191498 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071068119 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068834331 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067170247 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071550194 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068843256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072034855 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068895454 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071782508 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068969891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071316454 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065162492 seconds)
  done (took 2.665704462 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090664179 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071628453 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070996358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080207857 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070724036 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071435599 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078567256 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070678922 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070707169 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091773023 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071297193 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071241524 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078473985 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076240985 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071369574 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078959447 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078692164 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078418918 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070775035 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070897028 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092418706 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070981003 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078376601 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071673658 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071068181 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071104006 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071196812 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075521303 seconds)
  done (took 3.357067926 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069905816 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06931649 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067114851 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066933622 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067101506 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066394694 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066976625 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068071319 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069145086 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067165105 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069235113 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069197566 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069335882 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069013685 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069220892 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069062469 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069209908 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066745606 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06702236 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06674359 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069375336 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069146247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07163186 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066713917 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066798938 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069285785 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066832761 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066800452 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069111716 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066780165 seconds)
  done (took 3.288921815 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079046125 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077786784 seconds)
  done (took 1.401501027 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066225325 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083500343 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066913506 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073658163 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073039983 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070006339 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076529242 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072629474 seconds)
  done (took 1.823111706 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086373145 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.083086111 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0736945 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086301959 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082952743 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089877109 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144046531 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072598861 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07836944 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06953539 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.088727926 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071182853 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078740098 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072147872 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076502493 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076480783 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067341359 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076017449 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071591719 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06835427 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071261064 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079179401 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073520803 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065308421 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071217009 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092800659 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081513489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0689586 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072945042 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077994769 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075851621 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06415631 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07046027 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070570546 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067790907 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080012601 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08501367 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073700851 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078832477 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071213593 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082130435 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066559767 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075630553 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076617257 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080831681 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071015172 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070889733 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064572077 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068761811 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074966262 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065456476 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070689029 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064279612 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076909132 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073346248 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08125722 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068420368 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072202083 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072872276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073159591 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076938389 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071845332 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072648619 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069325565 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079882979 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076252622 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064821454 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063676724 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067892228 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079796414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093775725 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076157222 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070605606 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07091856 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067274105 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074344368 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071003704 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075340955 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076809831 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070570241 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075750872 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078132909 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071235477 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073162108 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077839673 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068451724 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073116507 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067798673 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087112707 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068802348 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067459293 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067588391 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080105779 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072845216 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069453538 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067376886 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07692408 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063396777 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069318586 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070165089 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070343029 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079045025 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073122312 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073322853 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07744536 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075807966 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069193098 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072198569 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065677156 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069196746 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068554304 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076168618 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062921297 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071930194 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069644906 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070113774 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076788725 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067500982 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068522003 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076188031 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074648562 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067673959 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06518899 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072192046 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068763563 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071327364 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076739129 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067199213 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063864859 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064290963 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071968291 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06809119 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072241337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072475012 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071580265 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063408518 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066971661 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073393608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077260014 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068762199 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069697115 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074422629 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070192803 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068180837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074984938 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07105681 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068259083 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073973561 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070056848 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063878059 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071485869 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071236648 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067856955 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072401515 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071318333 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070143642 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067952736 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066178243 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07258598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067446729 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06719095 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068829321 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067181816 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077888387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070174892 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062451353 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065545679 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074843267 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065899142 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067383358 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067530433 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070118219 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068917641 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066169602 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066733171 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069684551 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077228586 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07075467 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068188806 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073210698 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079321425 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067921101 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070936887 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068499636 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068122618 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06763751 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076708189 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07378791 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070748122 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071003778 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0653367 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072732662 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075690978 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067425096 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064928532 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066952703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071514361 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073483773 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070848835 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067903902 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067179671 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068908411 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070129607 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071069032 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06753052 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06862408 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072742558 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066104931 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073332955 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068799999 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077399105 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071217145 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062605502 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070094638 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065981327 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074035101 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062214818 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065236321 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06689428 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068331668 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06703795 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070496516 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061868463 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075237545 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075271512 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068760035 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066536769 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067065263 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074725067 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068994979 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071582216 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071417309 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.304347567 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08345083 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072949396 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075502846 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083433409 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072701012 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066583424 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079042144 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071249954 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071611321 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071820261 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070252881 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075102257 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081437243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07821442 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065840829 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075510319 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070796901 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071658827 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067285877 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077133435 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074905363 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073964897 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079963685 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072496888 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071625137 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075824641 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071471521 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07195229 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07325083 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075603863 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.072752661 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073280335 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070808713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074437004 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070677188 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068874242 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074418873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072213001 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072068733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076253934 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070495354 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071394659 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073814382 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071268964 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071907544 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071460244 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070179413 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074880783 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0719918 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071244127 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073733339 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065555809 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078482177 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069666637 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078491028 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071248881 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06718586 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078428754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075813876 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078554858 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074124042 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07431705 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074675793 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072432762 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073690559 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077946923 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068075816 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081147768 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077957082 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071835774 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073052671 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070922419 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072387763 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069312109 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071824179 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071064228 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070651634 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070590147 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075258874 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073054334 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0707329 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072420172 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071750114 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071255405 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07121917 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065004973 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070316719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070766683 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072535025 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080071112 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071373194 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070700539 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069773255 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071145444 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069282648 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066640028 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078025714 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078732666 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070678384 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077279937 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069410111 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072125582 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080476703 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063291421 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067579201 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067292645 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067501577 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076542596 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070591471 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079807451 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069999283 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069075811 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066564018 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070337963 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068171204 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064801207 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067112801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07311269 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069434233 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068799219 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.201996022 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073300978 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072269353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080176002 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070258145 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071267426 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07137332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.0674088 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069642258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06962684 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072909934 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071720611 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068505522 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067416782 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07059425 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07134837 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071620229 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070074951 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071509097 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078036575 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070384232 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07328409 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073495047 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064551617 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073335528 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070137527 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069631943 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06928156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074010853 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07380166 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070660184 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079052502 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070437772 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071188342 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070397294 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068117696 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06953108 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069802713 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069673865 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069189313 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071013315 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078528327 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067593634 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073612276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070220493 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070862179 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07697531 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07079354 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073150995 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076764425 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070270933 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071883515 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078159484 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073920064 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073335633 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070182628 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071586389 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076011943 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069268741 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.0775003 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070366031 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071822596 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072262925 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068105797 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06976811 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069899948 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069178415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076117894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070611142 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069079598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068971196 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067506766 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071185766 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07267881 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07772101 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072028387 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073229367 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064930923 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066945804 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070801325 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068198663 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072425716 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072424 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076410658 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071997208 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07037367 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06972852 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079340554 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075842646 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073932158 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068592747 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073760992 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070874201 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072779232 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071255772 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070296032 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071672971 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074071487 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071942625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069221724 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076821389 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073826489 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070900371 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07145092 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070601472 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070566018 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06491099 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06953754 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071019735 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074133762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071352145 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069344182 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079699567 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067376424 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070151466 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072538917 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068758864 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074783564 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064550921 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071166615 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070140229 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07083092 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.199571905 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070563667 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069071532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073448076 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070270454 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065147388 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081954004 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080368934 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074191525 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069078709 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069022827 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065234295 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065210842 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070647885 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071059525 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071701823 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081019881 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069224263 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069680863 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064750429 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070102053 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073100677 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073529854 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066918582 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065193231 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070007108 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073197628 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075485858 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068786614 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069779368 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073327638 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072142337 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068115973 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073082987 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066404748 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073944139 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082559341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070227036 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070719368 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076580774 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077710361 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070062744 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064717001 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070577337 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073468722 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07049072 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070816126 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071140147 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085546941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073109683 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069036659 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068861084 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072945586 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07001897 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078350116 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070807886 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070695557 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074560836 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071881378 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077825853 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073093899 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077830802 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073310576 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073664771 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069387517 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070974222 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068254717 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069020242 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071097919 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070184894 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074408076 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077539915 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069769754 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081189281 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079382404 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072087957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066289571 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069416908 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069345266 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06496573 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071005643 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067747234 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068138079 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068342387 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069011279 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071062197 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075176184 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071342583 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069990583 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069951765 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064256128 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072538337 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072138512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070858399 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066640999 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06989656 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070700099 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074285411 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073140858 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067776911 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072576199 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072178903 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071281868 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065057551 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076628241 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068474407 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07125371 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068474425 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069544951 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069506556 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073206525 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074048346 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070432154 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071482741 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073538094 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071275657 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067288287 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06715628 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07523212 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067180769 seconds)
  done (took 44.644158244 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107188284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067738169 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066615109 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066119556 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078098123 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066717628 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065469572 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066642646 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066738903 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068878604 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065731919 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065469948 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074049579 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08099422 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07708104 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070209055 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066018856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066564917 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065589359 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066708764 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074273102 seconds)
  done (took 2.883044831 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077148134 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081822679 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080247275 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085775111 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075608579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074135798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079106731 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073917944 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082126103 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076533168 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081981569 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074334003 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076292068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076660266 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076359007 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074225456 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08484876 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074775335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073791763 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078678282 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074443265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078999828 seconds)
  done (took 3.056693962 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071092115 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069958927 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071624896 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065075326 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070217922 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065344977 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073187172 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068227245 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072725384 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069052496 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069459081 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06920735 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07188745 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065236473 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070197575 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068442922 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111881301 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073685766 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069640872 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070540082 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065104342 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072525418 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065406432 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06587238 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070021289 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073203787 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070711953 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068223106 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070397035 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069112303 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07075739 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067998334 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072135677 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070936168 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0689642 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06934533 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069387334 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069950236 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065419367 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068142593 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070760239 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065788941 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07091994 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071329135 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067422938 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067428924 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072189914 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070604663 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064558474 seconds)
  done (took 4.789482159 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083361041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113815275 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071653657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09335414 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085745702 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078779916 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075435606 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097690263 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069205766 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070396873 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087802509 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084526192 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069877801 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073938349 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074004162 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069138038 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070124927 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068540514 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07281251 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068573064 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073112365 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076116402 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083632992 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082066629 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073082696 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068222876 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069011445 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07439183 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081190526 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073662363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074166796 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074605597 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084538766 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074468957 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068032709 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071562958 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084636032 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069006474 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071574248 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067192527 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071320498 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073427192 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075805114 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085529924 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069555331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074461149 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069035579 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066360156 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081613163 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071645964 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076966559 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083041111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07301027 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069358688 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073495098 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084415644 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068997281 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067358718 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072476272 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08158295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066693332 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073103068 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0822305 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071420106 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075840258 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082721823 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074548437 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07302584 seconds)
  done (took 6.655440971 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079774421 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101015318 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087203928 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086698128 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079465996 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079429025 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079215927 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079563494 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07897301 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08376247 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078960396 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121151548 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074837481 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081239113 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079798201 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079513307 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079065137 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079900957 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080314133 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079638311 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079172947 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086359373 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08011851 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086414426 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091323475 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074612911 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079352155 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079257897 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086454386 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079012561 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083322028 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079191624 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079105811 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087106786 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086895668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078715347 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069243135 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078771496 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079295048 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07864384 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074720766 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086365961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078746337 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074896467 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079059722 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080107727 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086351022 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08324762 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08128488 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083952514 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079839611 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087381498 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078925004 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079506248 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086399372 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089033587 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086138283 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086413916 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079229257 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086677976 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086656514 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089487708 seconds)
  done (took 6.482977893 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086103669 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077991963 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085634894 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064933423 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067576975 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075148804 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067909776 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067354205 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07758311 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077249107 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07954925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075053806 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078331102 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079658749 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075625264 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078393978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075521106 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075148647 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076989608 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075260059 seconds)
  done (took 2.88261155 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077841623 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086443895 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0707144 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075973182 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072776997 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074669677 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073019289 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073028426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070996044 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072873101 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079819026 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079732415 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07075456 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074871815 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078810243 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074919621 seconds)
  done (took 2.565375091 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087641515 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076850746 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084018428 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069875341 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070228548 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066055146 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069057753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06499725 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066299792 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082354003 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069215663 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07999862 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069659613 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068848137 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065833443 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075095265 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065473394 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066583986 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069200478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.0817144 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072939345 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068867884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072604615 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069353541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071730534 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073758845 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068413923 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069203812 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066371984 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069378454 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072535795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072743312 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066275571 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06704798 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068234752 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066348071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069124959 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070119775 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074863675 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069287596 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06754257 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071788092 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069447031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070379456 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06546393 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070676047 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065953729 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071643984 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067679876 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072418693 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069990375 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072011361 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070293526 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07630629 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072465076 seconds)
  done (took 5.261152283 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083661723 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07351129 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064991358 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067784723 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073629316 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07159463 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07347501 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071116297 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070652653 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067424554 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071560529 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07205643 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070765877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0726252 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071543788 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073431486 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064893368 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07084448 seconds)
  done (took 2.655151936 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07503913 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069510091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076920353 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069415622 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069994077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072175848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06531468 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068092718 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068100826 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069662838 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069363958 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071810574 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070045442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072247935 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069237324 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069839683 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072046009 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068482758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069235521 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065562433 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07245136 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06809783 seconds)
  done (took 2.906776527 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09836014 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087538053 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145912226 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08214747 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088744379 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075508772 seconds)
  done (took 1.943973393 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095317155 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104237271 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070169474 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073153565 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080232268 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073564411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074529414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074086214 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082290597 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079425852 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074027246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082351016 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081853597 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081482803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079582021 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079343482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073595779 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073612272 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070226435 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087703856 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073993228 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082221962 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073549781 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073608484 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073446958 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080909443 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082082961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079371281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07351072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081886344 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079220201 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073356978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082728551 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078956913 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07330357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08222469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073794312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087446108 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079297835 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081212391 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0732365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079922759 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082653315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078956299 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081778029 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07400837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078284589 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074019355 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07423083 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088924165 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079580754 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081490453 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079832715 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082269497 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081755222 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089219322 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080205282 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081066625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079103958 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079625026 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081584718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080739712 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080915166 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079374226 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079864654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081377367 seconds)
  done (took 6.611244447 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108984304 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071164762 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074555054 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07950215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081738098 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073699569 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073792948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073893433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074163552 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070760192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112590849 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073960804 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081781914 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081382788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073714525 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073891983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073866943 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081534296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070478712 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090428732 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073654257 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081331577 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081658808 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081597134 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0795883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079359493 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073918071 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074004192 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074618218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07395379 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078398338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074248565 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081649123 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070253559 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08169844 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07428459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074399985 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078797837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073881394 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07959107 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081642729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087043577 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073798123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074195823 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079307233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074246266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073720057 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070490231 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073797914 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070767878 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079587668 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079152656 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079682673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081225416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07395735 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073778577 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073761535 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0737144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07402044 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079276705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081855226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07387314 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089500034 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074129655 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0747539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08150524 seconds)
  done (took 6.526191695 seconds)
done (took 134.651027133 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194761627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17306674 seconds)
  done (took 1.732525217 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072530648 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10331629 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081639487 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133371858 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070639349 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104450192 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103126644 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082263708 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070465976 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07007479 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070500439 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072432822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134857762 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070248837 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070722998 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07275912 seconds)
  done (took 2.76133525 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103942701 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168978322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108397995 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070040466 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104067419 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077328559 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06869934 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080041512 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074679545 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06944542 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077117379 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074425025 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069059567 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074696991 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074814477 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076929321 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069639321 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077309573 seconds)
  done (took 2.901209783 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103184483 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095238321 seconds)
  done (took 1.580964335 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166775592 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13922716 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211161097 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360080245 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165591813 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153695878 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149802467 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148445255 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120414949 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.144606278 seconds)
  done (took 3.137632457 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104954362 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1596167 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280591424 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123631308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077534377 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097277091 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124651412 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082057934 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084561137 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084050082 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084250665 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080919936 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104692106 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077303782 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078613618 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080031393 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10869477 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077026284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079295619 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079539401 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105456969 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069785698 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077051568 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077344361 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080945574 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081499241 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069611971 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071252193 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079906711 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078633737 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080995391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096414485 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080909167 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110268082 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075293343 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111476177 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080642239 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076931304 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079018604 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077201536 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081795798 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082194974 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077318211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080941222 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069799685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081047892 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069871803 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069892959 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081679869 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071037862 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.0813592 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080311473 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111044662 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070968533 seconds)
  done (took 6.240779068 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110080659 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112149396 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076275804 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120537251 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110294123 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076746893 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109433381 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102548415 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111061358 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074415078 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072495519 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074450065 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08581198 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08636834 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121185486 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113674313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077469265 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074795776 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113008677 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111929413 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073322244 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10439033 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097741389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109880765 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071537592 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073853697 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071998418 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074694252 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081359402 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082828372 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073873704 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08416339 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088672865 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08178286 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071530785 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072530925 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072566875 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083782705 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082883169 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082952052 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.08153595 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072880279 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072141814 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073406918 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073993041 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072403804 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08368556 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084381782 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.083122249 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074139166 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074624685 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074548976 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073261879 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083704002 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081926167 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085233467 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08396443 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072917914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072785426 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076922809 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084658583 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084020041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083772781 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073617613 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083188231 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072376687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084108218 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088020597 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073030101 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074389923 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07275085 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073672399 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073749232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081955211 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.08189724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07443125 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073990632 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072241375 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083606457 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082547059 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072356764 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081350799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071317211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072735124 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073840377 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074324681 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081699975 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084076023 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073806675 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072150718 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073537479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072206136 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071140837 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.08103851 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083219757 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082750595 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082357003 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073477844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082479263 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082642896 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073630947 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08184379 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.200704522 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075439138 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074556859 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083797618 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082627234 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083711297 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074129867 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074117071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082907304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085785559 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073233125 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082279373 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085688019 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083645972 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072324919 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085834637 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073678707 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084520609 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074194773 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083375484 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072495796 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08492131 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072810048 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072894981 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074009784 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083801175 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074446424 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073400053 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074066116 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07374684 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08529771 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087098381 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075849218 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082567075 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083343227 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075733607 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083610274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073066318 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083024434 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073865159 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07536241 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071509218 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085276048 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073374524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072404802 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073176306 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084074307 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073240926 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084104085 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083380594 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073186789 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08572096 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084787491 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082077774 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083888869 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074115844 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072309324 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072514654 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073712546 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083233956 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084687167 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075099644 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073588104 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082361951 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083349653 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072518502 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082420768 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082322412 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082176482 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072662942 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073238918 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084444208 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083962889 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082362781 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081928796 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082078394 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072593304 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081691504 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081787077 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072450386 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088246991 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072539395 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086642358 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083409983 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080790298 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084294972 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084597383 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084088229 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084237027 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087107109 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072137346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072153158 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082421985 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072521509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072597341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081038453 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073176616 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073373579 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086485279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072527312 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083256663 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071376383 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0821908 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070357214 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073177529 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.21805432 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073914579 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074498699 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083380625 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074507467 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081685794 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085119547 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083231298 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072607763 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075044403 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084597749 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.0841149 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073089773 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073335422 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075460148 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082904169 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082785272 seconds)
  done (took 19.675842393 seconds)
done (took 39.417460428 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215557173 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158372032 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179377653 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123387644 seconds)
  done (took 2.158875426 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120621005 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105831858 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097939739 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06889488 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102700921 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069334022 seconds)
  done (took 1.983945714 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317685601 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215193957 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196433143 seconds)
  done (took 2.141721753 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215296282 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199471429 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458260845 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280542187 seconds)
  done (took 2.680744133 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14949449 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093142655 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071815843 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091930855 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.142249383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168655231 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104436566 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130688425 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083317725 seconds)
  done (took 2.504770902 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153851683 seconds)
done (took 13.036675367 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.216225934 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.262058024 seconds)
    (3/309) benchmarking ("sort", Float32, false)...
    done (took 0.166623503 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.186810064 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078806909 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.169235002 seconds)
    (7/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.162696652 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.204617426 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.260279755 seconds)
    (10/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087917106 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087717446 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224996571 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082767633 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078637407 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 0.159528587 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187674684 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174655714 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086725309 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109312465 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.211532565 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.225867432 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078615951 seconds)
    (23/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101876814 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.131016808 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115179004 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.165449504 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.079072569 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.182880792 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09818836 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170620976 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079411649 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100268941 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.18524995 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09411314 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076183842 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191265959 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075057209 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056475258 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.22632849 seconds)
    (40/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09625164 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073452233 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.184156659 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093468507 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083541799 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194479158 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183886806 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.224293932 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.118547197 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094675109 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150935733 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094495342 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07772265 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16154577 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090279168 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188938153 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.435403772 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15887049 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085358141 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191454181 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076394216 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102539154 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117277441 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071121198 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082289395 seconds)
    (65/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.159276352 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093276226 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.145389967 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054190189 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068178443 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072360419 seconds)
    (71/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.163590777 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076844722 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146659369 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093915979 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.162434002 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076868993 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079035092 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.070052924 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142197057 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091680178 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079611368 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154211625 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073422397 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 0.136043446 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131327674 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088173698 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.186118563 seconds)
    (88/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053644008 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.17003269 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20017339 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104603073 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081869222 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092730973 seconds)
    (94/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054691347 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095117984 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053660907 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183794073 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079564793 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08130425 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078478188 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211644795 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053772504 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069460467 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151981726 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076703636 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054023145 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088559463 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055262276 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.196948375 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078455064 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091303037 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076489099 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149879691 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07531642 seconds)
    (115/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10411682 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065577111 seconds)
    (117/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080638873 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076870692 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14555141 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054933944 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.141460097 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076263373 seconds)
    (123/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.116020832 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157836942 seconds)
    (125/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.118306227 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087502764 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053454392 seconds)
    (128/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.116867351 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077477358 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073681054 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074779391 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074558605 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082462973 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066414878 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092111624 seconds)
    (136/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054203273 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05300777 seconds)
    (138/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083171345 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092987984 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074419931 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07693185 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079517189 seconds)
    (143/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068624672 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136254651 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067693896 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076893805 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071515209 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06940147 seconds)
    (149/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.114944872 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141757996 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068429151 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054552972 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067802892 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076094336 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07403986 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068538478 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068380126 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075758135 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093389609 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092460249 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070960064 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082521315 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.11349065 seconds)
    (164/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091645535 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.119056732 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055511827 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053631537 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073782842 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079253105 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068707114 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15947771 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06770997 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075139121 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096801624 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145176469 seconds)
    (176/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056106222 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 0.197063218 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076980164 seconds)
    (179/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070442937 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073537244 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137515877 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067327186 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075257041 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.0536665 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071185221 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091729311 seconds)
    (187/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.332401605 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103516823 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05594373 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.082493579 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.074240516 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056998265 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.076024865 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080880209 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07164586 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085436799 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056856546 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07988391 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20520329 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070343399 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097302129 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071922735 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072318103 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057852653 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078259685 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07132182 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.07133052 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077407095 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070703483 seconds)
    (210/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056522032 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09361365 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070649904 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079163695 seconds)
    (214/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079268523 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121967821 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05581323 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.153285471 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081711337 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082857557 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100215957 seconds)
    (221/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074708279 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078754393 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104418997 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070604202 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075611053 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071026636 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055645031 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055002769 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067993602 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070262542 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085580203 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.081308274 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075606884 seconds)
    (234/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067699663 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095405682 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148378412 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202632424 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071059281 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05587667 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054744862 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079859087 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116280589 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098274179 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163970642 seconds)
    (245/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055499939 seconds)
    (246/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056766197 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055749222 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109517864 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073341983 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077679334 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054917293 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05650342 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070188293 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069835588 seconds)
    (255/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055504378 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070893775 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054951753 seconds)
    (258/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077967775 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058403474 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077473452 seconds)
    (261/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087637568 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109552655 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05606595 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055455943 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078910036 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070577076 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071943055 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055466458 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055662942 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079471626 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056310762 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15815865 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054827346 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072203376 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070690044 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071078423 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054327391 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069644533 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070157831 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069361928 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07066674 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077697818 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065853097 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068355494 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192493356 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077501348 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067982676 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056320757 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056182762 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069593844 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107365845 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077572552 seconds)
    (293/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.057003489 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0719405 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054461631 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054233313 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054992558 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094997293 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092367492 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076916083 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055561192 seconds)
    (302/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126460165 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055096159 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068525325 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070812011 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075496062 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067290216 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054394391 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054767648 seconds)
  done (took 32.463067611 seconds)
done (took 33.890243892 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090918601 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097959699 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080739378 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099273416 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085979802 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081246133 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077651095 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083331783 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084785471 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086254226 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082349122 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058386424 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078910511 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079565875 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079417301 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095953141 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083876441 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07802421 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078053535 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068669116 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077985938 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069957259 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071617666 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057752955 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083967001 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075753338 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076529483 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079037863 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069843181 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069597622 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073509643 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078051203 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069074048 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082629905 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076685145 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077968131 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079217983 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080806663 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071570077 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069799084 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078885543 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070089063 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077127339 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078151098 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076881153 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075537722 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077901289 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08162465 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095482259 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07178473 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079869916 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080006357 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079752191 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077096125 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074419661 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077225625 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074357856 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095414297 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07866084 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071609597 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078598824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078587367 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075647501 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07691103 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077132262 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07967936 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080147157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075537971 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079463363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075730732 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069311354 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077055629 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073353734 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069360035 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080480058 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082120435 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068015547 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075906753 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076844108 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075163335 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068567123 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071000043 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072886682 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075811574 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071172265 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057872451 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074329748 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076085378 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06886578 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077462747 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076369043 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077313317 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071226884 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080042618 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06891395 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074250598 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069439009 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069496537 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070855643 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073777431 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069169507 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071311032 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079605146 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070822632 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07682251 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082797339 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069361585 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076233985 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068409554 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068699863 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085346994 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079406591 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0692826 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071994967 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068687613 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076458015 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068344097 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069310203 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069016784 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068950798 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075374036 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069449892 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071425321 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076329972 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082442186 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068933564 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072792174 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071168629 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068843582 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075583609 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203326798 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07059912 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072734858 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065945436 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071883588 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069946298 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077383465 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071741094 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077201858 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070495579 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078203354 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075034646 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075132647 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075175023 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068635792 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06300525 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071526999 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071116186 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071409297 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069065957 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070776964 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069356988 seconds)
done (took 13.199364651 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070633206 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145810629 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101579441 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100226993 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090030299 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070684607 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080011953 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10382151 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071569354 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105070084 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092104657 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090751986 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119689872 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068349319 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069588696 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074355033 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0712596 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085225898 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103861784 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091375346 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119123747 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069015956 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096988944 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09332581 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092374647 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098127135 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071220437 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074289489 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074452535 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106080333 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09305469 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074395869 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070605862 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102446006 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09812151 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088003571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070353008 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08745981 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070547759 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069339937 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071506485 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103401427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086866964 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084808797 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074298666 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080725559 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071002448 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087843371 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094519366 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083310326 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090093386 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105612709 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072888818 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088187144 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06816729 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090042443 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081196335 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07261538 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070414716 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077910435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069999836 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073682997 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085060551 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084708528 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073976118 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088880183 seconds)
  done (took 7.202793623 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088361501 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097092474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088554789 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088753651 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070077224 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069943136 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069893716 seconds)
  done (took 2.150301647 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070484531 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093208719 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093915946 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094566959 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085482604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091925417 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079614891 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070260851 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092296941 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071580444 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091669851 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105265084 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073840052 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078250512 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094961946 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070462876 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095425535 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070058259 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074004684 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095201126 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072568162 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101017475 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073506812 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070326431 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085273339 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070766749 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119090038 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07475565 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072570163 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073247815 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067923458 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111769351 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084576766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078510048 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070635702 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085481062 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086092483 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069095478 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087872083 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080143512 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084457699 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071266831 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07158566 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068586628 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074857749 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080846337 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071504927 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071473914 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072830501 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091794907 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071629649 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085245377 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073663008 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076723445 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072225524 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077480759 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081159292 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071730011 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091045024 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071870214 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088864434 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087122132 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084821365 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087183838 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072969263 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084784913 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085136895 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073047553 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072614035 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074632756 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087289287 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068624759 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072325414 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081500489 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072403392 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094105142 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094802673 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072578679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084298736 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071532039 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070555663 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07050448 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09473699 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075827753 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07032304 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075192845 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073953516 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068711462 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070063457 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07443336 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068399875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072354555 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073912849 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073633875 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073632239 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087421994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073169176 seconds)
  done (took 9.304023207 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073298928 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072163774 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073040434 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07142679 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071826242 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072187277 seconds)
  done (took 2.029792868 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097132037 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072360639 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085066324 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075589001 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109196504 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091185303 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091030059 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081451819 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087841841 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082824767 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091143361 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092101415 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096004576 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076772565 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09136964 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075002851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091726085 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078740406 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08210013 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076528462 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090811581 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076060901 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077213025 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086025509 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079260367 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075904546 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081816236 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082427586 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082092931 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08223083 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075927894 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079696323 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074270354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081575538 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09182309 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075420176 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075177189 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081228167 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075946471 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079861019 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092219616 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076642743 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078110832 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081048456 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08251519 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074074231 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081148916 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083339079 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.09060745 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081253984 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080811457 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074855242 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079546173 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080991465 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074169574 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081652903 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082007958 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091126988 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075958015 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075120167 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072417959 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079850151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081115069 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079824905 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084691778 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080649396 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0743353 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07673875 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076477719 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075156972 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080943927 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072538254 seconds)
  done (took 7.455160846 seconds)
done (took 29.707673154 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539063866 seconds)
  done (took 2.100692139 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.634685765 seconds)
  done (took 2.219135057 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.571498665 seconds)
  done (took 8.154469323 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403431767 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.510720931 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755014847 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140092737 seconds)
  done (took 3.42941009 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.72462209 seconds)
  done (took 2.315146073 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234533561 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220962243 seconds)
  done (took 2.053791772 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386026591 seconds)
  done (took 1.968069175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.156003519 seconds)
  done (took 2.74148445 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266426317 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184064347 seconds)
  done (took 2.041737696 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.492223867 seconds)
  done (took 2.08057653 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.898450378 seconds)
  done (took 6.488098415 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221761263 seconds)
  done (took 1.852463012 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244112492 seconds)
  done (took 1.832161309 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.82839231 seconds)
  done (took 3.417591854 seconds)
done (took 44.283706244 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087284919 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089067533 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089709227 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085649664 seconds)
  done (took 1.929477117 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080806404 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076103694 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080321857 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076922312 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080709563 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076707511 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078299746 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079061655 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076542039 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076858741 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076692634 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076519033 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078884945 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077777121 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074993054 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078834284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079793869 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075994655 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079082382 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076561627 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074228107 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07870313 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078317151 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075725544 seconds)
  done (took 3.456497516 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082499929 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078721925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079108038 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07702602 seconds)
  done (took 1.915401899 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081873753 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096215728 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092830191 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081692948 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096613636 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090729187 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073250997 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072960421 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074097389 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081462656 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071914784 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100454647 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092411072 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081479163 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084725966 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06954336 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071711645 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09194407 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081854932 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082491835 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074033255 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082341537 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072064614 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092399579 seconds)
  done (took 3.585038035 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090524177 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109041334 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085027921 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093915095 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096066012 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069240804 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091578166 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095142901 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130719249 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068867689 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074938347 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070345127 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078239312 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071071989 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085145941 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112879277 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116548269 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072974329 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101385283 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069159508 seconds)
  done (took 3.38726045 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076315626 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072922277 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071558069 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06955756 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081710744 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076432607 seconds)
  done (took 2.055728403 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071511694 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071075773 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071633841 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071616449 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07700492 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071528203 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070268168 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071667959 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071401184 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070755988 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070449464 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069568111 seconds)
  done (took 2.460354145 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205437665 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072937733 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071762113 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0697801 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073807279 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069807425 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085055869 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071443734 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096548641 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071598337 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070199965 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072484936 seconds)
  done (took 2.635100189 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212583041 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080322695 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243562359 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156448947 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115716855 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120794823 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117545658 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117825784 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146460499 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104619519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171832565 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171905516 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111584262 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141881808 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093456068 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103429204 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158944093 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168717928 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109853244 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173226793 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150387912 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131002354 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151636148 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106587528 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109472915 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126153868 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075315084 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175566386 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138206008 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149468647 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11566583 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096571598 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181075862 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17648758 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145591741 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152912384 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089567097 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106402343 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138131541 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20526539 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0929636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167988796 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251935071 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085546533 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140250525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12299576 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122785041 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109490968 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094495437 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149761842 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188292305 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141742723 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09148411 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128578762 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118645743 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118198832 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118318232 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187800948 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167312768 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132067216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074452029 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112654462 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157810762 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13748141 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112115525 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129624367 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095926903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140201988 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158200957 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127338403 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147650011 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121592165 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093131518 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122171252 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144365016 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131160067 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16666463 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128834177 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076467908 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127972237 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105517179 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084357433 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153830617 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079479759 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179627861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103709028 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110768116 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131196536 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113387839 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113803578 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164138374 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148907252 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248882772 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069535238 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110635474 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124579711 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151288078 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091489226 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11291207 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119470967 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080462261 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141547125 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078863967 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126835889 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079108017 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128851972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133320445 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082080235 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126717891 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109131815 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104278891 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136226629 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163304419 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09315852 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08577969 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172900018 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126480951 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107325367 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149795488 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161953932 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102472989 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105185106 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156531714 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184267342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093321348 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165959991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11006755 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087223793 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091808653 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127795517 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115591526 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127741626 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08523653 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12216311 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17200882 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07882059 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099185137 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138135449 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082938881 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084891493 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109639186 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109558999 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099936701 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103553454 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106246955 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140054233 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126954985 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108774324 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127512747 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245846162 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177849584 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092323316 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105874148 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109711292 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073886375 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139802979 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16048824 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083525511 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168699832 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12689492 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121670704 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123473292 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087348387 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14463196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082981236 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07397519 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150740253 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113392717 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113961969 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155044636 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12056229 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128988543 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125541156 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137229031 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134613632 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133295572 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110018179 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091130695 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115094441 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131588248 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076853544 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094334964 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083417963 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108300714 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099122356 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086648675 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144998306 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12760051 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114229263 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115165787 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100709453 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15084808 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08007159 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132832937 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122499198 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100122679 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156125244 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155611431 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135230274 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102631608 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141254134 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073829849 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077598975 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092838252 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269205129 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087269578 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087634609 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120877813 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150761915 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134080618 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141789559 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127477817 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123343175 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159832787 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074381293 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124071945 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150762932 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126079966 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107667547 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093775402 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102973331 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146132052 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111597829 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186582532 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116514278 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126509252 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15680817 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10554689 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083243652 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10689278 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139813152 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108007492 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146653056 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103480506 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09195948 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112726633 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078187317 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102547552 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130431171 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122402057 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138313394 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119443226 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137535465 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081448639 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119767885 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125756444 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125591375 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067805279 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12439406 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165262686 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098633126 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121580201 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155897574 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082761237 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140355141 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178816195 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29312243 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089896656 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113464595 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123678695 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131474256 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124003862 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145079334 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112158923 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142004514 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114697528 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089161224 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091328992 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101378911 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109029358 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099152241 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109254098 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117915843 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099308401 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136474784 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107413938 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113203229 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120701838 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103607658 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094757702 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100760576 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179863677 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123288609 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176798417 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102794805 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147886924 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16796903 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07862703 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082427951 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081710506 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143790851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08858839 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133802323 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112227328 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121505221 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126967918 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145875929 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099021827 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072110361 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114242121 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137427233 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128843074 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102676308 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1082503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167129043 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103762623 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084031167 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11781439 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12079306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106882145 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174438301 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065184877 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109572733 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222456543 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085007141 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132653123 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157952437 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084799758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107317878 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123178572 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116321353 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131756138 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103982502 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113702648 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131468547 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154726611 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13281649 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093475092 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115229697 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131099101 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159510552 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1091598 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10101166 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177626721 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155516381 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163401287 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092577484 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116503249 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117078134 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111552198 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141189125 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087330927 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166228174 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085716053 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140608941 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107232851 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092284889 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132846902 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112922397 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091804534 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151479919 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121302006 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086802106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08210526 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122084048 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123012866 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109564997 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079231338 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143811518 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077107472 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135325318 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164093274 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084574183 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108525074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099598944 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22645483 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112064332 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106409368 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091721277 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102387882 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176503801 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090926679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153199572 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13780605 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117346869 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137679246 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105845515 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644881866 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081592613 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155173527 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121272672 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179285049 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103951558 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121835822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112524653 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125619456 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151599552 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107765394 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18760727 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13735623 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11941796 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083169613 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105970872 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107529034 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091431784 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110955082 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115855398 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118726168 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096794458 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11980963 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127284376 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085714631 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100046935 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159042925 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120698829 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148792165 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145906695 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090063535 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121202384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141025867 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084071083 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124478363 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15634254 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109133754 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104426176 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084734228 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104646042 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309366675 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078258889 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16540392 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125635972 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113599156 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117061664 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115771349 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135746259 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111187258 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124044108 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09567456 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113313225 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116748164 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085517 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081184758 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112100508 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114875051 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101136407 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101871929 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101586128 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154331661 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075192035 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102801405 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118941045 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148727194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178314451 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091770766 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086520945 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122152854 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118072364 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116697611 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124794547 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082198049 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085638593 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083182216 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081462827 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112123952 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116308277 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118321157 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113286002 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166987291 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087162494 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240470045 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098947972 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108983649 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074190631 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082136343 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100518354 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101941395 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111321582 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114896663 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166002332 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099178693 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093408248 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094919348 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077256088 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087006679 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13182227 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113095984 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266479765 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106401954 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065817641 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112879872 seconds)
  done (took 61.075312649 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111994005 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086019338 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099926512 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148057327 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126629608 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204913547 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157187982 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193361752 seconds)
  done (took 2.83177949 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071652401 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099192248 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10792274 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088288246 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069920908 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071983398 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235596482 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08476123 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070102364 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100047902 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081703247 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072243767 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439508325 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069903167 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073734953 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065594297 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070736337 seconds)
  done (took 3.570082131 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.406524813 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627060923 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.360903004 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079434343 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.89914595 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095650755 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.128182348 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140688852 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081707059 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539497864 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410936549 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1319213 seconds)
  done (took 18.611062262 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085210296 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078389487 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093461995 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093595653 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081561174 seconds)
  done (took 2.141449065 seconds)
done (took 111.278658095 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085421966 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.615305864 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056703729 seconds)
  done (took 2.40729546 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086224379 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089141941 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088809233 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086869601 seconds)
  done (took 2.066423101 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077596215 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080019898 seconds)
  done (took 1.865789161 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239884556 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170195921 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100759458 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086774223 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082656806 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084043935 seconds)
  done (took 1.964390703 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075549938 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078012646 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077077484 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079788315 seconds)
  done (took 2.017774243 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079974933 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055139231 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057386859 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060932524 seconds)
  done (took 1.960428286 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091138769 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08297218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081592784 seconds)
  done (took 1.962696894 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105694404 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090384825 seconds)
  done (took 1.903381605 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085395193 seconds)
  done (took 1.792591344 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098184442 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10469277 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136323738 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114169819 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143522965 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113052473 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08762648 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089360639 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080072083 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089990946 seconds)
  done (took 2.764734803 seconds)
done (took 23.008475767 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082295169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369554105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363289099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093028301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672654878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358959616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974402191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096650922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118990502 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071429795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088585306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651535272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963706576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3274703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952596655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327507928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653699274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072021679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07120366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07158535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958370273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071428407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071260588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071689167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650424239 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376095937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071196875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327769829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071627971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073029198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358743746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071630084 seconds)
  done (took 16.247003481 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074569241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124821773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077325772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088335051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073338495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07294372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074520087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072074065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139882473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071491612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08878023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070672959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075515251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071833303 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09104379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071317689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071929176 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071639923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0710888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071607986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09024444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070962122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071982376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07234047 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071678904 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084727387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072565688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071485628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071984342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073414671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074520315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07216638 seconds)
  done (took 4.242040894 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119868572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128340558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077421539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107330691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115385967 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073640011 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147688849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097182795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13059053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07135692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08892957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070969795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106239513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072856194 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091626216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071469702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072498523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072731866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071674131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072071724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092020457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071033874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071873165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072039833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072467103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086524239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072542465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072212739 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072031859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073637965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074851723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07195599 seconds)
  done (took 4.481089349 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076204675 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079038911 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087510771 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08798152 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073901341 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075251382 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077177079 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072967913 seconds)
  done (took 2.35073578 seconds)
done (took 29.031513448 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083094539 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072489823 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076200131 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085681925 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076264672 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082599941 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069727905 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078898359 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075589356 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076515625 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078353067 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070510911 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074642469 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069610974 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077258288 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070851769 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082996175 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075558149 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082863962 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082907189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073332221 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077177877 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078751876 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082535462 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082711643 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082357358 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081098401 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076639393 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072171758 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074112898 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08116944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088496747 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071745299 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082810385 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070989343 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070653969 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075393623 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070998057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082849484 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080714898 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073531749 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079559442 seconds)
  done (took 4.952106415 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091953128 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096458249 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089774212 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064804325 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070322112 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069157843 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09278913 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063254809 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062884766 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092416756 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059175841 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062788971 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066985043 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056888179 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063436922 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061110529 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064760009 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058696714 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063387677 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063458586 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093307845 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056723907 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081273221 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066668066 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059399591 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064891907 seconds)
  done (took 3.564907059 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077295488 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088875814 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093925213 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134885224 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108584618 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083323525 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082833148 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099106493 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09320054 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070719114 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074310926 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096597872 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09365956 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077298369 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07093345 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090201929 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087647796 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072144692 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077014545 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098097419 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090420576 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089226506 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099707525 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086733631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070329855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073805835 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075048511 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085245004 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073599111 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080422079 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074168611 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074283492 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072782223 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082889175 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074042528 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072794395 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098616829 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081778515 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082684143 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07178868 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079545543 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072614318 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097136085 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131363678 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070350928 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077041954 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075031138 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081051231 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070929244 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091398061 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08298843 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070748251 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074124413 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070578422 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07099357 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07449332 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072421885 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072908131 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080152016 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077147282 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095702179 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075720978 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087731297 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070678772 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07956311 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070114041 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072627985 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070224907 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100633983 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073443134 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115487344 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072287888 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072340034 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080471079 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078992115 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077906967 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072017542 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086957476 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081578726 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074539171 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079421885 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074308878 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073789787 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095182427 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073539163 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072779398 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072150191 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07687142 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074547059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072671462 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085029088 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071108705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074286789 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089509221 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071031012 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072426879 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077296722 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075714328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07057865 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082730692 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074826543 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0723774 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081586677 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0711205 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074198096 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084228891 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077555125 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069893051 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075444083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076936496 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071656104 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073267714 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074302307 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073112887 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08020655 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078065743 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076055426 seconds)
  done (took 11.132753335 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169968842 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162871379 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073232937 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15623419 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080050123 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083477396 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156289503 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098465578 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071118448 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072075236 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071585535 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114363353 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109760316 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119919457 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082665233 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070756596 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08826871 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118581293 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158213916 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152213222 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087962019 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081195232 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073817255 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07259389 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073770138 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08254398 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090194565 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082789807 seconds)
  done (took 4.615389718 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085200848 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109900259 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079176549 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095912427 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094395468 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071531525 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074616689 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072939852 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085428194 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082148571 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071344321 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076826926 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078154145 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074750258 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072254269 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078916117 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078842443 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072908753 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074972209 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076649241 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082368133 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096460779 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076366683 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07072317 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076348529 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070597311 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066608851 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088005936 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071906633 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099295891 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069052716 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076519988 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086541339 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072463653 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072096823 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071320566 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071162821 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071429419 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073833718 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070356218 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070329885 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060830471 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070777724 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082619532 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078340932 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059940439 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076194364 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076620088 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076982418 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068514435 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07417402 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074119395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07477854 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079133405 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075764763 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076713927 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073283447 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078489135 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081017599 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071777738 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068742653 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06946585 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075823465 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068516289 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080108263 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075870802 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069801095 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070932757 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073284173 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077983969 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071094498 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076205188 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068811979 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073200606 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076465591 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073117448 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072796119 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069662339 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070992395 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071631054 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058312533 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071364621 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056360876 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074903485 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069853903 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069985742 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07155406 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076336402 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083791324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072821567 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077367314 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072445623 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070336483 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074603849 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063777872 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074145025 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082968189 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08622131 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07102365 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06886999 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08531273 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076449846 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07024088 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059027312 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07559606 seconds)
  done (took 9.640806408 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094301924 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074253856 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088163028 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095312355 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09140055 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078500838 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081067874 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072515216 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087353602 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077804415 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080812524 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071648502 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082326699 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081663296 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073291759 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081762523 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07595379 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088820874 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087142432 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071547219 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08092963 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084459142 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094721269 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0858134 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084506043 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085761631 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09542194 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081937669 seconds)
  done (took 4.094861943 seconds)
done (took 39.714306146 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.813120915 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.973695364 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.796262197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.142829221 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.934774827 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.813081959 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.992287237 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.794518902 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.02192133 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.825853023 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.096709758 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.031392239 seconds)
done (took 65.969935497 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.891550498 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.932856674 seconds)
    (2/2) benchmarking "String"...
    done (took 2.031272407 seconds)
  done (took 5.691946535 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.079981264 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.357522974 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.039446329 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.79026527 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.79453028 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.104413657 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.583227466 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301212002 seconds)
  done (took 30.700078474 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.956477521 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.008647779 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.483957234 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.511218151 seconds)
  done (took 15.73941593 seconds)
done (took 63.914478818 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.808060571 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.790470497 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.799601614 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.77369952 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.847667624 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.807180382 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.165533731 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.85191793 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.788246289 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.780666906 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.790104475 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.262691775 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.800952124 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.165047216 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.787655844 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.793902768 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.836767925 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.346808058 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.946557002 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.806472398 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.787451678 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.810776996 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.788716846 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.785509301 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.788248387 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.785806953 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196578463 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.798993339 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.404438095 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.790902332 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.815187323 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.329340382 seconds)
  done (took 204.758550843 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.787201413 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.729540055 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.767334947 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.833307154 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.165244757 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.969360748 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.894728273 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.216690725 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.79053018 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.806552578 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.002591154 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.787735602 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.021160199 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.737128946 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.816330232 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.876808223 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.961704298 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.033115909 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.81995235 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.946075579 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.813762543 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.017277846 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.956352908 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.983110517 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.807131904 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.889582371 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.79891572 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.801282562 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.138769317 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.928912389 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.822790135 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.7967205 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.017265101 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.665358403 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.811414704 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.797261591 seconds)
  done (took 170.736503695 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.957296781 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.793106108 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.791268227 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791564709 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.803712522 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.793094306 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913268858 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.921955674 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.411036965 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.261018475 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.793831482 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.842505239 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615626407 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.792881348 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.790996077 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.859495051 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.80568993 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.79277083 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.807433317 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.820450752 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79410495 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.792686155 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916343399 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.80528714 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.892454563 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.802224913 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.793387206 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798192379 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.165593475 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.793630956 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799202213 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.048669584 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.794161196 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.793383542 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.633054676 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.894098461 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.876474296 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.801016927 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798765885 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.79536702 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.010487327 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794594983 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.794700968 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.795955359 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932182506 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.797601701 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.915015957 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.796099586 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.282217283 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.79475811 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.794539504 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.794541972 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.643340526 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.385896803 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.796075479 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.794407466 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.797524791 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.793491423 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.795283735 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.800125715 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.723796666 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.868294804 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.796522703 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.798979025 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800509062 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.79493789 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.909070833 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.798192469 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.848558538 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.853596365 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.917269957 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916663021 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.796670846 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862913702 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.887362831 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.794656074 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.795018312 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.795349549 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.797407447 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.875882536 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.795846432 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.927339999 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.80307637 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.798020426 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.846605013 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.864072697 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.796224193 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6395662 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.797368611 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.795413708 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.087997415 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.861909532 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.796525733 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.797079758 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.796526215 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.939034916 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.795667497 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.924829416 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514079796 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.798902271 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.610139828 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.796341162 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.947944974 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.797987271 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.940045341 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.800049164 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.878031954 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.802542069 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.798667356 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.796828792 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.828037779 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.798281052 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.856317488 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.796942963 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.172567075 seconds)
  done (took 405.869785229 seconds)
done (took 785.102393036 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.454569396 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.423176135 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.523451779 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.445302776 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.419872224 seconds)
  done (took 14.00364766 seconds)
done (took 15.739119012 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.88614594 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.893732136 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822904474 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.888906907 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.819217368 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.8887096 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.872818707 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.824794243 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857246586 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.822109499 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.859230659 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.823379319 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.811915033 seconds)
  done (took 25.80799798 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.028662829 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033713017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.872460066 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.024167717 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.848947705 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.026243744 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.967250025 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.950067873 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.951701815 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818515589 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.811610035 seconds)
  done (took 23.070945312 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.031475713 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.038359206 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.878203659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.035813089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.851630678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.034441097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.966641311 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.956917788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.951824966 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.817349381 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.813046233 seconds)
  done (took 23.112900754 seconds)
done (took 73.728475472 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.809818404 seconds)
  done (took 3.548485228 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.836482931 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.002856211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.815642046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.813155337 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.808187031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.809351723 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.812373913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.808704649 seconds)
  done (took 16.446439538 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.806057362 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.807492298 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.804633673 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.807859268 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.80707438 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.8095247 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.808076369 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.805161917 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.80512255 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.804388248 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.808328987 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.80691046 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.808237236 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.805121 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.805060908 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.80844768 seconds)
  done (took 30.646943505 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.807178225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.804600534 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.805101993 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.806261312 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.805168992 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.806273531 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.806805047 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.804665111 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.806132883 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.805577539 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.807171867 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.805143518 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.805445296 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.804961099 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.805637954 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.806548014 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.806741037 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.805914599 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.810864331 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.806136262 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.806123957 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.807191517 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.806851828 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.80701151 seconds)
  done (took 45.091924851 seconds)
done (took 97.471503933 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.57412061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.459139366 seconds)
  done (took 9.772893979 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.810685777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.810926086 seconds)
  done (took 5.416663063 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.809697065 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.809887373 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.809625447 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.809773717 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.811172646 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.809629336 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.810422343 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.809718378 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.810142695 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.81130542 seconds)
  done (took 19.84205996 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.810521752 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.810742653 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.808196245 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.810638196 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.811461167 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.807402936 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.810123354 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.810551607 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.810239633 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.807756478 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.811370027 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.808670176 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.810158942 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.807944632 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.810549475 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.810025839 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.809012758 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.807853444 seconds)
  done (took 34.314888226 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.81217591 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.810978627 seconds)
  done (took 5.365251803 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.807315347 seconds)
    (2/7) benchmarking "second"...
    done (took 1.808262424 seconds)
    (3/7) benchmarking "month"...
    done (took 1.808226537 seconds)
    (4/7) benchmarking "year"...
    done (took 1.80827442 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.81034109 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.807829192 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.808374524 seconds)
  done (took 14.400501306 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.81166258 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.967449951 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.035216944 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.451577586 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.81224226 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.813927631 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.748040676 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.815295108 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.817075464 seconds)
  done (took 20.014622322 seconds)
done (took 110.866560525 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.589150845 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.806939629 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.036643032 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.894592624 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.828314149 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.104869247 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.850266859 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.122435636 seconds)
done (took 42.975746335 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.824956407 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.083828197 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.087103571 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.832994444 seconds)
  done (took 16.74664355 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.792942776 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.331476703 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.84660349 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.398722213 seconds)
  done (took 20.1463523 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.178032759 seconds)
    (2/2) benchmarking "read"...
    done (took 2.15820211 seconds)
  done (took 6.083605962 seconds)
done (took 51.545807327 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813080987 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.812835727 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.813204012 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.810730387 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.813413195 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.810906291 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.81171526 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.812965166 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.814357088 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.814786404 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.813344016 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813016101 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.813856193 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810702832 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81127845 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.811663037 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813499316 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.811108736 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811377332 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810669129 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.811774995 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815440901 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.812096577 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.812272751 seconds)
  done (took 45.244267975 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.815116724 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.813300171 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.814092796 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.814498821 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.811925975 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.814328326 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.817383859 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811681672 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.814828446 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.814869943 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811354045 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.811997626 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.816338161 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.812823374 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816213617 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.812221302 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.815805974 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814278682 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81486684 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.812383029 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.815687403 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812643499 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.813265207 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815929074 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.812059745 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813005463 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.815395985 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.813759313 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816668564 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.813167811 seconds)
  done (took 56.168357494 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.820154362 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.822959174 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.816349147 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.81657506 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.815201731 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.815592414 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.815805521 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.816234775 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.817198702 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.816119724 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.81627963 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.817040796 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.816545095 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.816728185 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.818363139 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.817201334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.818142435 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.81713926 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.817807189 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.818311497 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.818190833 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.817010552 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.816281775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.817183323 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.817106802 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.818702924 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.816402522 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.818087823 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.817466859 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.817408206 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.818401713 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.81739045 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.81835416 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.818290686 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.816973201 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.818277637 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.823382715 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.823915662 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.81757257 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.818117614 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.817432173 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.817873954 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.817531706 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.817311721 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.817862137 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.818145917 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.818595142 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.818097487 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.817616221 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.819646012 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.817788673 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.819152637 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.81928171 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.817948132 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.818385635 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.818412887 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.818786064 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.819081374 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.819550932 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.818903036 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.818570657 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.818817037 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.819823783 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.819512486 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.818913911 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.820071082 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.819154516 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.819363139 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.819539687 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.821453089 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.818616523 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.820000483 seconds)
  done (took 132.660651618 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.818537553 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.81786733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.816419595 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.815962052 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817062014 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.818693875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.816836481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818509321 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816260521 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.820613064 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819509242 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.817230429 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818832477 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.81971628 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819721315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.817074908 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.820230897 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817335189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.820188569 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820353619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819516789 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817590439 seconds)
  done (took 41.754959165 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821873319 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.820664788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.817088619 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.822635262 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.817830654 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820629765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.821184299 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820421073 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822432915 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818438389 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820392416 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821799558 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818286746 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81790601 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817669644 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818860114 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821200723 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818816143 seconds)
  done (took 34.508864227 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.819490588 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.818186449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.8206348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.820249641 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.819456753 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.822246591 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818610741 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.822971582 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.821821411 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.81991795 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.82229808 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822555362 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.822322271 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819873347 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822411628 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.819783026 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.82252953 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820969367 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821577771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819801252 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.820509067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823124619 seconds)
  done (took 41.813305734 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822728007 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822702446 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.821182287 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819000131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819421705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.822377245 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.82210827 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.819180933 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.823781436 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.822496628 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820361672 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822906465 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.820690968 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822571395 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.820484607 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820428145 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822303554 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82116985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823401664 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.821137599 seconds)
  done (took 38.183647051 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824316069 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824694867 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824075977 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825257958 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824693995 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.825947008 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826487084 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824392337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824595039 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826418508 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825251345 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825081831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824494607 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824717917 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826083708 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826224283 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825812801 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825587343 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825927918 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825147569 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826204427 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825789686 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826698214 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.826211325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825851282 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82733318 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825935056 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826646959 seconds)
  done (took 52.869996682 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825769863 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825016514 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.823859417 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.822775215 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.822343946 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.82198739 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.822863545 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.823404248 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825467582 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821232115 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.825934481 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.824490352 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825113247 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.827177491 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824922276 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.826378788 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82545279 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.822623063 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823938011 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823424891 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.826201791 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826298537 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.825204941 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.822660212 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824723105 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.826241298 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82296303 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.824026733 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825696326 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.82474385 seconds)
  done (took 56.489660467 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.844693618 seconds)
    (2/2) benchmarking "in"...
    done (took 1.844462801 seconds)
  done (took 5.446086051 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.823192402 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827149827 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.826137765 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.822956146 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.824055611 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.826716606 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.828356822 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823803921 seconds)
  done (took 16.359320616 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.827215119 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.826822567 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.826824402 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.82899636 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.827404165 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.827728467 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831678973 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.827344582 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.829490838 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.82815264 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.833874319 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.834056721 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.829891378 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827541439 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.82819083 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830433916 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.828971626 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.829316154 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.829574478 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.828063098 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829397588 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829054906 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829514037 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.825378659 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.829120219 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.83735443 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.832219339 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.8286079 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828057551 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.831432036 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.829009262 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.825298244 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.830190022 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.829794388 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.829117944 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.830215441 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83561649 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828698261 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.834859807 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.829363331 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828898139 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.827204106 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.829817186 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.82947768 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830143373 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.829836848 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.830209123 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.826691198 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.829012108 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.834734445 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.837481867 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829422306 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.828864646 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.834837744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.831213038 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.836655133 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.831329153 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.833684446 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.838917953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.841076296 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.843397733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.837733078 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833398878 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.832539447 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839380623 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.852303567 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.836342153 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.828029273 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.828444216 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.830850572 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.83663681 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843558803 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.83887395 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.83176905 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.833383256 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.831238155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830821401 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830827382 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.836321463 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.832971972 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.832809495 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.832107112 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840773952 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852079604 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.831045889 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.832952459 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.831322637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.832191517 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.83212817 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.839851119 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.834186829 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.830704778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.831488862 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.832584114 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.833296919 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.833385178 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.831216276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.83254309 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.828805557 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.833905434 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832456684 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836156353 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.840986847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832953151 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832818243 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.838478027 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.833492091 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831774771 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.839048337 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.832814797 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.833526541 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.833957347 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.839568899 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.829595705 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835830805 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.842130681 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.834613785 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.833644948 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.833278932 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.834244158 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842973914 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.856377507 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.8342967 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.833805406 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.837264584 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.844547646 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.834187473 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.836147885 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.834459129 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.830835503 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.830381305 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.835223513 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.834173365 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.83443012 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.835330714 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.835220356 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.830796567 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.83379202 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.834495599 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.835708109 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.8348277 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.833797688 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.836548668 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.837351898 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.835100412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.836002734 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.840132027 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.833942892 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.836600515 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.835601037 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.832169582 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835553741 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.836245601 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.835521875 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835061737 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.836135141 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.834846585 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.835715314 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835244325 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.836375676 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.834911051 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.83651447 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.838430996 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.836778583 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.840813321 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.836141815 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.832648953 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.835268056 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.836011966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.836269848 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.836481308 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.835271215 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.839334145 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.844240076 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.835673647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.837625666 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.839216157 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.838437525 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839128759 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.83737443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.839523461 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.84416842 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.8381015 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.842221348 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.838587524 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837768617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.835988151 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.837267439 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.836048919 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837344601 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.839273735 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.843811272 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.850404972 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.844682202 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.838146269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.840476791 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.838039076 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.842142408 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.841205929 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.838054114 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.837490729 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837692018 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.83634551 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83798407 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.838981107 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.839488183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.836823108 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.837258269 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.83724744 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.838189721 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837517909 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.837911411 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.839050739 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.835818597 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837454465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839221921 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.837589658 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.835713742 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.836902139 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.83770999 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.838740531 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.841088847 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.844445412 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.837172561 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83960022 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.839985896 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.839701469 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.837973205 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.838639316 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840381379 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.840530713 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844397056 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.838178235 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.840808179 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.84491374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.839093183 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.838448883 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.841624366 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.840252488 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.836137776 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.841430323 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.846190212 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.840175669 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.840306046 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.840661152 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840141536 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839988502 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.8453479 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.837728831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.839829817 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.840265564 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.841520959 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.836855088 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.84111206 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.84077976 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.841328416 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843074639 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.84063766 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.840407649 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.842518333 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.840748217 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.840705868 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.841125452 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843741908 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.848527 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.845302017 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.840456624 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.842730776 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.842137653 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.844680951 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.840638251 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.841451819 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.841104833 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853196349 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.849064406 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847932824 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.841817968 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.84138066 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846302188 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.842514789 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.845101845 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.842793982 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842143564 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.841883241 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.842123784 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.839286028 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843475544 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.841883966 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843124471 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.843165384 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.845064397 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.843592639 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.841499367 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.843204457 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.843598668 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.842228642 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.841364389 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.843884451 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.845101078 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.845070451 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.841577157 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.842056928 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.848296603 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843082023 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.844100539 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.842088781 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.842765004 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.842378324 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.844447708 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.843646514 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.846244684 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.850054516 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.846530649 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.851191251 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.845247659 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85152979 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.844591781 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.845629311 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.853161822 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.841324302 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.843474189 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.843794639 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.844762954 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.848234817 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.845114697 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.844542696 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.848384754 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845149395 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.843882194 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.845974585 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.843819628 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.843910815 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.845165836 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.851767253 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.845551026 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.847811934 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846802548 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.840943611 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.844624023 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.84475756 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.845065161 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.84861635 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.845941208 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.845703649 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.844304883 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.846224325 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.844175404 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.846372772 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.845413115 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.842323325 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.846246781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.851142012 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.845771519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.848791005 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.845266688 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.852481396 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846122941 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.85122836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.846201566 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.84656037 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.84646011 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.847544185 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.846944279 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.846444838 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.84684463 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.847005665 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.846104416 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.849051073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.846455226 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.847935195 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.846830635 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.847041051 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.846201871 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8556835 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.868873162 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.84723896 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.849675832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.844488903 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.848599261 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.850630083 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.847783739 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.845409807 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.849137346 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856520859 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855616204 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.847311655 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.847846728 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844536783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845127175 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.843939662 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.843942812 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.844857996 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.843634565 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.845693767 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.845466026 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.848351174 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.844386471 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.847319927 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845519246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.84666727 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.853845126 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.846045847 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.846372726 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845726488 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.845128194 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.845141508 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.847102246 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.846352194 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.846425814 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.845086929 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.847271319 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851016628 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.851314023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.847850641 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.845202736 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.846670423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.846114769 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.846288417 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.847201528 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.847134681 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846643321 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.846667432 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.846977819 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.846975214 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.845026044 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.845810184 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.846711703 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.846229686 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849441587 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.854036421 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846728345 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.843282961 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.847207836 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84611086 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.846178567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.847364496 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.854319395 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849328557 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.856156956 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.854787144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.852261896 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.846648217 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851179257 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.855543112 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.846494731 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.850062917 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.848116939 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.848956126 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.849935531 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.850765494 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.849040811 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.855007994 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.847953584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.846850822 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855637681 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.849742153 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.848658799 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.849856231 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.851597838 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.848810973 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.845410726 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.848225453 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.848523623 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.85398463 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.849719402 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849192235 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849853264 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.847326236 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.849485498 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.852459612 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.849051 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.848967775 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.845921745 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.850134513 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84889326 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.850827356 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.84575771 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.848165524 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.850004436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.852486495 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.855879056 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.847185344 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852153421 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.848770315 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.849252635 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850019616 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.849622389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.845986042 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.847010389 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.849445768 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.849421309 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.850085808 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.853359672 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.849586714 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.851685999 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.851047158 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.851119826 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854202717 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.860010831 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.857792377 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.847252205 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.850193393 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.851700586 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.853443438 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.852519121 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.852569357 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.851214171 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.851135771 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.851001742 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.850503714 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.850653538 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.853987901 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.866418703 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.850701565 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850271468 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.851338103 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.853761536 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.850900452 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.848754808 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.850484957 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.852720044 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.853281493 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.858986609 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.852569784 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.857382238 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850985253 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.852536188 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.855607053 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.853680636 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.859732586 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.85382394 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.852416395 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.852222967 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.855814983 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.865773632 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852383736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86111236 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.87799868 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.851877016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.853389155 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.854157699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.85215741 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.853194482 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.854718509 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.852866473 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.852757112 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.852149721 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.852470979 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.852906167 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.85799608 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.854197657 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.853427441 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.851959223 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.853173963 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.85434469 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.851150404 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.855632173 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.852977826 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.853492052 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.855118831 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.854232747 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.854021061 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866409225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.862312993 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.852744794 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.854831567 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.850172576 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.855646891 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.856808819 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.862975529 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.860140793 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.855435498 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.855819619 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.856182902 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.85390137 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.850878106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.854601526 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.853398966 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.85428371 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.851245076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.866434418 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.862473181 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.858356218 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.854670509 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.855099975 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.853731285 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.855451521 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.854749642 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.855498094 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.856367259 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.855063912 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859716235 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.854469661 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.85461311 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.857561079 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.862075326 seconds)
  done (took 1100.44240844 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.852724754 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852356442 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852469529 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.853165606 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852365257 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852274859 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852257024 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852750703 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.85348072 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.852162091 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.853820837 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853520919 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.853980456 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.85382906 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853456073 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852826055 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853384953 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.853333235 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.853177104 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854814558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853486702 seconds)
  done (took 40.699887565 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.856358167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.853367874 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.854890807 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855837112 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853283246 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.85566917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.854216948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856748241 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855449072 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852808525 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.856439095 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856359976 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.85295138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.854316934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85335871 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857513054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.857428721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.854311117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.858168675 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.854597062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856689243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.854918947 seconds)
  done (took 42.601770377 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.858324552 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.858149815 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.857091928 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.854133524 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.857798786 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.85458462 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.858914557 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.857492659 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.85815404 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.858519329 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.857538417 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.863399279 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.871562765 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.8634682 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.861389027 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.858938353 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.001689812 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.858272289 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.859245967 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.858918118 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.854236776 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.86251943 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.856631882 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.856217826 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.857469684 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.859445658 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.859233664 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.859613658 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.860486367 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.860550281 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.864492487 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.858747885 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.858924597 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.861618849 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.858723251 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.859497585 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.862573853 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.86038415 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.857236401 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.858457711 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.867535175 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.878005674 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.861070983 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.865287626 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.860495361 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.85975869 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.863004546 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.867296608 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.856404388 seconds)
  done (took 93.080931779 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.859538653 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.86081438 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.857575629 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.859586181 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.861007106 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.860678742 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.858859672 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.859020985 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.856908869 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.857130682 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.862147906 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.857416858 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.856863125 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.860749853 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.860942183 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.858892609 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.857386871 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.857683032 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.858469645 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.857685087 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.858060976 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.861383028 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.860696237 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.858354462 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860169461 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.858623688 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.859291112 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.860945378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.858593885 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.859278459 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.861761542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.861261007 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.861602795 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.858424019 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.858821607 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.86248227 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.862097279 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.858725282 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.861208129 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.858524574 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.860967712 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861329947 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.862258502 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.862375708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.858861539 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.85945506 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.858981055 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.859223923 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.859122777 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.861777845 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.862383701 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.859990333 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.862070928 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.859955649 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.86205481 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.863556312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.859706567 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.86001069 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.862566047 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.859965356 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.860017095 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.86363705 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.860535136 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.862411144 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.861700226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.860217373 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.860051576 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.862536366 seconds)
  done (took 128.278886304 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863997324 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.863330419 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863184932 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863412795 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864236614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.86406488 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.865742473 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.865445317 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.864087621 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.866744048 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.865524754 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.863338861 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.864993756 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.863294809 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.864652064 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864541386 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864866944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864092539 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865673283 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863839519 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.864456211 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.864376527 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.864844702 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864483177 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864628764 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.865519857 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.864957055 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.86444505 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865359705 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.865498665 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.865643638 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.865637802 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.865057089 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865007284 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.865803145 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.866406286 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865061046 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865572645 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.865652436 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.865200493 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.865853883 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.866309381 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866121397 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.866285363 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866097096 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.865792428 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865780758 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.866412962 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.866059535 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.867393032 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.866558656 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.86637709 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866658499 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866402304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86736799 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.866061151 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.866415414 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.867599117 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866391874 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.866618833 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866780685 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.866205207 seconds)
  done (took 117.448017439 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866055151 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.86667575 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.864296572 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.863324284 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.866142675 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.864057406 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.86812061 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.869743685 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.868067668 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.865966366 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86939812 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864459723 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866161308 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866898051 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.863953681 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865027619 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863919211 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.86392089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866923051 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.863554329 seconds)
  done (took 39.112636249 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.863896923 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.866086059 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.864915233 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.865851298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.866962199 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864750551 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.866707964 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866824878 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863563014 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867513065 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.866618514 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.868707222 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865618761 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.86468869 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86779932 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.864832658 seconds)
  done (took 31.651902866 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.865354594 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.86740234 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.86814843 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.868465157 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.865418904 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.86554633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.868111574 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.864605593 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.864776001 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.86767674 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868167148 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.868217063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.869025275 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.868671486 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.865178117 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868592506 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.865967117 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.865550893 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.869161899 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.868988093 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.868155257 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.866525854 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.869929435 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.86864402 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.866366964 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.868109466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.866098428 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.866842454 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.86680674 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.869002785 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.867297964 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.867459696 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.86657041 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.866530198 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.870059689 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.867167722 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.868957489 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.87050167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.871117367 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.869410515 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.869938726 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.867154219 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.869443025 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.869302362 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.866941493 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.869633573 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.86799315 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.867442786 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.867247473 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.868951996 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.871628967 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.871529501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.871052002 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.871093179 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.87121576 seconds)
  done (took 104.542834365 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870696193 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870026606 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.867454975 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.870768488 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.871620151 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.868040981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.871125492 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.86835217 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868123616 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.871487736 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.869548225 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.870809395 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867680725 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.871728113 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.869602403 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871776291 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.868454078 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.868783369 seconds)
  done (took 35.456228987 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.8697971 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869660647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.871443425 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.868960904 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.869644738 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.872621244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869808203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.872912748 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872692728 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.86987385 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870254849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.871466407 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871247524 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.872708509 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.869462678 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869438493 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.872325377 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872914407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.869817239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869357695 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.873562723 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871856392 seconds)
  done (took 42.962861672 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.871889586 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.872160193 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.887683396 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.89375157 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.894191089 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.906862177 seconds)
  done (took 13.128787625 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870631641 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87313205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870611372 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873690968 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873558543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870761043 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871121397 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871131064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874520692 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871213164 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871698973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873489875 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874459315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871919099 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873924294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874043687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871056493 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87247996 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871206035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875622348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872189784 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875091492 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871605587 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873337592 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872400988 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871433015 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874869398 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872921354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872298766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875410126 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875337905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871847489 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87508418 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871746992 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874345857 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87570008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872077438 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874621963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87516415 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872323364 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.87520421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875704297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875388572 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872599955 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876458092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872769836 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873651875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872174849 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872855553 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875720161 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876213532 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873720214 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876444314 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875077423 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876006744 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874644381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87372192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872774142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876349634 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873791718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873868438 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877535265 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87446828 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873487441 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876181428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872791694 seconds)
  done (took 125.463907953 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873979159 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87360519 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874053286 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875256346 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874595344 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874426568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873811483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874464096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87416331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873860496 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877775918 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875274184 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874650258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874369967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874748148 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874969673 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875467231 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874302582 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874662915 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877311423 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874710479 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875249699 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874313888 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875319293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875245975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877967938 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875492788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875554431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87469196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876654364 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875250699 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87518026 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875975204 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.874876921 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875917473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875036747 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875777587 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874590021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875436942 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878012349 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876913486 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878168935 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876562363 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877038831 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876067819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875927775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876595551 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876577814 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879044601 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876832745 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876314274 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877001877 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876872925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8762159 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877503222 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876731722 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876827696 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876320968 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877638792 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880371762 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87697238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876806122 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880289065 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877032512 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877797799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877020502 seconds)
  done (took 125.622226418 seconds)
done (took 2563.737513133 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.938181886 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.072509163 seconds)
  done (took 15.819064704 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.041432511 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.996466243 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.879012741 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.874833453 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.87894758 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.903221714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.890380536 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.879857106 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.879428667 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.879899439 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.879964721 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.068049553 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.934736682 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.880318508 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.880084355 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.973298132 seconds)
  done (took 52.53209957 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.882669654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.884466138 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.895175752 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.885849428 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.884020167 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.900116168 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.919598713 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.888123227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.94637593 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.899022253 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.005448353 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.897389836 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.883826175 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.956456292 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.900310844 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.900299241 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.977421979 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.961837492 seconds)
  done (took 36.279505968 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.96418824 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.885447823 seconds)
  done (took 10.668344437 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.899706623 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.924241191 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.934945212 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.893901565 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.896005448 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.899337496 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.896449684 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.899472396 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.890097409 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.901170637 seconds)
  done (took 70.848705659 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.889605684 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.885259407 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.884059628 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.883849107 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.876223446 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.880177637 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.884779235 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.877322044 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.56233445 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.921920785 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.89218081 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.890117567 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.884434512 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.886291583 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.883199459 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.906757309 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.983227569 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.881991059 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.881581148 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.889947999 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.884972242 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.935406894 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.899697455 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.887191006 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.915786325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.563860097 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.894744107 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.891096137 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.975232229 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.88182753 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.884257697 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.885190064 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.888173239 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.286802898 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.190428925 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.886279871 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.901904413 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.893601852 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.8830308 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.980488332 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.887007432 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.892567857 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.483692788 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.175945117 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.977371583 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.9289757 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.209823805 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.905321081 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.889301473 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.91482568 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.889269646 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.887541923 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.901048307 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.365933759 seconds)
  done (took 133.060841208 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.88199072 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.234030651 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053126703 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884715581 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172780109 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09530424 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885502579 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933653222 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.884504495 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11493653 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.139942272 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.995115738 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.88381615 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.883099076 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.883755018 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.880509338 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045107541 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.957965205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.885039695 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.881028382 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914638127 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129790266 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.009308962 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.882904909 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.913247043 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096791775 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.008691792 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.991869562 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.679896483 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.877393146 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947349024 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.880404912 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.878822618 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.876715193 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.038641675 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.999268504 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96459566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.880367162 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874600185 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.873928716 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.547281803 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078908181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976100656 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.020571683 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.077325996 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.08856387 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.661442985 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.873190212 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.616937368 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.039188768 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.10776678 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.105776411 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.000848448 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.87404867 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.198747098 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.870108018 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.867688096 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.122950474 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015886252 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972523386 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87080346 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868452618 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866344439 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.118815376 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871571336 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968570797 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870968597 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868714428 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.969306861 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973744308 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.011650809 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08533531 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903368566 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.783332486 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.400357278 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118471092 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.939230353 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121957239 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872154453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866851072 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94988872 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.720236531 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123192411 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.120719353 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.123662608 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906313831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.593494667 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.863769292 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.094788281 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.092264846 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.121297462 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094455685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.107266667 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.205304465 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.863482296 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.862801319 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.093050033 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004564233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.865259896 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214310267 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10083929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.431164126 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885558574 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.174925634 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999111585 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.864731848 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.505749009 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.862463756 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.088500689 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.907113812 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.863818713 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860012337 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084857939 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.838802353 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86056921 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.733165065 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.926555115 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.864289092 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099278265 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.863454761 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126605861 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863622826 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103255301 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.055470946 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896094118 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.038914765 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082993 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.863749988 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112511934 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112149442 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.980995128 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138985943 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.764540513 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.858856342 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152338111 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860267259 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.85820555 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.032655852 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.85888455 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007723663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.862341147 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147215148 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885862127 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115992408 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861857208 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116642156 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.897249947 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911740909 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85853426 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987923322 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857948651 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.6852076 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01884628 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858777555 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.855577618 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.437662823 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.856712215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015983845 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.093315338 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882956734 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.932494606 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.530090653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.856204432 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942412676 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884045332 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.245845548 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.853837046 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.11074604 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.857049573 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854166413 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.852696185 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.098454086 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.096037341 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.856281278 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852132538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.757020198 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.851905224 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851462399 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.038411664 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.195462827 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85057159 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05995814 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855629068 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981717206 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854106198 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.940947603 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187847287 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.850236405 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.849951593 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.849211569 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.850077319 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.851175739 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061578992 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879939811 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.387281167 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.991780643 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122488272 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.164041509 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.103459094 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.89888067 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852217043 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107631846 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851251953 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.915429266 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.851997221 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873825402 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085955823 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86156596 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.145317349 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133059662 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.720815376 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900846385 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.850759155 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850030156 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.848187662 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999536256 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943146293 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850092783 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.846500083 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.966717337 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976120728 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063267799 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.850101536 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.961720144 seconds)
  done (took 903.813247861 seconds)
done (took 1224.830397515 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.846814266 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.84765984 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.834667837 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.846884453 seconds)
  done (took 29.158842423 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.851920488 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.84866981 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.851291571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.84842066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.850833751 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.849781129 seconds)
  done (took 12.8794739 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.910503704 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.842073515 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.842027088 seconds)
  done (took 21.373775882 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.916595856 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.236765523 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.957887934 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.272610807 seconds)
  done (took 10.160117919 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.847345581 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.845265718 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.84638673 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.84630827 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.847862642 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.849344064 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.847039955 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.84673963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.848688702 seconds)
  done (took 18.401625227 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.340740966 seconds)
done (took 98.0965493 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.343661015 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.384750312 seconds)
    (3/309) benchmarking ("sort", Float32, false)...
    done (took 5.605796531 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.421370962 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.898938593 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.139726344 seconds)
    (7/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.880737557 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.527431632 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.878565673 seconds)
    (10/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.163216458 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.015731041 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.313046306 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.931791945 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.91145515 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 4.816163576 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.891656875 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.984210975 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.888989177 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.793246783 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.085294041 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.221018137 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.067261447 seconds)
    (23/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.900286583 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.528421919 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.90765404 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.942186722 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.884021437 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.667365313 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.528943856 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.067775872 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.90193565 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.26023104 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.984912317 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.986033138 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.974904246 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.873700348 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.896944439 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.22560285 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.168359997 seconds)
    (40/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.910032943 seconds)
    (41/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.932773291 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.217079293 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.984943473 seconds)
    (44/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.381958401 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.878566789 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.795174657 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.337223724 seconds)
    (48/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.043890765 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.842255762 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.861235229 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.253627483 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.030343896 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.047945653 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12491864 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.851965832 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.854972637 seconds)
    (57/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.078157365 seconds)
    (58/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.011087121 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.041271438 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.250393079 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.869100605 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.853295835 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.002716245 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.876759414 seconds)
    (65/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.10182274 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.162433165 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.845154749 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.497808062 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.778873918 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.925347861 seconds)
    (71/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.936498305 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.887914047 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.853870704 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.973695928 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.232674089 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.000186106 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.855185599 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.973472887 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882618379 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.80285799 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.877509181 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.85367572 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.939035462 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 5.595513344 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.931886493 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.699531957 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.17155927 seconds)
    (88/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.817939022 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.291858908 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.292013925 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.186790391 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.943726472 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.09842471 seconds)
    (94/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.330046972 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.489333902 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042430557 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.855494457 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.858639393 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.451765117 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.862229059 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.931917784 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.526586989 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.988688679 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.848804727 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.420284968 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.943453208 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.049602183 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.826804058 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.131898207 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.94906429 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.78416002 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.877237922 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.843362416 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.931475608 seconds)
    (115/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.912154229 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.991866118 seconds)
    (117/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.863243885 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.842430971 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.402161664 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271756166 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.077490167 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.867315803 seconds)
    (123/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.023796534 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.952784999 seconds)
    (125/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.069115981 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.100968192 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.006069796 seconds)
    (128/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.083491435 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.006260626 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.06415266 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.078306561 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.097204689 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.551083354 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.846216336 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.788204514 seconds)
    (136/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.269754521 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.201417027 seconds)
    (138/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.762954204 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.226385438 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.954079786 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.946582286 seconds)
    (142/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.850143704 seconds)
    (143/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.934768011 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.849893651 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.089907008 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.875465912 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.909376889 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.847160222 seconds)
    (149/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.981323166 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.854646511 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.847833776 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.203288992 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.180038095 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.869723616 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.117814068 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.935354125 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.087979912 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.87604105 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.312942566 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.997600819 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.963961362 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.850202385 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.980288897 seconds)
    (164/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.938994493 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.831088421 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.447655659 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.051472136 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.367150282 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.142342047 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.853136516 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.082055708 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.247030842 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.874991834 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.846976789 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.936199524 seconds)
    (176/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.837314518 seconds)
    (177/309) benchmarking ("sort", BigInt, false)...
    done (took 7.127387665 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.90345864 seconds)
    (179/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.98096503 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.863564973 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.947040404 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.008346131 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.884044095 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.833295164 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.932787313 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.762537646 seconds)
    (187/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.959398162 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.904496278 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.150241905 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.896714735 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.007217511 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.083740804 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.874625977 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.932384142 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.946919375 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.122869925 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.208660774 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.941699396 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.093018394 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.909123037 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.805619665 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.206029137 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.853512226 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.094938063 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.161975724 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.194087254 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.185471417 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.95370049 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.943380238 seconds)
    (210/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.277010881 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.670934133 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.141646003 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.080681581 seconds)
    (214/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.874150361 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.942660252 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.91949613 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.952129953 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.934839266 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.859291384 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.968630461 seconds)
    (221/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.952685325 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.859956457 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.926452834 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.664021489 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.93091097 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.2289455 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.838703574 seconds)
    (228/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.812542359 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.897985474 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.528471873 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.076885951 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.309503397 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.274969275 seconds)
    (234/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.044866844 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.675897231 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.718753717 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.227593917 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.102813968 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.143994522 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.044334229 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.927682757 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.825550585 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.042850603 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.071658603 seconds)
    (245/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.944419044 seconds)
    (246/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.225570328 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.928049851 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.923724407 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.901431795 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.859345868 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.003833023 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.123432527 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.229380051 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.933500834 seconds)
    (255/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.954898011 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.839716395 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.913454577 seconds)
    (258/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.98636396 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.171947864 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.971650273 seconds)
    (261/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.406493672 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.958436089 seconds)
    (263/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.909258071 seconds)
    (264/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160422547 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.175105836 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.518406848 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.934077695 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.933272181 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.743245316 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.847839242 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.310780349 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.903501955 seconds)
    (273/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.079083955 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.936440327 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.122434491 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.833864058 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.068379799 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.07673515 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.15778445 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.054843482 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.830783908 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.140738312 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.277344745 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.916494493 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.822705821 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.854223535 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.993674963 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.804809023 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.831733158 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.244532303 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.897281523 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.498019041 seconds)
    (293/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.143321141 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.254863531 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.032830802 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.442005429 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.905240131 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.515514733 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.85653321 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.845201678 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.878965756 seconds)
    (302/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.814687177 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.118904417 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.933757401 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.810308057 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.918723043 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.047421783 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.984622503 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.881727999 seconds)
  done (took 1002.491549494 seconds)
done (took 1004.377321277 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.839609909 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831288905 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.815590458 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.836880026 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.92942057 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.839217298 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.821832392 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.813126948 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.860244571 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.862491977 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.811180952 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.837543079 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.81321759 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.812010267 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.811267846 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825280043 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.127808644 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.843047526 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.828601256 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.820934024 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.829804019 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.810745285 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.861025851 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.838040986 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.814772371 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815699824 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.81543518 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.831247712 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.92441574 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.815028574 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.813817916 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.823034088 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.127372127 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.842905152 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.807622543 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.834589644 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.825135287 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.822046506 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.815621993 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.84558946 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.224022705 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.854119084 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.814190865 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.812878922 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.812901789 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.816892868 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.814777171 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818539483 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827322786 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82743731 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.2180452 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.87160325 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.81773993 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.813542724 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.823841991 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.814923556 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.816508645 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830051953 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.833939642 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829431345 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.11954572 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.848656278 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816625215 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.831001535 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821397973 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.254596932 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.85220066 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.818802345 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.224218462 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.862117514 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.256022605 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.864869647 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.816698257 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828296268 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.845108139 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.129411344 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.841517735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.813794596 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.8237243 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.814806739 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.825921328 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83060087 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.819458219 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.821256001 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832374207 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.843085389 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826038046 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.81681602 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.823992051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.835298821 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.82243241 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.8261862 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.819334332 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.811504417 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.825999501 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.819532471 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.819478491 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.821207074 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.819729677 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.826355003 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.221959003 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.874334171 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.81263715 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.813613479 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.816225107 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.830292283 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.225097154 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.859076544 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.838726148 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.863888478 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.818817375 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.120035702 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.851242171 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833246317 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.825284175 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.819891817 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.813696683 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.123132814 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.252856744 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.87479772 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.818981509 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.815459217 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833084037 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.818213074 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.812682459 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.13277844 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.848563 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831655125 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938357875 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.829712073 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.848487008 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.817030749 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.821179372 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.845990179 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832566139 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.848776036 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.820098358 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832945707 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.833084429 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.814210824 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.828702888 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.828591629 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.818778803 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.823487759 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.812206792 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.847585951 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830109311 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831143123 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.840878371 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.940649214 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.815851452 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123825607 seconds)
done (took 285.732913342 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.887830047 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.814835354 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.910719923 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.814347749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.896520598 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.901376633 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.813447989 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.812087415 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.81155735 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2132588 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.812632262 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.813179977 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.817581315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.81280778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.897059671 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.814237134 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.812954303 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.177269452 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.816344488 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.88737061 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.81532915 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.813783256 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.815369093 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.186838476 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.815849176 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.811396552 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.888150599 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.814849513 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.152656576 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.810542015 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.812628703 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.153624146 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.908040819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.835674094 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.826223156 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.823221384 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.899313996 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.822777518 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.898034354 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.898439462 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.912989037 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.858629857 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.816857557 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.809721217 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.817958144 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.819050026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.814117685 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.844854289 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.81742618 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.815184763 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.17685902 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.827101645 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.824038556 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.814905684 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.814220647 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.839698506 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.815324916 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.819607076 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.908370113 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.819372122 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.879506604 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.189288612 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.215559524 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.817676459 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.810861948 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.816459518 seconds)
  done (took 180.799329604 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.884952242 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.891210878 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.885337882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.822972525 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.869044539 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.885877187 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.823647174 seconds)
  done (took 14.809213605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.824955699 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819171217 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.872380183 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.871427834 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.8206223 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.968508393 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819720853 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.830434181 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.817406408 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.869632546 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.818164673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817233185 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.824299463 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.815292762 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866316983 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.828172253 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934232421 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.815817249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.81687606 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.969140922 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.812554412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.825843744 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.866375479 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.823337673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.815445122 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.817974209 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.397312728 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.812044976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.807002234 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.8109508 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.807445649 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.852248653 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.811602893 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.803231381 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.804478614 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.921928873 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.80548296 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.802785686 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.806042504 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.807593964 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.806178049 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.804251603 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.805020178 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.803870502 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.805444582 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.829204959 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.806225921 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.80547336 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.805409039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.806528257 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.855403916 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.805997105 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.804544158 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.802535464 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.860781554 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813108899 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.808292241 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.80416819 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.806102329 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.80339959 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.959621064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.854596152 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.804439508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.856796442 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.80621912 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.80615137 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.806009175 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.805521198 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903652398 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.805993541 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.857016809 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.803956556 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.963616875 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.830534677 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.806756279 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.80955925 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81040546 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.806772656 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.801852435 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.812696319 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.80359782 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.807459092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.812716759 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.803097197 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803220591 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.917685855 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914038438 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.803945633 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.819855556 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.815097968 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.804343218 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.859229183 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.807085998 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.805410194 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864901733 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.926811911 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.861604125 seconds)
  done (took 199.965012941 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.812375969 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.813827833 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.808807148 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.82320795 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.808388547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.807973804 seconds)
  done (took 12.609284576 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.809712206 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.809897624 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.806906717 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.807785792 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.808040691 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.809308037 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.809684761 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.810648717 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.812817416 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.80710773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.80745514 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.808657123 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.808629101 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.806939685 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.809020329 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.808228445 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.808917586 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.804326532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.806942293 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809622135 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.956731733 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.809026877 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.809723551 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.809478846 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.813677021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.807573632 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.818000368 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.80822296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.806549833 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.814134596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.808317611 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.805684461 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.804591203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.814815698 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.807264593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.804023531 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.806038399 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.804356309 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.800827304 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.804722399 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.800920476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.801037982 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.800332096 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.802659732 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.80605222 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.803865052 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.802597592 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.804949503 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.800047727 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.799585986 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.799337263 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.796485534 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.798025582 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.799935662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.799608191 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.80363838 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.805329818 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.799907035 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.798919755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.797299403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.798276385 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.798603178 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.798008447 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.803813877 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.805739207 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.799391062 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.798854596 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.801984073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.797948772 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.79854597 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.799746225 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.794174077 seconds)
  done (took 132.837640042 seconds)
done (took 542.780314057 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.982076831 seconds)
  done (took 8.706110493 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.853857606 seconds)
  done (took 8.625039551 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.266289933 seconds)
  done (took 9.996801561 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.824932904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.821082479 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.805720307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.805899148 seconds)
  done (took 29.00903921 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.886026613 seconds)
  done (took 8.615804163 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.817718429 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.793210698 seconds)
  done (took 15.371089959 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.977522478 seconds)
  done (took 8.716818754 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.152211064 seconds)
  done (took 8.909176266 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.810149666 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.825697129 seconds)
  done (took 15.382278915 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.779075187 seconds)
  done (took 8.508755135 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.23568374 seconds)
  done (took 11.06668076 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.821490723 seconds)
  done (took 8.661209835 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.836813758 seconds)
  done (took 8.566934908 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.905797205 seconds)
  done (took 8.637271874 seconds)
done (took 160.499016919 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.799976243 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.799951194 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.800741689 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.79953029 seconds)
  done (took 28.930099859 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.837235847 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.838251657 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.838497713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.848290755 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.840507305 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.835685846 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.829184507 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.829710981 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.847102115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.838656335 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.838625066 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.83957153 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.836612919 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.829144752 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.839618864 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.839564317 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.848550489 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.840054383 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.830028719 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.840179597 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.804318222 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.848419645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.840849778 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.806441395 seconds)
  done (took 45.794778968 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.001105594 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.87881036 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.958161711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.856927627 seconds)
  done (took 9.4271507 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.856378521 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.857865776 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.86956371 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.908651658 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.934106609 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.866782371 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.831915747 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.82691268 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.813283793 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.859043216 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.932813535 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.851359468 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.943371403 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.806840985 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.003147036 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.805717745 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.807141885 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.858176126 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.908355669 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.92300555 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.806667869 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.857205291 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.860398494 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.852762726 seconds)
  done (took 46.574535183 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.804272172 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.812000458 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.809087807 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.805465186 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.805010582 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.806019946 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.810461827 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.80713756 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.826024283 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.806316288 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.80360455 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.806628312 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.804331786 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.805534639 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.805267285 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.817775443 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.819722724 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.804904562 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.808044284 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.811577578 seconds)
  done (took 37.913141536 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.799245736 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.654193715 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.15217492 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.057046457 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.799878111 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.801069868 seconds)
  done (took 30.996901853 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.82013705 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.813566684 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.806257276 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.864533194 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.948309201 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.813896245 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.807133504 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.819992561 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.855591427 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.872767159 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.830345441 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.836663759 seconds)
  done (took 23.822805104 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.803344389 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.817736872 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.803005161 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.83346881 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.817867897 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.816166354 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.815700689 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.80029301 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.822303705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.827918897 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.81554121 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.819482571 seconds)
  done (took 43.530658067 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890966369 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693282917 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.836618032 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591903453 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.339239158 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013828872 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453832542 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144447437 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.806256827 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075693647 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.773787471 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057720809 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065511022 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811168116 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89931065 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.258095111 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112690759 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043299926 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836982629 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497849428 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024477408 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.485320392 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.608819411 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031001413 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11069852 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.031418268 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.159921093 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857176849 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040287405 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938753555 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909551062 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900291581 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17328395 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287486652 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016162599 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910533372 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.556674987 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.618999691 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.89385544 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.712836266 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.808350281 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.040600611 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913719169 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904912834 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840015179 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.529234234 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245237238 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.909264557 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.606808747 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904865999 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916337089 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994774396 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.908365639 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.722472308 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861185 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.185797542 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.901834229 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911543595 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472122791 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993772887 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.606699533 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.849509411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.004346857 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600242577 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386989628 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.063422959 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.916788612 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917535065 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849094746 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.671097667 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045790099 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062590648 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.936129399 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566836384 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222134131 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.01933349 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.00472436 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211538886 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.859673714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.853532681 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145082921 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874553626 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85149166 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.773963868 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851908348 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182338959 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952407382 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.541018355 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956114343 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.256979875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93130511 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941220626 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926110387 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142260793 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.802472045 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920097111 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.692017714 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209255736 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941332439 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259255661 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854140824 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.923437306 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175015821 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.131037331 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233105283 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.373610558 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083961989 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921466741 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.004206067 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.791817101 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063757133 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.199305002 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980156723 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004219517 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058893061 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883295729 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222039177 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950437731 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.095913422 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.986759722 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193699944 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.23539296 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175324713 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008483202 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92893082 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925529631 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.639374043 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.55418948 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.151169774 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.92599251 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36628624 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047959152 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.926843048 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86091392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.592333394 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.949370863 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.042787306 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149230589 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.813467457 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313900459 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860891002 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071775195 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.042056276 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.151536116 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.586328948 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.014157514 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187391321 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380487092 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.214406761 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051203588 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946449389 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020599078 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94886494 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.325698576 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2954088 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.930907758 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.932048859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.687453274 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.011294515 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9321687 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.933154255 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.751572262 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215999118 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9542431 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933407553 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.822179613 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.943137771 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996025307 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933821771 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938729492 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.433931487 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680702001 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.939695272 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.673395233 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181575632 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939795014 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.722933162 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12780551 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.015670021 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210362584 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990119061 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.866134408 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.63343095 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.633693678 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930830505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867071522 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930423676 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939600095 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941491588 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.130865743 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21444182 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975509138 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.687023706 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.050695617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942219729 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.936312079 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931047113 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.425569996 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035020816 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510973742 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054883272 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069625435 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.945284337 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866329762 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.936318339 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936784524 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933389412 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.885649432 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984446714 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.616276188 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395085933 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194107658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.579288874 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950631844 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.711017527 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.067261353 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.954692593 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716214599 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966909766 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.034806386 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012577759 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.95512442 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.705509297 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.718070116 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507660267 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260042589 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254034833 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391200798 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.397150941 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279470891 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283066945 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180470226 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474698754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005811172 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.293090374 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88945154 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032803161 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.60142555 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307229526 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961158162 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172941934 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337895681 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.800179475 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111373514 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157485429 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979882791 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.81139118 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.986190329 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.186180882 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101620828 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.749388068 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182516487 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282353037 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723844866 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068118798 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.944343962 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.64268921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027283954 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.657185177 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.307413138 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.544338785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.998590513 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44313838 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.952145338 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393457016 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302403185 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351920562 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.036252869 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883075984 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.957572739 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.957327991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.946623401 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.930818759 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.906540699 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.239995373 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958524093 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181812107 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284381573 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21329994 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.852108539 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.952562135 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946391414 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246101159 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.688630021 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198990173 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.356505927 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.553839925 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958063737 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.881926574 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882867008 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.6513437 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.951118289 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922112836 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168865655 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.055590581 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904125014 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375254234 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27214149 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.204424254 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.961496112 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224123613 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227313985 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685204652 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97783765 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.04825184 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.732450962 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.657868635 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171450565 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184653928 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748246123 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.180062697 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.999191792 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.912889912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.948447625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165509651 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.174792678 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.980751848 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205686936 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.67432365 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.962381284 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334716729 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009337816 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.988116092 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.168671485 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.043003466 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960732508 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031687844 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959574503 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.960173442 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.960934668 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999931532 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.002131767 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.088792402 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.964162051 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041096726 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.044952457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.558733152 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.968917279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231396702 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315495191 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284437623 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012163051 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.951187524 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952525677 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885651766 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089705966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396463178 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223980787 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080127777 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.143155339 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977121641 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760203082 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3004288 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273963236 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226122459 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.848139999 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951827821 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060769307 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.177484187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962798571 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.163413905 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180855114 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267138575 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424033381 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.151968701 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400698969 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227042075 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.323883893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.952104972 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548679897 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.967026144 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.709777491 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.993413183 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00424661 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24471363 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965269958 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334325912 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975348912 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.152435072 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.469383161 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71050662 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32155507 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.948940674 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016536629 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233060033 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344445109 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268902408 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021046944 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964285201 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.650700648 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091089297 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.936076243 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.226516458 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.95413962 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16555406 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.665477418 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.963841417 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235686116 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267398579 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.951542027 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.954394342 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023261334 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.969884146 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178368408 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21618468 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207744608 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964204795 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.957246233 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.770646287 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2348001 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013388833 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890206932 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.959206717 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052945704 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202855642 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974705663 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.472176379 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.656874114 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255864347 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.875971727 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977261332 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413674316 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409606835 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285916272 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.508513404 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189816468 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.513891468 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.863863273 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338485405 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.96135664 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407468726 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342586284 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.959556755 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.516989006 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078371962 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.231668978 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278634253 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.96357179 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04354664 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.010346991 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179960042 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555746249 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900882057 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96103284 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.018534125 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.957643251 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.08987076 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969346135 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.08416057 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01408488 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.77694999 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449680694 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.962700508 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.948449236 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.698240783 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.583738693 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075186483 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114249082 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968836352 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.67005607 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.250814987 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.215498649 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.541060355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.035214616 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.963813841 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959553334 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887625391 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.158551533 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.15744179 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252194833 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.38895436 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.079119547 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962325883 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.175501187 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171380008 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.929323948 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113371805 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419850463 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080646853 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.878880619 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.67263573 seconds)
  done (took 1720.698202306 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982009513 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.967969692 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.966169852 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.988148305 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969606504 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.972184313 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.980568398 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.048276495 seconds)
  done (took 57.765696595 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.95868378 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.178122725 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.969855966 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.960507922 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.985595284 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.959960595 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.157397452 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.971574366 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.988153108 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.970087373 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.959888815 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.974202252 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.315842312 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.988055101 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.96174422 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.969593943 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.969186075 seconds)
  done (took 76.136664218 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.963881468 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.244568174 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.999559301 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.983568785 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.834874677 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.969772829 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.933367827 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.996855346 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.96612359 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.136793013 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.302892812 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.974709469 seconds)
  done (took 91.200642284 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.978374898 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.968455261 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.96834262 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.967501477 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.968884192 seconds)
  done (took 11.751516631 seconds)
done (took 2226.28660225 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.210969001 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.185975645 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.201724059 seconds)
  done (took 6.281032071 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.112050038 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.160563867 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.281420364 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.284928541 seconds)
  done (took 10.73510866 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.250850415 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.332711075 seconds)
  done (took 6.476223643 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.296298963 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.989407635 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.343606002 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.963162151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.964997889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.96560058 seconds)
  done (took 22.793152506 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.966857309 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.969502987 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.966202505 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.970565563 seconds)
  done (took 9.763314697 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.947780177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.675667809 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.950049996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.963316607 seconds)
  done (took 21.431315754 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.71610524 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.367809928 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.71622069 seconds)
  done (took 9.695243902 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.454406866 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.211021686 seconds)
  done (took 9.560595926 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.219741992 seconds)
  done (took 4.115286561 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.995462534 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.237820232 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.501757003 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.495783588 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.578840065 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.790668743 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.297056452 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.208284675 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.420520852 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.426706558 seconds)
  done (took 25.84848654 seconds)
done (took 142.432884596 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.386329871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.993312344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.171209229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.322390216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.206125933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.169646422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.183721729 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.314726136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.847987582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.843272693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.326604377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.200631028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.135050848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983905607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.13724187 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987010399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.194092273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.406933998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.043140681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.24793327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.190745934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.972491492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.166676447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.988458228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.199428881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.126585809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.518806783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991633573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.183002051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.529124999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.126375917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.390560481 seconds)
  done (took 171.382207057 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.966863658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.96873974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.967291527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.967486729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.286065855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.968903915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.96789914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.967399938 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.031426749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.011370612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.974174879 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.303999296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.978335321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.968037264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.980559093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.967917786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.204725209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.980818061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.984161425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985238453 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986607034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.162110032 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.988311511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.197532638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.212986639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.988003772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.968822531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991383476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.993576063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.994224881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.994619491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.969695923 seconds)
  done (took 210.779272385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.968589612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.973952762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.975058674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.969264257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.975511174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.985553873 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.968602996 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.970001139 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.45105158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.497399153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.987356805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.981402249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986202137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.969959222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.987499468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970100729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.987076584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.989055738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.990193381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.984782222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985715657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.677765334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.985443563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.690007674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985468082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.985121231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.970655563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989756317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.99219486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.988331625 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.990875927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.97097961 seconds)
  done (took 223.709434113 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.159802787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.976446923 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.977673554 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.975261179 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.977363862 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.976806003 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.984665114 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.160234403 seconds)
  done (took 20.115618158 seconds)
done (took 627.889379488 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.409319134 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.259190615 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.155302196 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.004468587 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.223725462 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.036230661 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.998480971 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.067002042 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.71884664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.069780434 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.692564399 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.020921619 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.779351697 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.027837857 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.120815715 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.061330895 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.585862078 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.683155251 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.17613005 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.042194785 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.16929189 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.967952389 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.083967942 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.752705586 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.802592096 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.016789081 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.170357775 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.597443157 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.010558127 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.160004923 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.745302747 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.394695097 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.012368046 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.99606136 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.054532507 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.030279338 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.339944292 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.010527089 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.120659887 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.771168173 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.05053685 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.603028099 seconds)
  done (took 107.895568994 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.968589261 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.966978079 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.965426847 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.966616461 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.968213382 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.966033856 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.965559574 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.965844516 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.967397346 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.965429637 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.96656018 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.96815061 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.96626025 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.966466686 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.965555298 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.964866407 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.96708699 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.967735463 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.965855644 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.965425 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.966331305 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.96652422 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.981697581 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.966312435 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.968379424 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.967631884 seconds)
  done (took 53.058517633 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.980142817 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.130873841 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.220686769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.00240284 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.982297742 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.983574825 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.00096399 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.985966487 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.984194572 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.983694928 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.088474996 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.988776196 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.000801304 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.220511847 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.001052644 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.981736008 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.982278644 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.982374187 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.138929553 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.000342256 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.002285516 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.98712498 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.00091289 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.995725499 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.983527328 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982068359 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.986403065 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.485167996 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.992020242 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.087958542 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.027114838 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.005609158 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.400059372 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.233259157 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.040133626 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.991463378 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.985355059 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.091861541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.989308995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.981953442 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.000768342 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.987720517 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.222315287 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.469993682 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.998403689 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.98204683 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.492705077 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.101145816 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.023578037 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.993424316 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.223514551 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.000951334 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98387727 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.983045306 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.019939668 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.988737825 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.983294734 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.331898358 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.99759424 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.000418529 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.988824665 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.98360867 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143441243 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.995521819 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.134130717 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.998782614 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.990977196 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.983760028 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.221772682 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.002256199 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.468265128 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.003744857 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.987594824 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.093649191 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.142697592 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.526472673 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.002673704 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151591128 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.421758655 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.013210215 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.9953834 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.476887778 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.016247534 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.99651153 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.990291381 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.989681831 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.988493185 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.032845513 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.00408268 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.412791858 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.483432928 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.355056019 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.017650347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.005265729 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.988101128 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.336805276 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.999194606 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.989114906 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.219716063 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.48526733 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.003658732 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.996690861 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.461132232 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.005707224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.00783853 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.997812066 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.23037844 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.007788581 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.034315769 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.989548022 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.995930669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.991854248 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.009741061 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.996976497 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.989226988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.455881664 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.117765611 seconds)
  done (took 245.913041507 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.985501049 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.988567904 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.982259364 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.986687294 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.982458017 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.988897479 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.983164637 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.981821645 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.988738714 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.982060231 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.983867429 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.985797073 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.985316866 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.986303497 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.614718336 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.99080853 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.593692545 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.983071259 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.983268507 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.988312385 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.761346166 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.991175464 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.985240002 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.990682329 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.984331944 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.986185001 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.990720135 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.108563891 seconds)
  done (took 171.660595352 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.990590251 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.171849392 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.010888331 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.031268064 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.000640398 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.98896509 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.015370184 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.013012536 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.999423426 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.989312918 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.988984883 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.052875625 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.003128311 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.12928507 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.025419532 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.025434708 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.098485931 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.999952009 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.990008671 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.989521658 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.021054171 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.987214531 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.054611602 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.12044116 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.01557138 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.110813337 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.997472246 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.993018791 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.991975732 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.11022956 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.01103354 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.051921218 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.022434697 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.010867598 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.118994956 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.112492951 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101147488 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.024373973 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.997703233 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.990606095 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.990766506 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.980216551 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.111945483 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.013622775 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.993327785 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.099712535 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.012254439 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.993863931 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.002569853 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.990935863 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.007507705 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.012714634 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.062282335 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.128493693 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.028975609 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.018414845 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.018382052 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.284823167 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.003393361 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.094575701 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.98793479 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11296651 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.014919273 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.980630067 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.993033605 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.000753238 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.022277464 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.026989946 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.101830024 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.004159261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.095120443 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.030974197 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.000849934 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.992787752 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.995764156 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.11185405 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.114916573 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.030738065 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.031711825 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.027004473 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.99303871 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.994875789 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.983208484 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.012515077 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.998562313 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.113036232 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.114879758 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.004972533 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.995989961 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.996258666 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.995723299 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.020063306 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.124229452 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.032177607 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.094083726 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.065532529 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.070260554 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.010162419 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.008062897 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.000304059 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.059384611 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.010472605 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.006253021 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.339036224 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.06703025 seconds)
  done (took 215.913402653 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.444792215 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.05168568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.055296188 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.332283556 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.42037053 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.909089287 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.043545646 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.047834974 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.071318636 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.236391177 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.119360485 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.06411995 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.032397381 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.02254056 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.045557077 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.070496064 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.059340901 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.388605746 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.177946812 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.168138883 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.028555425 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.33906079 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.365305277 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.441046097 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.079439456 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.380808547 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.731163483 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.183920533 seconds)
  done (took 65.237856065 seconds)
done (took 861.578418897 seconds)
SAVING RESULT...
DONE!
