cset: moving following pidspec: 25370
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.413748073 seconds)
loading group "string"... done (took 0.580152868 seconds)
loading group "linalg"... done (took 7.310054058 seconds)
loading group "parallel"... done (took 0.158530473 seconds)
loading group "find"... done (took 1.156475969 seconds)
loading group "tuple"... done (took 1.860953648 seconds)
loading group "dates"... done (took 1.304501675 seconds)
loading group "micro"... done (took 0.227786165 seconds)
loading group "io"... done (took 1.023220469 seconds)
loading group "scalar"... done (took 39.511844724 seconds)
loading group "sparse"... done (took 12.577292149 seconds)
loading group "broadcast"... done (took 1.007861016 seconds)
loading group "union"... done (took 13.045226591 seconds)
loading group "simd"... done (took 4.884609105 seconds)
loading group "random"... done (took 9.938331618 seconds)
loading group "problem"... done (took 1.885684135 seconds)
loading group "array"... done (took 22.656147865 seconds)
loading group "misc"... done (took 1.805479692 seconds)
loading group "sort"... done (took 3.534854331 seconds)
loading group "collection"... done (took 18.912848974 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518061713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127697637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120870615 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122076302 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150252132 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114139655 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126832372 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086105869 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.820009192 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14964492 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118593297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433555318 seconds)
done (took 5.191004154 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175536894 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081787469 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083823053 seconds)
  done (took 1.285016553 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066602963 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122556333 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067566497 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068411142 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068451391 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067555051 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067064592 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067332891 seconds)
  done (took 1.648339322 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072125383 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068596336 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067273538 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072827044 seconds)
  done (took 1.400887888 seconds)
done (took 5.705880375 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.798641018 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207216919 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186420557 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.424805121 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133524171 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161305242 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.629100205 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303400225 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186876236 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080189206 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111357533 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.333896806 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110797865 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.626491358 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073618973 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091392477 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140108864 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.411995656 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067823134 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082980041 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090550228 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129806667 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084151888 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073528767 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147488712 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066717823 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137116548 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081869535 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065586581 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.210154391 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174296366 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653214334 seconds)
  done (took 10.233781373 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094595943 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098027058 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071036342 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127647288 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098306398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071394314 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072057795 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068493086 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088912443 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12998755 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09133952 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102888508 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067031245 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070187687 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086572602 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206830215 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08254783 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083288521 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072107299 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077195879 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107067704 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077166407 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077736028 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078713205 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131042094 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181254025 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095611024 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09632326 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067033892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08051072 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116257931 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127502245 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066881602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067153169 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125968682 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096272902 seconds)
  done (took 4.604902175 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.015565562 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147696923 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092756277 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137344029 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066274203 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112272493 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066776366 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083082779 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21448085 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.379163084 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086355801 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.593741604 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113739365 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106167081 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068715134 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069734671 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06785974 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489497034 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096579569 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10844537 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083361858 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071328802 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070070389 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355790026 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069350801 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064408392 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069425981 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058036558 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127218671 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069374413 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.960663935 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129833029 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068064539 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103126512 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170642063 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088691371 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273303887 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070284431 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065334319 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157104293 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095046181 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071737565 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067389402 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085842328 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10515481 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115585815 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066497805 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068274292 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164303425 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06663579 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08162371 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.664146381 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153281194 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078289613 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065153184 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.258601102 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093069716 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070601671 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065362718 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065456201 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.207622309 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131661425 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068239928 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067766698 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069714204 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070435201 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389930185 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065174026 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.188678954 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066977497 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075422631 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069414737 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068230057 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072276285 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071578455 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086575186 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065627158 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074179933 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06561908 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065112219 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06607993 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083553845 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.3720056 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066062781 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068924372 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065726771 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090227471 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098468667 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068547272 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066230014 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101335324 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066792231 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064792073 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105617296 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067745306 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084951939 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068585289 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112290009 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067618209 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20143011 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065860462 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066996151 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099067748 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069553101 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099844557 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079008039 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068936758 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419828655 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064958369 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065400628 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069695199 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065926724 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069619556 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068049192 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081124604 seconds)
  done (took 21.511858142 seconds)
done (took 38.485061426 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24300507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076951021 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077202543 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085125246 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077281019 seconds)
  done (took 1.771137445 seconds)
done (took 2.96184533 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124173128 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102576226 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065652401 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099130971 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065410188 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104092475 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103633304 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083932812 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10227192 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065590214 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102907334 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065250615 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065265227 seconds)
  done (took 2.36161378 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083002472 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086336153 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071189383 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084364963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065091294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084955348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083128859 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091665147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082975178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074359921 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064831542 seconds)
  done (took 2.059014742 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082290515 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086602508 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070960146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084478868 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065247906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084426491 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083565858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08824268 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08370253 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075591097 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064864708 seconds)
  done (took 2.050727269 seconds)
done (took 7.651759595 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077053614 seconds)
  done (took 1.249465363 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.600275096 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.067897655 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08101544 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110400975 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194370349 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119836482 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273587948 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088255333 seconds)
  done (took 8.899447094 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090906457 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083950225 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072753603 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069401903 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070095858 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072914557 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070877911 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071939806 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072852797 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073287876 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073247755 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070642966 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073185117 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070622944 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069256035 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07006 seconds)
  done (took 2.420819037 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093797884 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092801258 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075279505 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075943683 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073264824 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072666093 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075457822 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074510139 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07222372 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073245791 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075628026 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074381161 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072922242 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065452124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075116057 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076639493 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071944816 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075239251 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07518392 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076558675 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075521817 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064901304 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072477284 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074620673 seconds)
  done (took 3.090865007 seconds)
done (took 16.841457814 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113867148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070822867 seconds)
  done (took 1.36660846 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080216445 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084382454 seconds)
  done (took 1.354412953 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080654429 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064656918 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088664387 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076692875 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064776224 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066613622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088952915 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067109632 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066789093 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066728967 seconds)
  done (took 1.922183715 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06697956 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076215932 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068701438 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080432582 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074707947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064539049 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07340486 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068516915 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078201667 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063664906 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072256022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083562366 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072057061 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085340409 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073158774 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069350196 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071095258 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067531202 seconds)
  done (took 2.502026962 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064619359 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065565605 seconds)
  done (took 1.324815148 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066023069 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063735137 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065544085 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065569137 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063228524 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062680949 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06396716 seconds)
  done (took 1.642403461 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391876912 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115070725 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317409218 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071386415 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083149906 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260546746 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066346793 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071857001 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071237831 seconds)
  done (took 2.689685207 seconds)
done (took 13.999276699 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078646375 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085161392 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095640065 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382499387 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09256211 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066984143 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114599349 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189742904 seconds)
done (took 2.311998207 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210749112 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.626404113 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.414780906 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211322428 seconds)
  done (took 2.447905265 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338838414 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08888023 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059783454 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068836667 seconds)
  done (took 1.760865894 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06575814 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069796023 seconds)
  done (took 1.337044591 seconds)
done (took 6.957501587 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066246072 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066801343 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085931628 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06419355 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066581054 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064613927 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064775433 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064607026 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067082447 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067492492 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0714812 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067139163 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067037182 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067180604 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06462209 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064967349 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067325308 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064988651 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065046073 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066977238 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064572621 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06736659 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064923251 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064460672 seconds)
  done (took 2.84341497 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083554327 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065137256 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070943788 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070758667 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069916853 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071904517 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072718849 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067204342 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07237072 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069632698 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070588501 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070180557 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069532357 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070633334 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069667523 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070902006 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072776838 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067369749 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070225681 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070892381 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072790872 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06749046 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070765265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072675444 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070776267 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072303432 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069648757 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067000548 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072371 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070237661 seconds)
  done (took 3.333390636 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068686916 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062760452 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065275445 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072739493 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064800063 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065041092 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064461036 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065123585 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065286152 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06413332 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065631849 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064072164 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065481091 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065681034 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065568298 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068403522 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080635775 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065348787 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065047927 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064906718 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068100734 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064859712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065069297 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064805265 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064688007 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064518346 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064962277 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064291529 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064810395 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064212757 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067954057 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068452894 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063956938 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071577743 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068007483 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064292171 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068716241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064290576 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065008531 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063922927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063682439 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063936319 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06429772 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071574362 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06425662 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066065736 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064300588 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065372236 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065198757 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067003734 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063910564 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064159104 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.18296062 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065591691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068811838 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064386409 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064535893 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063715618 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064873806 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06366274 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063962922 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063953251 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065689416 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064693799 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079151097 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07091056 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064152814 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065724518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064890955 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066914999 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065718918 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077500675 seconds)
  done (took 6.093044926 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088908887 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08546094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064505963 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064491925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061066767 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064414319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071197202 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064823292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066364344 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082911965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064971677 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066424379 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066125157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068755763 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064983088 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065859228 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073228856 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062799264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064576941 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06879473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065154667 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070731396 seconds)
  done (took 2.738663838 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154017843 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069419081 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104064001 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074115807 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068298871 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074598659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068732138 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068750443 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068998106 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066218798 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066586315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069064684 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068325165 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06785481 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067497536 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068017427 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070640891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068507204 seconds)
  done (took 2.583660331 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075603281 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065109012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0858509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065365385 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065037422 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067756941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068970807 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074849221 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069308167 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067024548 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074932994 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069122731 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069495191 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066682665 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06926075 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067235834 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068963484 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0670191 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074902998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071116689 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070614904 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074359704 seconds)
  done (took 2.769254263 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077993493 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066596044 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079961442 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066895518 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060468171 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063103933 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068897593 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06525127 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070498728 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068185561 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06610181 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064757547 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069067257 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06640145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069646244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066047695 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068106005 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066191041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068238074 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061873541 seconds)
  done (took 2.57624556 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085807682 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066818445 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066972389 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073637235 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066513396 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066335372 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075028923 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067962397 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067617067 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089038471 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068171909 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06815968 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075848821 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073347133 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068274522 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075650918 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075468025 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075792636 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067887979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067769883 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089177459 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067124417 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075069154 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068098049 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067436889 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067459563 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067765974 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072353075 seconds)
  done (took 3.240831058 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065705872 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066407818 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064973944 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064316108 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064928963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064364296 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064079325 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064346763 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067277033 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064697051 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066880419 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066384458 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066874192 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067140871 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066703476 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066996862 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066676078 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064246396 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064337481 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064097975 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066681207 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067218233 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066754851 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064186559 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06443214 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067385574 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064387716 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064549801 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066437205 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064450368 seconds)
  done (took 3.195589607 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073984077 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072086884 seconds)
  done (took 1.374671437 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061617718 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080366432 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063968342 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071007384 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070177427 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067696789 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073891039 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070543557 seconds)
  done (took 1.784303171 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082357074 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078892679 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069101479 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080434828 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077467233 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084223136 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13600994 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067966542 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07404492 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065271185 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081317009 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0657589 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073729925 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067694498 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073394128 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073484273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065015835 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072787525 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069163538 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065397983 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067821249 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075589448 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069420017 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062643848 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06825134 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089570197 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078678001 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066842729 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069904615 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074707847 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072762863 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061093083 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066447803 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067289891 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064216178 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076505848 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081918017 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069625934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075619864 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067941566 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077025608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061751341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071483786 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07351278 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077243561 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06701221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0675563 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061639317 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064600402 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069521438 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062403163 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069937314 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061791503 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073854017 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070627125 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077394982 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06559481 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068794001 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070336064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069860753 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073988192 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06884962 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070449643 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066852309 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0769595 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072016745 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075811991 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062337813 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061337819 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064817436 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076899147 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090961759 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073820606 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067571029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06797447 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065476895 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070635412 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068092693 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072847487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073566448 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066940069 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072330632 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074545796 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067614512 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069778136 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074882305 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065303579 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069936948 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065451378 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082707968 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063659179 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064611367 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064483028 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078476586 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070584012 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066721454 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064760053 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074704675 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061150616 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06734156 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067898659 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067677911 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077186911 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070834163 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07127618 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075123871 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073674474 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066075147 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068529913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062692183 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06676892 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06500903 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073310177 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060076537 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069698433 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067413545 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066638003 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074860073 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064483062 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066083624 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073213113 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.196224989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065580338 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063304913 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069575883 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066059438 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068128496 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074720709 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065243837 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060304347 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062211345 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071480732 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067840693 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071893822 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072388431 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070857617 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061881024 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065918867 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073128123 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077118643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067961773 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069196259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073751388 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068609059 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066947341 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074630521 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069998123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06693252 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074688433 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068689355 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061919195 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071180286 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070714367 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066271094 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07140947 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071588635 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070000012 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068440897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065593831 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075172814 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068414781 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067518315 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068566835 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065732159 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075726639 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068015741 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060723833 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062631289 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073795067 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063597965 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064628836 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064884213 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067227525 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066819906 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064111709 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065034817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066876399 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074907119 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068783751 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066531236 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070902168 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076980969 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064649352 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067696475 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06469962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066139759 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067564295 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076518799 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072478696 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071370714 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06961692 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063572691 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072595229 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074221082 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066222339 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064425761 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066177333 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070666316 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073003539 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071090442 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067892853 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065049489 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068226841 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070183247 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069794698 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066727647 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066436905 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073785382 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065577604 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073813566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067718398 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077250559 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068436739 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060308391 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068357132 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063780583 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071812499 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060665719 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063568445 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064614745 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066778716 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06422566 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068155689 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059343627 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073949798 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075017422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068688668 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067154873 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066714003 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073215009 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067500736 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067868331 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067614934 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069911744 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074190397 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063642406 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067303318 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074340602 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064013031 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058576111 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069555288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062639861 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063010405 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063296951 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063576654 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069094178 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074058668 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.202789863 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060419879 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069356719 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064195239 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06549407 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061042084 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070983963 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068972234 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066632593 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07282335 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066571841 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066172612 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070131107 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065925386 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066278768 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067037683 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069037222 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06618253 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068217625 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065483494 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069078869 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065164453 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063412176 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067520801 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066187657 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066481293 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071052202 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064981945 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066432035 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068328231 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065621667 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066693689 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066053486 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065472621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068808423 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067853887 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068544631 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070651874 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063055059 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074849152 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067562048 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075627316 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068287189 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064590152 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074169206 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070514569 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073470787 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06811721 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068699162 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068613692 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066363287 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071633666 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074304617 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066108126 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078717234 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075478189 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068687056 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070344516 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06760202 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068885147 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066272217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068642578 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068043886 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067207663 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066459361 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071814891 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069453979 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067085051 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068454653 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067984763 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067087644 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067888807 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061462488 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066688652 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067018336 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06642499 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077039327 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06746597 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066860058 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066096832 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068601514 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065868485 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063909163 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074516593 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074696113 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065250175 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071954387 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064349361 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066990459 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075535446 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059729879 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063312538 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062677333 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063522195 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072264024 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065597765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074495028 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06582822 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064334794 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062883109 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065686585 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064256414 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059924717 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062920192 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068636515 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064669535 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064158694 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064850742 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067488208 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066173413 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076573627 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066054918 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067116485 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06716153 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063494538 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065647734 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064643927 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067512766 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065324666 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063704481 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062404522 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063452664 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066407484 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066992883 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066532784 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065427489 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070543126 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063921576 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067089314 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066697725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.190413593 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069122271 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065595022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064991969 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064630926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069904281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069767277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066918055 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074618152 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0652506 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066597775 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06640815 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063434173 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066579465 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067300579 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068318115 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067406427 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069140806 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07547933 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065458635 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070818294 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068496426 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068331701 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07459113 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068162193 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071363497 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074361199 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067936976 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069900545 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075665407 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071717813 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071117964 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069117329 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069409371 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074753798 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067389155 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074026059 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068280637 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068517065 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068932684 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06629684 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067903732 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067684921 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066998449 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073990213 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068667936 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066668867 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066207746 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065663502 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068465121 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070359814 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07563625 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069678226 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070758411 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062779066 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065457792 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069047787 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065574415 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069298838 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070146029 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072897541 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069652203 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067880419 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066053108 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077584832 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073461108 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071033513 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064914065 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070776247 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068049498 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069096124 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068088654 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066956562 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06804239 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070717533 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068566132 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066445684 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073987783 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071089159 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067977672 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068811291 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068288284 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06783584 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061912052 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067490164 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069763259 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072859336 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068979902 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067013104 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078379382 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065054929 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067622943 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070270047 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065791678 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070085979 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060635801 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067117791 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066352651 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065937178 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060733487 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064512292 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063217432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067504877 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064598749 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06009018 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075401666 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07412588 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06801771 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063985146 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063731438 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06035111 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060865354 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065134103 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066512534 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066127756 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074139482 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063122393 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062948422 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059065266 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063786283 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066584771 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066843615 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061301612 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059348844 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063168559 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066787032 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069225352 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062883257 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063591415 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.197475039 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068483923 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064068636 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068363253 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063397755 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07022862 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078793669 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066976378 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06691432 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071863546 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073038218 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066505075 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06069643 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066001289 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068837942 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06601683 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065940039 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066402977 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080831113 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068577869 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065163236 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064791732 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068897992 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065326718 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073918767 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066870933 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06618195 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070206306 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066798453 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073687813 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068703291 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073051001 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068866174 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069641386 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06447182 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06638677 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064104393 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065320363 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066111251 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066557188 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070051973 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072803685 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065352525 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076512281 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074511031 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067815458 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062280555 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065613654 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065548817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060892004 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066131653 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064096533 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064172344 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063516854 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064039193 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066579803 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07030555 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066697315 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066867148 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065608992 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059282138 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067357987 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067065418 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066144209 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062973301 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065488718 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065630519 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.068899509 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068405324 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063116675 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066343407 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066406735 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067608926 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061942199 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073111457 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066182363 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06893178 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06676429 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066886708 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067906892 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071021451 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072221337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068549219 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069204683 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070851701 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068840556 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064533086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06450713 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072435238 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064758092 seconds)
  done (took 42.569944261 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099664665 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061737029 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062345718 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062581617 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074465616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063603606 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062485129 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064017433 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064370315 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066154064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062682893 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063110273 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071047083 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078653798 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074071893 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067093407 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062337959 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063241326 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06236782 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063622125 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07124452 seconds)
  done (took 2.738669957 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071676472 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076063137 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075049504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080712866 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069863386 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068894346 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073508546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069000943 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076460362 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070686756 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076730349 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069226285 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071457594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07172782 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072664584 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071303653 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077881844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071075361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071240081 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075374123 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071465938 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075964866 seconds)
  done (took 2.909215465 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065137155 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064848961 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066338272 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060160787 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064928711 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060361719 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068477824 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062541506 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067893143 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063730195 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064020313 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064171406 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066342065 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.059970482 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064890612 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06322706 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106214784 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070030789 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06651067 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067364145 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062083867 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068384145 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062160399 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062204632 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065333605 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069781936 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06759604 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064552482 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066102653 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065651442 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066241876 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064588643 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067745272 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067110222 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065479452 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065556408 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066044144 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066848507 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061705986 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064208271 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066871073 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062581093 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066397226 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067760444 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064347558 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064277427 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068032038 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066212239 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061577359 seconds)
  done (took 4.537840345 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077950907 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111028795 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068748919 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093255568 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080749469 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072514654 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068220286 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091015335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063593211 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064969413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081793242 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079776101 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066014366 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070869324 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07341836 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065961875 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066990436 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064940442 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070700579 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065559538 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069932679 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072654428 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08050783 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07832019 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070426861 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06513551 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065157722 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07050072 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077901967 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070503873 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0709817 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072323548 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081220087 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068136092 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065808895 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06874241 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082150725 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066156465 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068575605 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064010988 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068432596 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070233929 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07305091 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082238567 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066075303 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070980985 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065537095 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063369989 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078489353 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068185351 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073582778 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079338436 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069726476 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065892431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070259762 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081069841 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066263498 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064113439 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068706388 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07775129 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06411647 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069785263 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079365616 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068165102 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072840001 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079355439 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071180947 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069876433 seconds)
  done (took 6.368488054 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074768658 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094281092 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081639519 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081592188 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073454672 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073731575 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073965491 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073934043 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074092692 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07836983 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074050059 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114542659 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072181064 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078636363 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076320913 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076253572 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075772368 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075822718 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076618108 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076399536 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076061881 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083486686 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076386557 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084100017 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080264002 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071780254 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076066071 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076164472 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084050871 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076169377 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080199443 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075802456 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085425554 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083312283 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080316007 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075932299 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065653507 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075516786 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076032254 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075348699 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071533864 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082958082 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075406466 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071487199 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07581932 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075103919 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082937424 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081075054 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07847037 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08006676 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075495789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082961671 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075727875 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076312625 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083387471 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086192767 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083344757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083234 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075985171 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0830566 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083126495 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085387277 seconds)
  done (took 6.208715825 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083192323 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075877129 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082341921 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060457382 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062996172 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071348621 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063526469 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065140041 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074195309 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073250298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077179174 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072763018 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075613445 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077291243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072500169 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075250943 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071769783 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07014089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073204716 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070867057 seconds)
  done (took 2.77312821 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.0726758 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081991621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066093411 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070093927 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067506321 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070316401 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067083678 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067856527 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065979104 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068448077 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07489122 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074518464 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067477893 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072087283 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076286024 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072172786 seconds)
  done (took 2.450487027 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082781704 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071231713 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078786077 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065077262 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065495273 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06139534 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064613449 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060798692 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060838721 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076661472 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064045878 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074296486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064980317 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065523031 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062924749 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071807849 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06249108 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063607233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065918301 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079379358 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070604361 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064621551 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069415007 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066695137 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068947437 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070997899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065237962 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066677227 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064015606 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066916998 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069424084 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069480367 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063458399 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063956016 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065167822 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063941497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066316633 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066812153 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071735554 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065993403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064840754 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068524211 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066160939 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067311362 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062549596 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066637127 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062635556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06855499 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064421577 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069004173 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066478067 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069099635 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067155518 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074088604 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069743436 seconds)
  done (took 5.027046812 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078279476 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069122415 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061246978 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063674939 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067876295 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066373148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069056747 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065736559 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066205991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062893147 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065936336 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067643237 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065933886 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069070145 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066088033 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069191189 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062751291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068354014 seconds)
  done (took 2.533116029 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070841692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06528315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072696679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065778345 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064916855 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067427145 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060988014 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065529474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065673921 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067152647 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066986741 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069125531 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065324814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069050143 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066444184 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066463303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068631717 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065457253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066232559 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062545717 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068209992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063242086 seconds)
  done (took 2.785647355 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092333866 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082057847 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13768024 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077713263 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083019184 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070030468 seconds)
  done (took 1.864677114 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089590295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099131507 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065809645 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067787652 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073849076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068392459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068783018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068628123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076380971 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074688416 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068952467 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076590646 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076605545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076479238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073799726 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073923584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068284454 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068520106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064767931 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08171281 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068480144 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076527638 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068892525 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069308494 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068941691 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075921715 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076814329 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075098191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070589003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079099792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076951803 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070735839 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079406855 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076692738 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069976873 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079279039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070697915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083996351 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074972419 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077454144 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068169204 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074482714 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076528054 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072824376 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076707892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068675181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073083377 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068664602 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06868734 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083974585 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074479621 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075694517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076570907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076575446 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076716646 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083933378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074346069 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076990908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074225974 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074416486 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075724581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074123438 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075566434 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074408069 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074332173 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075995511 seconds)
  done (took 6.244774663 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104240015 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067727427 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07139231 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075960241 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076441483 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069629301 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069913935 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069214227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068940867 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066635126 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110137139 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07103079 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07871795 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078662508 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070303056 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069403959 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069057093 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076703763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066672035 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086621232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070876738 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078262123 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077129838 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075813644 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075135258 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074264543 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069157031 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070536439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069736777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069009219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073477357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068741606 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076769697 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067306868 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078101562 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071323115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070694951 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075421095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071044699 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076442804 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078078325 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084858134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070730166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070962504 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076364747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070409274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071002955 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067825118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070584921 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067351634 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076792486 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076372402 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076916962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078414427 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070976591 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071085143 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070652574 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071523403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071076848 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076179546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078090411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070158272 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086138269 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070935524 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07064268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077362903 seconds)
  done (took 6.238815597 seconds)
done (took 128.982080854 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183014634 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163919118 seconds)
  done (took 1.667451977 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067471292 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097097139 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078835186 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129811397 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065080621 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09907554 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09832305 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076771595 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0652507 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06460778 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064784145 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068000627 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130208429 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.064780384 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064711916 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067635409 seconds)
  done (took 2.635767906 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098105019 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163113327 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102037094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063885874 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.0981505 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070984003 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063834953 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074096599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069916479 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064104706 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071013755 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.06897665 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063953367 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.06935985 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.06953788 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071372503 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063458773 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071352497 seconds)
  done (took 2.754396408 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097286837 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089768928 seconds)
  done (took 1.524317605 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155990053 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104141191 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143853938 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347276724 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161782569 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147063535 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143037533 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141685916 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117279074 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136966339 seconds)
  done (took 2.933085947 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09917668 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152002117 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263494085 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115687308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071155818 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092787454 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116896743 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077013574 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078900102 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07829239 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078965155 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074864512 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097739006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07194472 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072673745 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074485213 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102639916 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071668722 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073652006 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075080041 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099272006 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064268105 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072211449 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071846359 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075625033 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075581551 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065333251 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06699565 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078030101 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075923366 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07871639 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094597237 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078568398 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107484918 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072215044 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109077093 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077597896 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075032868 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074733303 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074117354 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078610874 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077213127 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072237828 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074522799 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064444739 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075385898 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064312193 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064788147 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076923922 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066148491 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077111699 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0759766 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103693659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06698295 seconds)
  done (took 5.924107812 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101845704 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105775749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070199714 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111974822 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101732549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070920325 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101284979 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094262557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103261118 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069154476 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067323321 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068947658 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080654996 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080956467 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113528755 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105481075 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072509884 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070462241 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10444063 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103791579 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07051746 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098666072 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092855105 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105210656 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066529586 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069303474 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069483167 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071829682 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078174214 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077500311 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070585975 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08010977 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083176454 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076897282 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066234561 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066410164 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067734055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077973528 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078386932 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077360056 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076316004 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066616595 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072177672 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068756165 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069051681 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066810863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077353111 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078513349 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076833793 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067893391 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068677503 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066947212 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068295623 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078260586 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076068672 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079233215 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078235942 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067245746 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067090346 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071193846 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079199362 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077792862 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077753626 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068726058 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077447806 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067083806 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078815922 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082017817 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067239475 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068628632 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067273834 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067984395 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068308184 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076169458 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075846594 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067963687 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06800628 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067320467 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07847259 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076187676 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067032915 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075258339 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065897451 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066796869 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068200998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068191063 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076195808 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07850628 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068403536 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066886292 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06792639 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067556908 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066131417 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07536114 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078418608 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076872702 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075373696 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067123169 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07597098 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075754737 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067486524 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076019069 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066236476 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067149292 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066598495 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074430054 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074430008 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.204489861 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069695482 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069870754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078973272 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080698881 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068415949 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076289449 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079455543 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077505544 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066595335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079869755 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068358694 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078984562 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069545927 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078753985 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067467764 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078562191 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067330651 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068724197 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068177958 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077846176 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071722385 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067197345 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069050944 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06868202 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078054811 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081878768 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070467499 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077433002 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077031924 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069664312 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077215047 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068574966 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077885445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068468005 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06864556 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066533038 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080349974 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067289818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067325049 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068553854 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079314159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067179479 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078665076 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077413772 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067381754 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080634677 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078804082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075907449 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078633545 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06886675 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067356013 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06725415 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068078155 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076540681 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078406858 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069618236 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068102324 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076184497 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078428698 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0664198 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076770782 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076889387 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077908647 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06734026 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06839998 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079336857 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078741014 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076369191 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07650372 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076733788 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06738064 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075977362 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077152494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067047636 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081946926 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066735702 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081178183 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077266658 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075136903 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077250856 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079173771 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078801836 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079385621 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081836563 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067737352 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067203066 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078317383 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067374413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068728696 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076842969 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06872172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068189639 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081492351 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067503567 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078583698 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067024926 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077938112 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065719019 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067646595 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080089051 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066081365 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067326227 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076331759 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067318043 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074431223 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076583498 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074630614 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06536748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067653999 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076269508 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074738056 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065567691 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065421784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067380807 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074513606 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073496649 seconds)
  done (took 18.215124994 seconds)
done (took 36.996322187 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213223325 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156719671 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184662484 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118473658 seconds)
  done (took 2.119412683 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116917459 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100320001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092073288 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064664282 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097837876 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064698999 seconds)
  done (took 1.916611864 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309620962 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20951757 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18757977 seconds)
  done (took 2.082228636 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205097657 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19058291 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.424049584 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264456098 seconds)
  done (took 2.568665781 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145843111 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087894273 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067074645 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084105491 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131785243 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158377925 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099281114 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124370378 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078305928 seconds)
  done (took 2.405243451 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147443643 seconds)
done (took 12.64901022 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099894142 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085750247 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.209842143 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.237539052 seconds)
    (5/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.226003567 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095757103 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.247407263 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170525029 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.217665919 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076015329 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073854382 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081978173 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.209888312 seconds)
    (14/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073611814 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.189800759 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080584027 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113491345 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075291579 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103939568 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08232886 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.200902444 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.20621946 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.220477278 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080443004 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.207828639 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.176764287 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.194227086 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071058781 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.217375659 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102517422 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104425107 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17693911 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190802798 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074041437 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.182482712 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053191237 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092468568 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050066773 seconds)
    (39/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111517079 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153252653 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07640639 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075199887 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091850788 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070777145 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07167092 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151447321 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090275999 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.154052125 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065007107 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090771469 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072982813 seconds)
    (52/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198674788 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105877428 seconds)
    (54/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074327706 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073350553 seconds)
    (56/309) benchmarking ("sort", Float64, false)...
    done (took 0.129045388 seconds)
    (57/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108968045 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07277064 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050006688 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084557251 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171026853 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051006409 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.226973217 seconds)
    (64/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107713566 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066181016 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203408698 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051115959 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0499664 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164871571 seconds)
    (70/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.050944916 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.103017699 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.062064594 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074756054 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123919188 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071545191 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173617649 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133034225 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.178929445 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065443338 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08585469 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151750965 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140991136 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.230099332 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.067862289 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074183498 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07666195 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076204533 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113058598 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108544071 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081357797 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064910815 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065476286 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089484325 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163096537 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.0687522 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066281001 seconds)
    (97/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121972006 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068434552 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075274375 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053607672 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104191619 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187584421 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066977549 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.116720407 seconds)
    (105/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065799324 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143890972 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066184831 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096043127 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065527211 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075614093 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075839553 seconds)
    (112/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074321311 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090585839 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073972243 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143691584 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074939018 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053671027 seconds)
    (118/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071595406 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052766731 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.143617832 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.141180493 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075196559 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083477307 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075307127 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068085796 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09273097 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072367825 seconds)
    (128/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071703273 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087851739 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053555259 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054182316 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092563034 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157616831 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11223062 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074298299 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073016603 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073852769 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054739872 seconds)
    (139/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185432294 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186078194 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067846874 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066118192 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07441048 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074676164 seconds)
    (145/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100250633 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20009817 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05231126 seconds)
    (148/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055792136 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077514942 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053465635 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067794115 seconds)
    (152/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109949407 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073338001 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077665807 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052246331 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092492989 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075030929 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054051217 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078234656 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.102309272 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104228259 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065035785 seconds)
    (163/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067913265 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05247695 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082168635 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177233066 seconds)
    (167/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06921585 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103391173 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066666499 seconds)
    (170/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083365921 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.314590877 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050131217 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092723254 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065893258 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074701432 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080661924 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.160522571 seconds)
    (178/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07580385 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052163408 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071221287 seconds)
    (181/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078917811 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089457361 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112574566 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073256 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108252509 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088113667 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063751828 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068100579 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126138089 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143074637 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074383849 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158667849 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181203706 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164159166 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075169793 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05095789 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11806648 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091510813 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.217869708 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052612923 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074016145 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082369068 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071257791 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092046815 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068922163 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051369854 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0725707 seconds)
    (208/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075886483 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051918185 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078430707 seconds)
    (211/309) benchmarking ("sort", Float32, false)...
    done (took 0.133399778 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0737256 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064860989 seconds)
    (214/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102860368 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140226252 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075445527 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077020517 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074086889 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091884452 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052989804 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053424895 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06791499 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133802105 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193364267 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052844401 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052874994 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052645963 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073096533 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053437104 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067544453 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067789639 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176656074 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066662666 seconds)
    (234/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05358646 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063686158 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067278188 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140271824 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069568186 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0514174 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065068754 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051251686 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076175352 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05140939 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069421909 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14413039 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067945752 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068098767 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093495013 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103411298 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062222351 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089552244 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201309859 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053393408 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052850947 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051877773 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066792434 seconds)
    (257/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073721843 seconds)
    (258/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063419681 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068358187 seconds)
    (260/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053751052 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066744801 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05246368 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073437881 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054615267 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066980746 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053382093 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074893218 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066617666 seconds)
    (269/309) benchmarking ("sort", Int8, false)...
    done (took 0.145522808 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063104757 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087748997 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053394414 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05523357 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066409043 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052061305 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051767101 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0747401 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062412231 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08792813 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065695154 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159255366 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065679443 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066638597 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052232495 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074129008 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053523039 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05214533 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052592776 seconds)
    (289/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090214594 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06491591 seconds)
    (291/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050420709 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068791429 seconds)
    (293/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073864241 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092919699 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07300657 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052657031 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067798181 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062165249 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098906156 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089744418 seconds)
    (301/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089470037 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064952967 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064851192 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070819985 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051649436 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073030624 seconds)
    (307/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050524734 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107994642 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071642776 seconds)
  done (took 31.259959848 seconds)
done (took 32.645584503 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086086247 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096343312 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077314101 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096488345 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083062875 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078093654 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073003883 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080366664 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081101473 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081967867 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076974938 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054312723 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074217037 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073934263 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076247027 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094299739 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080761328 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074900431 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074924643 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066108713 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074845708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067352746 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068610262 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055358065 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079355893 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071066357 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071487737 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073546488 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065224593 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064986477 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068653548 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072332363 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064700963 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078760799 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073290921 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075433045 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077058194 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078511799 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067925882 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065399176 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07541989 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065187971 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074458752 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074659651 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073729784 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073420889 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075058281 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079673288 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094318526 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070448699 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076558674 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078279395 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077808571 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074724223 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071257658 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074444197 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072310187 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093574405 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07503312 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069797859 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076051603 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076036932 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072976555 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074153585 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073823797 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076303431 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07649645 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072891203 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075638776 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072321551 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066849307 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074321169 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070326288 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066169703 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077503531 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078578858 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065266523 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072995019 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073905691 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073076832 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066352266 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06929288 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068491709 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07334233 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068823395 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05468268 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069881794 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07171615 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064266111 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073401397 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071247521 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071879126 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066454941 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075158941 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064202799 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070113091 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064382068 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064591644 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066225004 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06933223 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064448128 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06676005 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074069795 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066450386 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071106877 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077990205 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064444872 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071574385 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064254733 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065841142 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081522007 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076458449 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066780249 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069438436 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065880084 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074666497 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065804671 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066060702 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06639122 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0663304 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073093763 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065915324 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068709519 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074145278 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079482337 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066015916 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06975828 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068257001 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065547466 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071783529 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065706734 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065813344 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067496836 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062579406 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068166932 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065654175 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073656268 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067975145 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.20790465 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066921623 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07511803 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072635469 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075209316 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073562836 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066642557 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060597605 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070155553 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069878831 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069176926 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067275881 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068947103 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067352231 seconds)
done (took 12.593470847 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068587261 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143617877 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101119904 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098947768 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088081972 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067609896 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078782332 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102284831 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066919472 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101244156 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089879179 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087905926 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117727268 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066220394 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067193131 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071322109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068897266 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084266426 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104334222 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089213469 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116877363 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067020762 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095270237 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09210344 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090507636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105875679 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071179005 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071937065 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07117219 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095029333 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089814741 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07170387 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068576798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101847048 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096683859 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086490584 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067591529 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086069618 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067987484 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067580736 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068891073 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101667179 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083123004 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08403836 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071964605 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071010274 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068876526 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086171399 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092817531 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081558511 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089143018 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104027035 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070986083 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066773153 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065881264 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088444151 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066484799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070060803 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06738378 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069484452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067323042 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070299358 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082793613 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083019834 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071766781 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081920824 seconds)
  done (took 6.924565066 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08549085 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092900813 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085705013 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085640571 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067346141 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067557106 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066477507 seconds)
  done (took 2.034244212 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067330218 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090456938 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091735369 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092505303 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087143698 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090225511 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077604166 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068063705 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090876108 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069196894 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089785241 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103936279 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071901347 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076501156 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094018697 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068047664 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093039023 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068314836 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070917612 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092682559 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071083723 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098278852 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071216155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068059466 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082409773 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067877538 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116518122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072283102 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069532008 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070870863 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066211773 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109677806 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082607016 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076183548 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068005834 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083372857 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083112797 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066692199 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085122375 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077157723 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082433926 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068144098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068892843 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065682697 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072550626 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07837575 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06915212 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068866459 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070647876 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088496206 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068626185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082054029 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071475949 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074267585 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06938501 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075046202 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078196254 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068568874 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088356669 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069399852 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086097808 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084853239 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082254406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085809868 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070567505 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082176894 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082021622 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070311774 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069568476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071545264 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085080247 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066097505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06990834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078777538 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070127742 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092555356 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092571247 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070439111 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082248667 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068989404 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068767845 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068147247 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092591705 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074334028 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068204483 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072961946 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071504992 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066547829 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067178959 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071948494 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066211623 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068596637 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06958975 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069695084 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069358161 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086215373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070540512 seconds)
  done (took 8.974035545 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068172756 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067179377 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069528046 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066575269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066620339 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067971892 seconds)
  done (took 1.907742961 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093364602 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068882789 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080129517 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070902046 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103950617 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085789979 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086590643 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076752414 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082824724 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077422538 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086331912 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087140503 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091584258 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071945687 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086454808 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071472265 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086574347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074284125 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077297323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071962607 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085575343 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07137586 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071919299 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081046917 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074578715 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071075595 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066441833 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077733542 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077237067 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076951924 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071376034 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074991321 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069651449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077217427 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085878424 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069875547 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071167179 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076194181 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071577643 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075973633 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0907516 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074867868 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076347783 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079053801 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079410621 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071014603 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078876776 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077049904 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089024945 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078932378 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07892526 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073531547 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07767093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079396438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072813791 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079951024 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078855647 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088906651 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073832716 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072342044 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070433405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076559432 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079686289 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078887216 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080897052 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079123758 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0726414 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074332002 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074486288 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072955589 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077769911 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068841477 seconds)
  done (took 7.087823691 seconds)
done (took 28.401194015 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541562052 seconds)
  done (took 2.011408001 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611567401 seconds)
  done (took 2.107005617 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.107797127 seconds)
  done (took 8.599275986 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402539386 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.491368918 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718374582 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130584788 seconds)
  done (took 3.244265978 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.699075585 seconds)
  done (took 2.199063128 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212361934 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201015401 seconds)
  done (took 1.922767252 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378765394 seconds)
  done (took 1.871159145 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141440651 seconds)
  done (took 2.636849495 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257381678 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173643173 seconds)
  done (took 1.929035505 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489546 seconds)
  done (took 1.984917844 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.850161912 seconds)
  done (took 6.350254293 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213056395 seconds)
  done (took 1.752283091 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239782697 seconds)
  done (took 1.737347542 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.702700881 seconds)
  done (took 3.199589032 seconds)
done (took 43.043117456 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078857266 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.07921517 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.07966711 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077520193 seconds)
  done (took 1.799505442 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076027464 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072078292 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076564065 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072296565 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075741311 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072455251 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073611688 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075533582 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071356438 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071651644 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071898138 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071983683 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074569574 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073025612 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069785671 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073729543 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075486518 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071438208 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074264555 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071807321 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070138563 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074087247 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074240339 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070632631 seconds)
  done (took 3.253486498 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076999083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072327905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073704273 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0712698 seconds)
  done (took 1.799723966 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07897333 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097358458 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091364938 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07686068 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091253907 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085891295 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068021998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068117337 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069266082 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076340252 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066977864 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094965423 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087465269 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076245191 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078672063 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065130921 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067280329 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08620932 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076777958 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077481864 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06886149 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076708245 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067026559 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08746038 seconds)
  done (took 3.382443215 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086866838 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105926193 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081981076 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08834338 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090116543 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064345644 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087146076 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090513659 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126921556 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064087386 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070514976 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066866055 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074503102 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06659915 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083413671 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108982837 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112830522 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070087645 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098566491 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066925597 seconds)
  done (took 3.215490152 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074555068 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071078947 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067893117 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070541344 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078177826 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074779217 seconds)
  done (took 1.951340676 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068689144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068938273 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069103051 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068623895 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07375063 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068686953 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066842272 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068541099 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06902959 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068867759 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068133446 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066446501 seconds)
  done (took 2.334756467 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20911198 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069874472 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067411867 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065133421 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069366783 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06491049 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079069398 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066494371 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08976971 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065361572 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065083376 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067206949 seconds)
  done (took 2.488437681 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209442496 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078103697 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243042676 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152743949 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113472972 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118207646 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113861311 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116679601 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143819101 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101334757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166525002 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167562881 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109616211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13661623 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090245445 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102068254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156503933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164234206 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104808028 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166660777 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142900248 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124744972 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151326317 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100007895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103917879 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119702603 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069892907 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078677251 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168358216 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135471445 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146049569 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111694379 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092719673 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176446537 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169471413 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138760534 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144340607 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083387436 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10337163 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131899485 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199422328 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090039329 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162753398 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109918309 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220724008 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132633516 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118800132 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11915761 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104240965 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089034733 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144736522 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182904035 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135165336 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085969771 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122833745 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112152991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11257255 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112654342 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178411419 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159857808 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126429473 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070726371 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107453767 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151762799 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134270914 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107507725 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123609227 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090698557 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134922737 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15475717 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120499819 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144218374 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114392695 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087601866 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117805814 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138295359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125643558 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158605272 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122315539 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071662937 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121956931 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100242865 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079536632 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143175896 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074335991 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17503387 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097114469 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106934726 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12168192 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107630318 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10686013 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156980906 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14159968 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100791731 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063676266 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243599432 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12140805 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144203023 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086356972 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107304414 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116264929 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076584931 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135816743 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075024417 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122705069 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076381573 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12708034 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128535747 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075898198 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121887638 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101894858 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099819651 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131339587 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158678819 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087102333 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080935287 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167014526 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120136266 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102179282 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143574692 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155884535 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101167478 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100407265 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146969497 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176293749 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087654772 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161013772 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104875888 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082256094 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086368283 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122119417 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111443919 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125075216 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080470048 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116274951 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166780335 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073994255 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093968498 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132958446 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077879876 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079954609 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103901538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102833125 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093859509 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098645911 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100760036 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133451084 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122048305 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103889424 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121234246 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096127744 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313044635 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087049372 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102403132 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103485469 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069414277 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133626758 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155808624 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078468139 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163044405 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122734454 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11448777 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118538155 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082501091 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139941203 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078536978 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069742726 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141892524 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109424936 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108265198 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149600153 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11520063 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127985846 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121529332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135624106 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133375979 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131929305 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105595699 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088522103 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110583082 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124614991 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072136018 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0890753 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079217748 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102873645 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09429688 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081848184 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141134273 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126420501 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111486554 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113247058 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095834461 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147206112 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074827147 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128033402 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118001478 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094619265 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150095224 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154950123 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133049815 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101333131 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138609503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071460777 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075796006 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089802453 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124791385 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084690366 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085020803 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26162259 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146657343 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129526778 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13450139 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122121594 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119504472 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15356377 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069985897 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118545358 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149206465 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124243543 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106345924 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092620061 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10048448 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143107602 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107062624 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182666768 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118282282 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126118612 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156053636 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10336521 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081712868 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105925456 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138247626 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106147645 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14588102 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102488178 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091434056 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112550296 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076171895 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100963993 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12743209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119000443 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135191624 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117831237 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134955781 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078924311 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116826937 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120862613 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122386717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063159677 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119353882 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159758627 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09287082 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116916099 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150477602 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078538089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132910897 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172024733 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143477308 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085515342 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252343009 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119784679 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128037869 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119831867 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140585904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106569669 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13663691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108691749 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085156179 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087024095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097438432 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105803199 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095196175 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106653614 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112006572 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094615661 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130416419 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102744971 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109050675 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115503764 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097238992 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089582155 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096151433 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175342733 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121110011 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173114731 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1022708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146977889 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166971748 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077174047 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081403521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079356031 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142786662 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085015247 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131452429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109763016 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120103261 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126025685 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145427463 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098143138 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070417616 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110703544 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133427958 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12299544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096867955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1022694 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16319056 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100262611 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077778101 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114992541 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117654356 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10496797 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174241754 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063483626 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107565515 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078280108 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082226851 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129551709 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296617994 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080682539 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103809363 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119695168 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113601069 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127264298 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100051457 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107680976 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126082144 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148904494 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129214016 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090846058 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113874465 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128238758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154875354 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103746065 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095118409 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170819465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152079714 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15904484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090692055 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117338543 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116805588 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111006539 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1409798 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085081544 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165859096 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08420775 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138826118 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105486047 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09099681 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131637374 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110392697 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090563318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150653506 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118808872 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083901805 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080117343 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11808326 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118242183 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104591924 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076973162 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140161395 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07254071 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132840141 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162088952 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080757509 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109682422 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098532256 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081073686 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107340353 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103563041 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088800771 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.242563946 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171729007 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08680577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14909574 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131765631 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11115173 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135442153 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101558208 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641392123 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080103874 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154756652 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119059588 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174522832 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103013061 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120565393 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112853499 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125781763 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147304569 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107175134 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184440624 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133591841 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117378029 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081528242 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104121064 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105881183 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090105361 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110349817 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116412932 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118306871 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094643082 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116002963 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123729702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083315283 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095395921 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154331485 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115177029 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141531964 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139203057 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084499806 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116567398 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136061947 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07954509 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119539975 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153146237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108238078 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101506022 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082026794 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102788558 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160444815 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074069794 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159775999 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265872644 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11009118 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11322874 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1120464 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128804577 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109445978 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124023226 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095694172 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111850406 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116261308 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083639062 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07902486 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108214738 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113235223 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099241579 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096077629 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097069144 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149314014 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070765925 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097901679 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113930009 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143671992 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176222285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092089876 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084491874 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121518172 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11655581 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115281217 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1222616 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077970888 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080673604 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079788654 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078474523 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109356258 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115078312 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117271329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113127174 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166695941 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08470803 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233554014 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095698263 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103781411 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068440783 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077442092 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094906081 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096567351 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105806189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108043121 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157470371 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094303132 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091978845 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09349493 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075685339 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085049992 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129987673 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111640076 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119422441 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100131665 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063510524 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109180392 seconds)
  done (took 58.956198053 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106951358 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084372345 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09938353 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143479452 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121744345 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200470948 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151863311 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187154909 seconds)
  done (took 2.735982725 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069791652 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098042861 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104530314 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084630332 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068252681 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070109058 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237800853 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082651352 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067963561 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100941197 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079776627 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06824273 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432852843 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067652075 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068701118 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063346517 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069429071 seconds)
  done (took 3.445737448 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391231313 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611782479 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.378366214 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071701749 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.451257176 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086802464 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.157707108 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126300876 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070853468 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535009793 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702066286 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125633774 seconds)
  done (took 18.330818829 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078131315 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071077774 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086805985 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087052337 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074843713 seconds)
  done (took 2.084838026 seconds)
done (took 107.307795325 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084418704 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.613055106 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055357065 seconds)
  done (took 2.31878968 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086295338 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09027019 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088351683 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086619367 seconds)
  done (took 1.980090799 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077184953 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079558461 seconds)
  done (took 1.776912612 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24028658 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174674105 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099207182 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086240612 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08302316 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082923103 seconds)
  done (took 1.880694273 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075002746 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077487798 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075732324 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079600879 seconds)
  done (took 1.929517098 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080537621 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0543985 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05638658 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059664469 seconds)
  done (took 1.874213864 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090085125 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082604636 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082174631 seconds)
  done (took 1.876086641 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105988149 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089469909 seconds)
  done (took 1.818463783 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086142605 seconds)
  done (took 1.709776526 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103852554 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106322059 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136435636 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115306971 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144804599 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113693128 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087781235 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087051286 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07892316 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089579213 seconds)
  done (took 2.687069163 seconds)
done (took 22.069401036 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081902981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375135804 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363795987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095327766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672687268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358908676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98420232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097433478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120046825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070670746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088499712 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650927003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980711003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32887795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966232436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326672223 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653291534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07121359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07015178 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070541486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977727886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070489152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068047349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067956853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649031352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372436105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068647663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325153645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070827549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072736442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357765626 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06880813 seconds)
  done (took 16.203229783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073499462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125502925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076212679 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086695815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07090695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06926231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070968331 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068348527 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124751795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070534322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089043044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070883135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074933706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070879808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091314582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085905929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068241339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068314213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068757141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068673893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088004314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070292042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070494205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069273568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06768812 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079840596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067752331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067767881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067907917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069430897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070377594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068424785 seconds)
  done (took 4.085602855 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123107716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132795245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076989653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10927413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117263523 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069665928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147935008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092979087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133755588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070433097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088968103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070529698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106243329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071611405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092144115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071424005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072477289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071868813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071777092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071667004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091774281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070941871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072068033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072064417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071462112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08554581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071811279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071438344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071564221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07318253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07490061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07189922 seconds)
  done (took 4.40096146 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076123043 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078308586 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087213746 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087952701 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072854981 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075261562 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075595189 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072253915 seconds)
  done (took 2.269117971 seconds)
done (took 28.589291771 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081801419 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070733137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075539701 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085247466 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076250395 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081439928 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069727285 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078046529 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075154053 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075857529 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077682984 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070313023 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07387708 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069920365 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076589141 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070244286 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082352243 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074490446 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08256254 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082231457 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072694218 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076250312 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078051719 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082855702 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082488393 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082274656 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080454289 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075570969 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071865816 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073649884 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08136765 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088123648 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070943629 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081950025 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070276116 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070621477 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074503093 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070280866 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08281931 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080094277 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07270088 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079682469 seconds)
  done (took 4.846019864 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092321398 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09618814 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088333349 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064047059 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070369072 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068597739 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092458453 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062458256 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061882273 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092330162 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057813668 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062560048 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066084767 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055890617 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065550251 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059072518 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064669813 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058126558 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063103333 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062307672 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092988941 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055911157 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080123347 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0664809 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058592069 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064129503 seconds)
  done (took 3.475593772 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077523897 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089458384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093479146 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134948334 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108501978 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082419636 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083722237 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099264948 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092457958 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069800908 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073977506 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096462528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095263932 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077938044 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070444478 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.09035121 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087173195 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0718661 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076663763 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100553606 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090513255 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089909786 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102470424 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087030574 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07010557 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07262696 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074043952 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085791414 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075568629 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080361361 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074505265 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07430358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072865604 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082815099 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074246096 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072284586 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096433872 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080372181 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082144085 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07097964 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073999266 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071822715 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096706126 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.137390264 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069730109 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076912239 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079074761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079833635 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06998795 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090474228 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082420078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069479998 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073390782 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0691626 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07008383 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084131113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071898076 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072311143 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079397301 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072786703 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094873092 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07476606 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086131858 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069516859 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07760626 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068934611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070352042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068340239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098404445 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071439258 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116191392 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070367441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070423956 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078846153 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077668483 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076087526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070489631 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085754072 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081209016 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073419555 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078593326 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07322507 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072445696 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094396208 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072155325 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071407605 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070880734 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076223691 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072250402 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071099105 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083461204 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.085831466 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072505837 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088381681 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069380292 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071201338 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075047513 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072134986 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06638847 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078115646 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071715666 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067878192 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076493085 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067150999 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069584142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080103081 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073702271 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06838087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07465041 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075580494 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070745394 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071530798 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072677685 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071628004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078479565 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076935989 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074217421 seconds)
  done (took 10.964121464 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170690206 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163052513 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073594644 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154824156 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079833183 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082474137 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156407348 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09932946 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070565762 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070797318 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071386919 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115205098 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11043917 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124414417 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082267039 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07064384 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087498913 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119554255 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158727645 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152208107 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088379302 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080022608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072942968 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071299271 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073354524 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081100625 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092884398 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07983281 seconds)
  done (took 4.528773703 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083389111 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104734461 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077233019 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094430159 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091940415 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068286449 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069527448 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07192213 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08480613 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080747708 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070189397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076742707 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077569621 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072532093 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068351987 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075538454 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075778765 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07004569 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072051917 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073710957 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078077106 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093100381 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072527037 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066872077 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075120997 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069238326 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065694415 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086957564 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070814272 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09829202 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068288647 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078836427 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085054877 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070995678 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07001863 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070236781 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069862887 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069643264 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071678964 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068172343 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068429449 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05951679 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069100817 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08144685 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076697038 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058305754 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07455028 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07529416 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075223785 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067141838 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072874031 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072411357 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073440456 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077249696 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073919161 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074197721 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069943193 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076653285 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076042979 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066895998 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06470465 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065800732 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072069854 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064475005 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.0756788 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071978093 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065410202 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067193787 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069159629 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074305406 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066858718 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07036676 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064835053 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070839159 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074845331 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070519777 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069121883 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068222952 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069479638 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070069227 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057442319 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069695752 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055005338 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072898386 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067821223 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068190008 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069645671 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074600802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081889102 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071259218 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075771767 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070434342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068513483 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072337017 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062583568 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072458885 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085797935 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084640157 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069799283 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067746799 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085232395 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075509573 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069102985 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057984765 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077521124 seconds)
  done (took 9.338606145 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093966751 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072704588 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089982737 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.098357161 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090047428 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07590118 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077980776 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069018776 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083698634 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073879738 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077223563 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067807854 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078097402 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077215711 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070150944 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077543091 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071911878 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084716482 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082208774 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068327613 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076191354 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08050305 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090204559 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081859998 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080817561 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081832478 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091059413 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071728277 seconds)
  done (took 3.919219276 seconds)
done (took 38.709676648 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.723356534 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.89041699 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.715164655 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096286207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.790496888 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.978393152 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.731293146 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.713283306 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.874011559 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.743659547 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.927603181 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.817050708 seconds)
done (took 64.653551816 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.759679406 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.851980793 seconds)
    (2/2) benchmarking "String"...
    done (took 1.983031865 seconds)
  done (took 5.482834664 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.02078515 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.281044831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.965841789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.712108965 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.712988112 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.055480609 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.522310652 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.242526118 seconds)
  done (took 30.142475775 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.826787842 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.944976427 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.378058166 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.402585285 seconds)
  done (took 15.248611788 seconds)
done (took 62.385428685 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.708885017 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.710812412 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.715460433 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.694578279 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769780754 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.721060173 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.991782433 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.71487596 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.708992256 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.69624107 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.71114515 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.154056113 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.71448683 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.970022381 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.709844437 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.714245463 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.749604917 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.150214235 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.867908999 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.722512397 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.714006512 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.839137521 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.711869854 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.718526586 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.719816743 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.710894983 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.163222121 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.722287129 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.335849323 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.71551362 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.741826925 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.291601724 seconds)
  done (took 201.928498627 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.713123498 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.684254138 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.789073025 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.758493121 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.201897092 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.892668291 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.819625422 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.248804094 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.718162998 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.728176876 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.903907522 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.712398426 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.923544527 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.66088275 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.743413888 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.714674761 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.871018225 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.931563374 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.745351153 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.866451203 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.729246375 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.791104376 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.719384012 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.885668263 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.722217893 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.803903073 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.714818713 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.722198898 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.90626477 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.855165097 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.71403293 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.721372368 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908527017 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.583528846 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.714214027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.72182433 seconds)
  done (took 167.490586309 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.092241727 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.712921528 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.713345015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.713623201 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.717457669 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.714520746 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.836069082 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837246066 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.317586485 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.167716683 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.714522778 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.76510543 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556169546 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.714735571 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782744767 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.723262996 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.713407428 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.729736001 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.741636446 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.71537858 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.716355123 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839990895 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.725513752 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.873110889 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718131295 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.71655829 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.721137803 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.088698169 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.711849226 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722678338 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.959815523 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.71492885 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7157097 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.611163433 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.059293471 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800752044 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.713907353 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722351495 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.71684386 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.936165489 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.711904113 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715283462 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.717484002 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.720226638 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.884422497 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.712884553 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839464099 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.71455047 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.227865718 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.714056435 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.715060594 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.662758611 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.422637062 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.718408335 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.718694668 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.720586007 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.717421972 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715672509 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.716423695 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.723081856 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.597065512 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.936891134 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.715758902 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.720766778 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73092366 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.71719774 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.746466985 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719414434 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.566480445 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.771935313 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.841982675 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860987792 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715651847 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787081865 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811268215 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.718279329 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.719096374 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71767289 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.718677903 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.799765515 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.715647891 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.877604634 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.723647683 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.719260767 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773138809 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.785099693 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.71516404 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630851471 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.720764867 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.719756292 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046396495 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.782907532 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.715469517 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.717530409 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719423474 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.853310051 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837692597 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514328677 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.720069533 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.616845205 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.721808193 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.71960073 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.864546448 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.719014947 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.922368731 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.720419373 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801884161 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.723593569 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.724155364 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.719374218 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.754815537 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.718897857 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.781749325 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.715785683 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.09481536 seconds)
  done (took 397.647650595 seconds)
done (took 770.862554143 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.397814443 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.348378054 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.465841159 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.373235711 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.340263379 seconds)
  done (took 13.581999621 seconds)
done (took 15.239683448 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.813786981 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.816036345 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745951687 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.812254345 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742406418 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.810821039 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.794215083 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.747732278 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.776920731 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.747619197 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.780048137 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.751082483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730311712 seconds)
  done (took 24.724195425 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953651364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.972096344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796518718 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.958516015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.770647908 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9560769 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892569747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.875128033 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.884530739 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738149637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.737006123 seconds)
  done (took 22.191498592 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.963446118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.969815774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803469873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.963284803 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776170212 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968082137 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891394169 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.878114206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.880122503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741819647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.73843907 seconds)
  done (took 22.231391243 seconds)
done (took 70.805029513 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.732136568 seconds)
  done (took 3.388168991 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.759498424 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.91365761 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.738304087 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.735693808 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.730154201 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.731362322 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.738014687 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.731567807 seconds)
  done (took 15.739452668 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.728797589 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.733174202 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.730833081 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.730569938 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.72800572 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.730722682 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.729298342 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.733774973 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.732797261 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.732388041 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.733352317 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.727141925 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.732776501 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.729690185 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.730111037 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.732807346 seconds)
  done (took 29.355362171 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.730545766 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.728856445 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.729348999 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.733232221 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.73162616 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.730036695 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.73201835 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73084535 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.732604788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.731596669 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.730605832 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.728527792 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.731233877 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.730728366 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.733079639 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.733179828 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.731447471 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.73107016 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.736027895 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.732368182 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.732770706 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.731453596 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.730568222 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.731640926 seconds)
  done (took 43.219407865 seconds)
done (took 93.361296992 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.612388863 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.113461904 seconds)
  done (took 8.38638742 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.734785529 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.733958657 seconds)
  done (took 5.169316 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.733725826 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.73612396 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.73482412 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.734986402 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.735082229 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.735462866 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.735033935 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.733930754 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.734794776 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.734395545 seconds)
  done (took 19.009459073 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.735992188 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.737026333 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.729972945 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.735016436 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.733766956 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.729980405 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.735436107 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.733433404 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.738458383 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.73063456 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.734736577 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.734253992 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.736376109 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.733518109 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.735315635 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.733195055 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.733374582 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.733663887 seconds)
  done (took 32.875971873 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.733520717 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.7344065 seconds)
  done (took 5.130357474 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.732187236 seconds)
    (2/7) benchmarking "second"...
    done (took 1.733571577 seconds)
    (3/7) benchmarking "month"...
    done (took 1.734152726 seconds)
    (4/7) benchmarking "year"...
    done (took 1.732325903 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.73254162 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.732215541 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.733757159 seconds)
  done (took 13.792003495 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.737650946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.895134123 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.970300519 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.376852103 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.737705066 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.740312422 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.687165862 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.741226559 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.740588407 seconds)
  done (took 19.288900119 seconds)
done (took 105.313921961 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.584710674 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.729298687 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.075019575 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.775534993 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.783735446 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.076212498 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.768799328 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.03107364 seconds)
done (took 42.48823181 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.737092558 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.293245803 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.320081243 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.16455474 seconds)
  done (took 12.438769046 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.71443796 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.278438107 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.763193262 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.314887954 seconds)
  done (took 19.756841167 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.100397226 seconds)
    (2/2) benchmarking "read"...
    done (took 2.075504777 seconds)
  done (took 5.844945495 seconds)
done (took 46.442684452 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737569903 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.737201251 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.733700994 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.735554902 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.736472762 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.734655476 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.735230021 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.735588435 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.738629772 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.738138698 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.738447442 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.738045404 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.738930646 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738699063 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734422352 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734014519 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736863209 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.736972945 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736554388 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.736573796 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736616201 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738994508 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.73696809 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.736891889 seconds)
  done (took 43.344724662 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.738257022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.736387185 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.738819463 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.737599254 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.735116905 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.737408351 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.738177674 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.734644016 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.738915633 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.738872932 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735327836 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.734536886 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.737343594 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.737810144 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737927676 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.735547446 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.741398559 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73696185 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738210152 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.736234142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.739453239 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73569386 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.735405525 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740437793 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.737426633 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737705534 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.740241209 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.740990678 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.73994558 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.737997306 seconds)
  done (took 53.797843026 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.744245927 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.749522874 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.74126103 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.739695221 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.740491453 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.741148147 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.740682474 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.741342459 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.740782662 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.739432935 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.738521612 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.740039759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.740052339 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.741234091 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.74133207 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.740212086 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.740991047 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.741360785 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.740413185 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.742534419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.740888937 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.738865295 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.741067663 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.742111503 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.740039712 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.741968652 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.740079679 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.739419398 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.740409244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.743113634 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.740812163 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.74067504 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.740291716 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.740303738 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.739972059 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.740304519 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.745368728 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.750116809 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.742546612 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.742074486 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.741077956 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.741251466 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.740358575 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.743091598 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.740263205 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.74031185 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.741686928 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.739371845 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.742022314 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.74238261 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.740457736 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.740836486 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.740134974 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.740996732 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.739969721 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.741376418 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.741094742 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.740761445 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.739630237 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.742441741 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.739545687 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.740652381 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.738334017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.741766499 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.740578812 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.739739027 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.74165393 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.740664212 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.737992811 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.741396371 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.740654905 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.741513955 seconds)
  done (took 127.028838976 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.73808064 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.737766468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.736651051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.738188801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737029637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.741649834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.73879898 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738642498 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738665779 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.741080664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741446685 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.738124698 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737663199 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.739240831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741828925 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.738924937 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.741836424 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739094745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.74161446 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.742987975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742080386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.738811967 seconds)
  done (took 39.939883744 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74145303 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74170794 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.739021334 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742844245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739269203 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.741388103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.742636479 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743494667 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741259725 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73895294 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740215288 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741604048 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740094641 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740876426 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739132238 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738936335 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742420818 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739059845 seconds)
  done (took 33.003729979 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.738738132 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.740797015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.744123349 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.741800734 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.740888336 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.743177348 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741374658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744003148 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.744091184 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.743141224 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.744484723 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743591545 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.744936638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740586438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743587564 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.743802469 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.743830926 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739381663 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742336466 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740688041 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740519687 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74300953 seconds)
  done (took 40.003644149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743941714 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.743777085 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.74104732 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.739879969 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.741170685 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.744016646 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.743317503 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.741541139 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.743821957 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.74379572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741953669 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.744817205 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.741059053 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.741541199 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.743637712 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743472297 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.745336024 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744313668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745136103 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.741683522 seconds)
  done (took 36.530365352 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744824307 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744441805 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746509908 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744856351 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745139847 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.745308916 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743165772 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.745283796 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744753203 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.746141949 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.74624343 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.745380983 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745207178 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744534037 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746559583 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745292217 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746134132 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.746582593 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.744735491 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745498727 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746611143 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746723765 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747319152 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.746590579 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.744920161 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745009637 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744831111 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74515502 seconds)
  done (took 50.545266094 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744497838 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.7448394 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.742797621 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.744667755 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.743372012 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.743737776 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.743314195 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.744270305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746344094 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741828175 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.74660728 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.747149168 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746101613 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.746293729 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748055329 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.745740942 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746606918 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.745079341 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744409745 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744335229 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.748252657 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749818501 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.748458541 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.745533324 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74350624 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.748974788 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746219019 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.746582304 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749100666 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74636108 seconds)
  done (took 54.047623803 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.765195228 seconds)
    (2/2) benchmarking "in"...
    done (took 1.768371893 seconds)
  done (took 5.211161804 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.746863938 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748353314 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.748094775 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.749021023 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.745509375 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.750523914 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.748236073 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746207358 seconds)
  done (took 15.658629581 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.749139203 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.751422597 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.753339221 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.752317244 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.750034019 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.749088046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756088804 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.751883571 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.751282646 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.754378723 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.756721177 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.761268365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.752321098 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751579186 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.751375651 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75010461 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.752422297 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.752770578 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.751703239 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.752060723 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752293573 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75421928 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752026967 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.748690121 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.75420692 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.760500865 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.757392932 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.751253478 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749970601 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.753809861 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.752012742 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.748204387 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.752546165 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.752339556 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.753266867 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.752299275 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758503314 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752810884 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.758620131 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753552172 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754009316 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.749289239 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.75591856 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.751946228 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750952676 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.751258357 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.754446351 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.750751698 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.754264711 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.756071859 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.759167232 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751963644 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75039204 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.756130356 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.756040377 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758035393 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.753212605 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.755972341 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.765357464 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.763567354 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.765171851 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.761157748 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753999044 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.755043923 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76401407 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.779984007 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759273214 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.752361153 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.751923378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.756367513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.760871748 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767331385 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.765297226 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.756554881 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755800563 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.755067121 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.7555133 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754385268 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761769459 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.756933368 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.753605157 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758252272 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765683143 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782475712 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.754268481 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.755922738 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.756439464 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.755664861 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.754636184 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764261978 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.755201263 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.757066595 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.754895884 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.755355369 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.756049579 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.754774347 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.752002711 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757360087 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.754192045 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.757142809 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756750236 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.759211138 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.767543258 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757472803 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757776558 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.761975848 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.75826361 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756445607 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.764820673 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.758072665 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760244566 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.757555965 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.766141328 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.756186748 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760801895 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.768260228 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.758727249 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.760041228 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.757400076 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.760499997 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.767735801 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.786337867 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.757983606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.758690981 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.764466875 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.772332595 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758245576 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.759610911 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.75754783 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.757307745 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.754169078 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.760172215 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.758507508 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.758133832 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758572278 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761368055 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.755510315 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.760401382 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.760707565 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.759429367 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.760298679 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.759542149 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.76002604 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.759224281 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760178216 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.759722619 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.764388019 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.759928616 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.761358517 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.761856162 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.755022146 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.760389345 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.759487183 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.758876513 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.762106659 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760068853 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.760519951 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.759663748 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760413665 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.760735042 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764275722 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.758970788 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763880501 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761611891 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.764689146 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.761111985 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.758443525 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.760756523 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.762309916 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.760188143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.761843155 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.760467479 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.765432737 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.77016572 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.76267331 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.762989964 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.763126919 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763670112 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.763090587 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.763135353 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.765892769 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.768703577 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.761088932 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.768860923 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.761454173 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762167928 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.763132263 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.761229051 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.75955685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762516211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.76581449 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.770336733 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774537958 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.77124407 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.763320669 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.766271641 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.762405828 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.765258309 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.76693399 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.761869063 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.765487155 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763598484 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764285357 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763075661 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.762665682 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.763208988 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.763436433 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.764363413 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.764115069 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.765101445 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763480224 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.761848014 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76282907 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.759390491 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763708988 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.764873482 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.761449461 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.761162335 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.761445735 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.764382358 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.766161163 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.765807019 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.771350475 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.762191593 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765242207 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76619299 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.764251544 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.763237235 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.763923926 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765874569 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.763827544 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.771097054 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.763405375 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.765580975 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771122169 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.764455899 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.76439611 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.767101976 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.765506765 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.761106959 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.770045658 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.775655994 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.76652721 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.765493235 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.76458137 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761324512 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765634212 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.768498447 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.763781092 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.763490571 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.768836975 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.766465951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.760489591 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.767151432 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.766139816 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.766484046 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766248014 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767247493 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.768503011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765826228 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.76823318 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.765927051 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.769007475 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768104984 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.777844041 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.771305745 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.768594622 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.769127345 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.769394286 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.774198368 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.768596676 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.769719143 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.765867289 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782464082 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.779059529 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773066889 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.76975438 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.769895852 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.77337158 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.767386841 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.771212566 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767559383 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767923276 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.767869644 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.768013601 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.767712993 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.770495538 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.771446732 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769964069 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.770207046 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.777228753 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.769831681 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.769443423 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.771350569 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.768897943 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.771421561 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.770983844 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.770893995 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.77247348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.768615089 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.769735291 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.769203963 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773708598 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767006923 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.771584905 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.768847346 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.771371447 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.771026248 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.769824774 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.770749458 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.774087937 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.777537372 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.772354185 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.781363566 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.771645807 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776531204 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.769302287 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.773212852 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.779664222 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.767259306 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.767948799 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.771825249 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.772865769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.774617185 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.769238684 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.772069405 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.775557821 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771837603 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.769562245 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.771781005 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.771970524 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771865808 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.7706947 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779219531 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.769501433 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.775260256 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772603319 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.76723279 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.77088427 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.772158733 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.770977474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775653249 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.771858334 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.772075245 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.771802209 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.771355276 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.773756221 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.772118696 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.773350701 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.770707176 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.771912677 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777424312 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.773533056 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777473771 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.773863457 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.777752366 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772472433 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778176862 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.773853141 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.77295149 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.772488281 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.772617025 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.774537126 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.772074702 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.774033678 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.773153269 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.77549191 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.777078508 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772824826 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.774765612 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.773271343 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.773968472 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.771571913 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783170693 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802151184 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.775271791 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77791743 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.773372947 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.77408519 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.77879222 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.773052304 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.773436829 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.775468592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782677241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780099331 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.771917403 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.772990733 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772147723 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774391763 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.772399422 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.775700209 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.773837983 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.77392983 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.773196601 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.771475534 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775725752 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.772245128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.774542564 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773589597 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.773354615 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.781273416 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.772725079 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.771018752 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772874542 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.772566318 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.773965246 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.774539379 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.773978612 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.772157839 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773873582 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.775455767 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77962624 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.780168558 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.774805477 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.774219249 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.775448252 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.775109193 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.772796871 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77368557 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.774273996 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774955594 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.775390272 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.773071058 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.77275446 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.773042292 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.774560515 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.774833994 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.77597168 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776273184 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.782982397 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773183439 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.77248396 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.776439964 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774360618 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.774033829 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.773794372 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.781119151 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.775618632 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.788532835 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.783186867 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.778353201 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.773764893 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778470492 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.785080413 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.774062738 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.77497253 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.773950843 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7759778 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.774781807 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.777849007 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775887502 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.782491334 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.776684922 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.773923182 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782974121 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.776640126 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774879778 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.77744151 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.78050082 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.774096698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.771647391 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.775460144 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.77451655 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.781966484 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.777865466 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775945997 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.776076534 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.774155381 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.774565101 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781938084 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778986154 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.776048406 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.773707768 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.776880097 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.776957535 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776223975 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.774829656 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.774029177 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.7759115 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.777355019 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.782369781 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.773727327 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.779851525 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.775676914 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.777604335 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777833563 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777727048 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.772597722 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.775933443 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.777266316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777256861 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.777228786 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.777902006 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.775558594 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.777497313 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.778619738 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776984637 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780132071 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.787778253 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.785980235 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.773490679 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.777838691 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.775815738 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.77924658 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776938831 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.776099129 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778372124 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.778754633 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.776699837 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777493366 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.776850078 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.781409282 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.794147478 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.77891142 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77699851 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.779039051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.778318402 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.779493353 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.777635806 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.778662136 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.777624965 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.781106968 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.789533854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.780736233 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783524869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.77735942 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.780627189 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.78269487 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.7806416 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.785730436 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.779495011 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.778753351 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.777920988 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.783513368 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.795528138 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779258207 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787850494 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812034881 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.779791772 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.780436252 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.778481503 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776932824 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.781312515 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.783145132 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.780294731 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.77786852 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779854825 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.779156725 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.779663704 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785560743 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.781374566 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.780353409 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.781562237 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.778230744 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.780794999 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.777949212 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.780936021 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.780050284 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.779629627 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.782030222 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.782368908 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.781553835 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794715602 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.790677363 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.779675417 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.781387011 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.777979337 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783537594 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.784814284 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794305822 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.789430168 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.781160693 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.781946564 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.783195851 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78134639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.777474291 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.781548051 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.78218925 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780563078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.779672564 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.793413715 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.792111423 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.784535069 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.781017156 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781015819 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.782279168 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78356938 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782539987 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783458117 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.784056008 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.782092932 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788343337 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.782748549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.781520379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.78474494 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.793082256 seconds)
  done (took 1056.284124594 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781280754 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778365367 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77808859 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.78179863 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780387832 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780269154 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781349694 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781166978 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.780638362 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781373543 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.780614289 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780527687 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.781966054 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.780722433 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781280583 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.780497085 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780560405 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781761837 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781505876 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779768751 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780177632 seconds)
  done (took 39.101476764 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.783082947 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.780367366 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779376432 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.783848843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781416657 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.785488529 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782037611 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781704363 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7851449 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7821464 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.783992179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783795015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.782076552 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.782834622 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782296814 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785946452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784994694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782700792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.784980992 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78101235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785978819 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.781861449 seconds)
  done (took 40.935559923 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.784216868 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.783638447 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.783261715 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.782339589 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.784964538 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.782998337 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.786896301 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.785882225 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.787041043 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.784557441 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.784840053 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.784658418 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.79434011 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.792923775 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.784627873 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.784766164 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.92985637 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.785861854 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.784876905 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.785501934 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.782068028 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.79220319 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.782679805 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.783674478 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.783035269 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.785901185 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.787149577 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.785260338 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.784810069 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.785767981 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.790427198 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.785008509 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.789586493 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.787312824 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.783945544 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.787617793 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.79298423 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.784945098 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.78460323 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.788199515 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.795173897 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.80852001 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.788533595 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.794450412 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.786555149 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.785866142 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.789504419 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.795129475 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.784500487 seconds)
  done (took 89.4247662 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.785410332 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.787371236 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.783898119 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.784542017 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.787067703 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.784331907 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.784694364 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784908271 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.78134542 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.782833886 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.784531941 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.781818144 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.780022859 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.784782074 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.784150909 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.781586572 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.784867788 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.781813614 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.782981882 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781227161 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.78199989 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.788592181 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.784800409 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.780376621 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.785125651 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.782875136 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.781799159 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.787659478 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.78074363 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.782389681 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.785110846 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78766277 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.786922934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.778125886 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776550097 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.779945921 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.780606151 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.777510207 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.782297772 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.774985304 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.777229626 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.78003815 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.779536808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.780487986 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776049824 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.776722121 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77649846 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.776184593 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.776005712 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.785728817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.779242999 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.772785687 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.778755104 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.775556939 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.779180497 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.779823547 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.77645515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.774913117 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.77859489 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.776556883 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.774289806 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.779644403 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.772557465 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.776812324 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.776755186 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.775297744 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.77344326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.774413957 seconds)
  done (took 122.79455718 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77682927 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.777618744 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777437742 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779206693 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.778519372 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.77836698 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.777898704 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.777824235 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778009806 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.777634138 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779219687 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.777886079 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.777460002 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.774894041 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.77890352 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780618056 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.778191426 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.777041587 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.778584511 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.778963961 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.77875226 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778846953 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.778547583 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.780366127 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.780155004 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.781560546 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780992355 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.780849039 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777784956 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.780621334 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.783866373 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.780355492 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.780930839 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.779678224 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.780201626 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.779024021 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.780604377 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781773112 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.781114951 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781296759 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.780715176 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780826711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782817286 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.782083246 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780169054 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.780371659 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.780959693 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.782847027 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782107447 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781659347 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.780144467 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780623712 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780807596 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7816143 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.780500746 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.779500808 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781989593 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782788133 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782276481 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.78098714 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.778469279 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.782852955 seconds)
  done (took 112.064961199 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780427701 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781672634 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.777395501 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.778709523 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781483721 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777353834 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779418824 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.78412944 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.782171106 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.7807214 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78125548 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777185083 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77818727 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782697698 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777506888 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778476682 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777412603 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776484762 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781480935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777723574 seconds)
  done (took 37.299463816 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.776556745 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782994253 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.776097085 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776477642 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.779278448 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.777871289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.781965492 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780748438 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777158014 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774935965 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771108957 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.77108799 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7688486 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768367992 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.771337388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.767579262 seconds)
  done (took 30.111714954 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.76691306 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.769709045 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.77096747 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.770503777 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.766925965 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.766916724 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.769322344 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.765021473 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.76513252 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.769591436 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.768377769 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.768485179 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.768941544 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.768516707 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.765452328 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.768943061 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.766506359 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.766670615 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.768215098 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.768441277 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.767447349 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.765473693 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.767558065 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.767449728 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.765333303 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.765504242 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.76672878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.765776563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.764682667 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.766898405 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.765314686 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.765392989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.765177815 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.765900715 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.767660391 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.764989474 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.768131248 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.769173351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.767782397 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.767009244 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.767926118 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.765899188 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.768778393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.768373796 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.765686042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.768250465 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.765973189 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.765270921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.766948994 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.766693639 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.768635086 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.767896256 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.769353386 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.769235896 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.769690202 seconds)
  done (took 98.906593736 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769784794 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768724768 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.76464682 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.768322918 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.768471989 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.766091691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767973952 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.76585666 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766211358 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.768719084 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767938544 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.76917356 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767008715 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768731423 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.767261381 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77025708 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766208486 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.766449674 seconds)
  done (took 33.517845176 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766981986 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766236139 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.769712127 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766930671 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.767574232 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77019535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767733195 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.771206336 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769611022 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.76794342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766217302 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.768938698 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768406267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.76959705 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766299151 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765319525 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.768935901 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767883756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766009539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768082917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768617017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768504739 seconds)
  done (took 40.59728332 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.766861854 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.767490222 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.782401708 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.787078772 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.789396404 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.799881659 seconds)
  done (took 12.392102449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767274671 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768379544 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765009411 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769288371 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768784853 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765932627 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765073479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765486322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767663669 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766509792 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765541481 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769575247 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767830838 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765203788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767278763 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767691082 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765798934 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76540074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763944618 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767035095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764297809 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767063687 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764898789 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763750147 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763181034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76329734 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767230888 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764240984 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76419269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766445731 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765585177 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763759423 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766239052 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763623316 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765878157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763584608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761394249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764422746 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763245367 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763187275 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764292504 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76371233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764865189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761050217 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764024124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761457682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761393003 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762275217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761207681 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764638954 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764649959 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763168967 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763778473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764422862 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764897132 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764984259 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762581877 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762236731 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763851858 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763243073 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760703278 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765245633 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762074155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762138788 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764508711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761591383 seconds)
  done (took 118.168839648 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761847429 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763036172 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761613385 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761881371 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761272136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760857574 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760830952 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76329601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760472944 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760820438 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764859172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763360896 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762792362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76450173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760856339 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762334023 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762210207 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761467097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761890875 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765068133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761488118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762909397 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761643717 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76154816 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762889981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76414911 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761413928 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761595917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761991218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761908013 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761801908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761445487 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761319286 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760522115 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.760113463 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761229696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762054824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760787011 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760177775 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763037771 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760817295 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765703784 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760647093 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760718444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760216511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762886872 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761046417 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761508291 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760662927 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761466051 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762730453 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761928759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760931415 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760683958 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761557698 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760305815 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761880747 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760977695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761200725 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764221447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759986624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760814116 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764803345 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761696775 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763567192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761818961 seconds)
  done (took 117.981778354 seconds)
done (took 2450.357261481 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.779679413 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.794072488 seconds)
  done (took 15.268404462 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.924709427 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.875352702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.761490333 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.786959055 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.762987196 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.775294558 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.77740459 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.762124239 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.760961664 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.7618777 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.761738522 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.949215775 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.762205733 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.76299284 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.762301791 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.854499154 seconds)
  done (took 50.500854159 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.765839985 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.765796785 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.776297388 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.770751785 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.766367266 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.777660531 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.799722078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.773277321 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.79891121 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.778186316 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.836720498 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.776459125 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.766789239 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.817123442 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.778348791 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.78142712 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.858151423 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.840266453 seconds)
  done (took 33.922763857 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.844712501 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.780183891 seconds)
  done (took 10.325930837 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.757932509 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.78570873 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.765419464 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.777478086 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.755920809 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.756956626 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.794249554 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.805313366 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.771267623 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.78208128 seconds)
  done (took 69.451977405 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.770372665 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.766365743 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.76464024 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.761700105 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.755844608 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.761547194 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.761137819 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.76266052 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.442437987 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.803561649 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.771190153 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.768460845 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.765327973 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.767117382 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.763683932 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.788946444 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.954525181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.763292103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.761768665 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.769864214 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.765320681 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.825526949 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.778626061 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.764697431 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.793502326 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.449852089 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.776563754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.770559192 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.906447316 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.762744033 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.765042249 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.767849673 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.768622649 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.145551751 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.04298851 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.763761005 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.773966095 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.774338981 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.763615451 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.874259897 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.766909967 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.771387258 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.639419757 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.020489122 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.881844719 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.80909122 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.132530209 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.770050062 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.766265088 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.795233111 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.769903242 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.767265267 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.778991201 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.273570098 seconds)
  done (took 126.900820622 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.75847666 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.025657034 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918814116 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.761306849 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049825997 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.968066592 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.761360003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.812233006 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.762296476 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.9915914 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.983191126 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.870009443 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.762973602 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.763504921 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.762939835 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.760457805 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.922260177 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.835170848 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.761481917 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.757929377 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794725935 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00619061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.894973833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.761581038 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.782727616 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.974538418 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.897543343 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.869034788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.220885744 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.760527771 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.82770283 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.76144083 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.759876089 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.760160354 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.919497043 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.85668512 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850452944 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.763978363 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.760789435 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.760818864 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.437287491 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959456919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.864093195 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.907672029 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.009341831 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96685066 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.550705888 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.760732387 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.498515882 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.923473429 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.996693517 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.99255676 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.886968167 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.763927172 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.278719549 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.760711788 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.760644561 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000089599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992169121 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.867655699 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764372744 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.763419134 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.762074069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010043905 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.764010015 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.858206984 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.766974563 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.762614504 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.858959952 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.868381538 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.993883181 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976991602 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.796799631 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.08140331 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.24117951 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011918408 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.832006358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996418258 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.765727718 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.762423068 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847868867 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.71939915 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962288933 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012845893 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01920868 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8026711 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.489105227 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.762842044 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993809419 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.987877027 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.064946133 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003407984 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.915065814 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.080763913 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.762784859 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.762611692 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.013031627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.902014236 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.765710164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.125150705 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999026467 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.332051375 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.794766823 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110147036 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.899127183 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.765914463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.406810142 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.764639712 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.991393702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.806752413 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.763889721 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764344178 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985644678 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.841388594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764746098 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.394474976 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.829232817 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.765696028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998528575 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.766824597 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030169318 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768262532 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002835271 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.893489689 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.80154668 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.994461122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005691979 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.770664795 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.012485761 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011749097 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.88326623 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.989167995 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.393488616 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.765157977 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05684375 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.767837252 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.764864579 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.937812752 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.767608685 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941461038 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.769363762 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102081215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791673232 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922130961 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768406082 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024012103 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804138452 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.818416665 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.769577737 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.900783671 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76934378 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.665751002 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.919879848 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770798608 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.766606434 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.505766238 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.766535736 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923696769 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.99910514 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792351576 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841087187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.438920085 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.765456653 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854882236 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793554481 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.116679189 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.765781117 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.980868712 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.767457248 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293035243 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.765791494 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.00961395 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.949304085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.767905087 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.767132447 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.676889073 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.767099419 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.767175879 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.929179737 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.184929647 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.766979687 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971241841 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.76861272 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908779585 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.768828606 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.846299005 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.122711939 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.765478714 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.767755791 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.768531256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.76687574 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.76955876 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033099082 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.799889761 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.299045108 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.908814341 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041032604 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.09004372 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.01894175 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.814860992 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.772986944 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.01821585 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.772081788 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.833286842 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.769833595 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793023949 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00425353 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771290988 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981429696 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050243645 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.69224784 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.819564806 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.77041737 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769364734 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.725766572 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.927417562 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861220889 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.770553331 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.771486241 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.895453482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.901769919 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985749055 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.771458224 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.103766077 seconds)
  done (took 881.078773519 seconds)
done (took 1189.142794143 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.76872579 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.77333928 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.760179741 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.774651096 seconds)
  done (took 28.783819022 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.779329901 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.777258872 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.779229667 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.776894563 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.780897935 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.777524692 seconds)
  done (took 12.380358358 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.79386504 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.774500276 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.774498764 seconds)
  done (took 21.052747627 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.845587555 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.183526598 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.888902383 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.212948027 seconds)
  done (took 9.839945388 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.779308601 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.780215428 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.780409059 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.780696567 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.781956148 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.782240462 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.779869548 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.78164828 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.781632992 seconds)
  done (took 17.738018239 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.252964826 seconds)
done (took 95.753813056 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.953840307 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.008633365 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.324426728 seconds)
    (4/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.369972613 seconds)
    (5/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.506389308 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.873062531 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.760753594 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.972179965 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.074944156 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.804598984 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.801478534 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.929486973 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.779295552 seconds)
    (14/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.90482932 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.975502631 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.820550935 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.673333936 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.810987819 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.958367675 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.77759302 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.913718245 seconds)
    (22/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.327573286 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.251318219 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.868158804 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.761536308 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.828620785 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.765713773 seconds)
    (28/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.888951303 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.229934592 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.782589339 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.398622149 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.021893653 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.162185876 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.805250282 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.760890735 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.769257886 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.676170836 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.730716933 seconds)
    (39/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100761055 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.049748012 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.778115213 seconds)
    (42/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.848692214 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.461442824 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.894343493 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.8579093 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.795807207 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.754466041 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.774826895 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.780771333 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.807025931 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.912153414 seconds)
    (52/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.244650622 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.766741914 seconds)
    (54/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 3.55246812 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.117644054 seconds)
    (56/309) benchmarking ("sort", Float64, false)...
    done (took 5.580677041 seconds)
    (57/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.049658958 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.890983479 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.083587247 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.050730873 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.0794175 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.25808076 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.027097029 seconds)
    (64/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.947860674 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.845223066 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.763284897 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.014870669 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.797179345 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.881536097 seconds)
    (70/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.278173343 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.425956497 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.925379513 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.869625868 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.852913074 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.107107909 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.871231987 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.908034539 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.958943406 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.913493316 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.670879617 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.881399971 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.783301863 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.10914846 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.452112071 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.32106982 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.973033453 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.797997359 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.854536962 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.717128864 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.292356514 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.452854215 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.140833389 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.117931238 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.978194794 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.845504112 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.780372694 seconds)
    (97/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.843407578 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.106998747 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.007675134 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.681263943 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.190310006 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.78043132 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.868085284 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.03183064 seconds)
    (105/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.901908517 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.878700745 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.883604035 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.778894102 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.529222806 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.984872564 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.797746736 seconds)
    (112/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.905787252 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.88273042 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.113727884 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.780388158 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.810956349 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.329517352 seconds)
    (118/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.863107279 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.398410545 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.947078044 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.229427696 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.801558876 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.588469946 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.044945756 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.77858271 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.999209533 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.096126697 seconds)
    (128/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.870906885 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.033640339 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.769620525 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.769179898 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.186375833 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.868042388 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.767479643 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.850922017 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.799183721 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.909449194 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.765525037 seconds)
    (139/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.868952909 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.099427722 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.786897163 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.07076842 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.32607188 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.916765945 seconds)
    (145/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.908222901 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.381976965 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.952099998 seconds)
    (148/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.765296475 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.000903475 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.137055502 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.672541775 seconds)
    (152/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.042500734 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.185321954 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.076984506 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.945172831 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.574631229 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.810631114 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.24081095 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.795182694 seconds)
    (160/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.933993491 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.857020901 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.177347929 seconds)
    (163/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.888009385 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.13730812 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.592081616 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.789573315 seconds)
    (167/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.90661549 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.840253564 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.464846574 seconds)
    (170/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.680817909 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.891003447 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.172259508 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.845320436 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.696038063 seconds)
    (175/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.992053197 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.948710075 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.354860986 seconds)
    (178/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.795334312 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.083331264 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.813846098 seconds)
    (181/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.293923668 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.188934142 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.885989387 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.817585601 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.068278271 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.165617279 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.000628183 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.849319819 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.811640586 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.781584179 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.814511065 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.013332444 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.788973012 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.968473885 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.084247947 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.915760713 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.399020236 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.89047635 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.846172185 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.926119411 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.814987824 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.457284619 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.790534403 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.211134095 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.919585085 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.788885651 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.816136033 seconds)
    (208/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.899665017 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.099557514 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.561615292 seconds)
    (211/309) benchmarking ("sort", Float32, false)...
    done (took 5.553659432 seconds)
    (212/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.800279147 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.881772256 seconds)
    (214/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.118431408 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.7863401 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.007311428 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.582895788 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.809006421 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.985926403 seconds)
    (220/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.972362104 seconds)
    (221/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.919727967 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.056967388 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.893364973 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 6.784307713 seconds)
    (225/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.163499308 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.814059878 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.973387452 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.809332078 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.994179756 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.064986295 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.164111284 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.785720842 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.830433326 seconds)
    (234/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.917007563 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.304281744 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.789069357 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.732508849 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.867138933 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.853499854 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.134235301 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.930161672 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.541370601 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.3459806 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.857603423 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.789169461 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.79120751 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.832659769 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.170032417 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.954286973 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.972541405 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.779457776 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.783330542 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.786285203 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.923194916 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.987060143 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.879402167 seconds)
    (257/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.882498115 seconds)
    (258/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.119004158 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894670004 seconds)
    (260/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.376576024 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.030134318 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.183105606 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.819119668 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.77512536 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.181830569 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.167608172 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.168247465 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.957586666 seconds)
    (269/309) benchmarking ("sort", Int8, false)...
    done (took 4.805958238 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.009445103 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.81667292 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.774867825 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.810712144 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.685173767 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.108107511 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.111461376 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.87428006 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.983459185 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.734276678 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.88937037 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.895429353 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.93926344 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.035500315 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.057815855 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.522256499 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.178351288 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.096921136 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.029285649 seconds)
    (289/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.819189843 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.163767682 seconds)
    (291/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.142100044 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.219163091 seconds)
    (293/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.958821648 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.427898044 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.836144652 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.974671138 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.847966277 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.293084039 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.961114993 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.908871861 seconds)
    (301/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.874942462 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.484782153 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.090678147 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.819989993 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.252632132 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.813569118 seconds)
    (307/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.940106141 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.787217841 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.954744039 seconds)
  done (took 990.684885255 seconds)
done (took 992.473638105 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.826879087 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82019581 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.803857802 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.825765006 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9163179 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.83281852 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.815024589 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.807292604 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.852918061 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.853880512 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.802354798 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.831687338 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.804348091 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.805336065 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.80378709 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819496806 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.116704302 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.8363877 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.822158846 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.812715362 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.821893356 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.804099821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.853622401 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.831553474 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.808231502 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.807463591 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.809347547 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.82415586 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.916934464 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.808651141 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.807577716 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.816673009 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.116669521 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.835808982 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.80098329 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.824200702 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.815886735 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.814700613 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.809066243 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.837168555 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.264222455 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.816474772 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.807416062 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.806773871 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.806330286 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.809337147 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.807334346 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.813518567 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819123316 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818981035 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.259320279 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831828507 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.808404687 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.807800034 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.817714038 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.807432499 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.814601125 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.822514791 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.827018861 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822935692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.108000879 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.840718747 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.808546746 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.822768158 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.813636729 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.295392032 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.812516676 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.811093933 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.263660983 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.821594636 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.298305604 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.826047211 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.809781283 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.82185561 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.839084932 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.119314266 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.831156371 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.806122494 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.815141167 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.807019556 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.81649541 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820817451 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.812473824 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.808314906 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821920926 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.836430041 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.819853836 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.809243791 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.817341423 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.827833111 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.815832381 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.819087416 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.810490131 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.803430693 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.817769097 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.816062011 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.812200869 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.811942679 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.813274632 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.819313071 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.26132393 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831984189 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.806293493 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.805237033 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.808263909 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.823060991 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.260615653 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.817469453 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.831824137 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.85701928 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.811973366 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.111382367 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.842780272 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.826769674 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.817915408 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.814486066 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.804337947 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.109556753 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.291743989 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.831842564 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.811778974 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.808255081 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826413795 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.813780621 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.806763461 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.122586994 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.839705043 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.823816011 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.932052205 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.820827479 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.841754333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.808619718 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.814058514 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.840833626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827655192 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.842035682 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.81476446 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826884118 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.826698395 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.808177504 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.820578319 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.821875421 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.812488877 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.818661313 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.805255423 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.840313444 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.823150919 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824348571 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.832320448 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.933779546 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.80821058 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.111981279 seconds)
done (took 284.676849638 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.879080136 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.806184491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.907407667 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.808184512 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.890267261 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.894898421 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.805713735 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.80548498 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.805381666 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201887071 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.806534701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.80605552 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.802693771 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.804518234 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.890938655 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.809291519 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.806389583 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.142500934 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.80857886 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.878675781 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.802880673 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.806527432 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.808692109 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.180037793 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.804467437 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.805214423 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.881263553 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.809674941 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.175311384 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.802055967 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.803775884 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.145984318 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899927128 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.826369536 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.819559475 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.816613171 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.891730543 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.815554469 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.89187744 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.890390776 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.908271798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.850217 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.805777476 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.802284901 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.814050711 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.811316865 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.807614611 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.837059823 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.805360419 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.808461004 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.143326584 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.820621656 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.818317139 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.808005859 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.808520121 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.831097034 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.807977718 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.810488882 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.900926148 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.810766985 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.873167703 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.182421948 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.204661653 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.810522235 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.804207739 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.809153353 seconds)
  done (took 180.271277977 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.875024336 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.881271473 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.876024376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.813847981 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.858952894 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.880361836 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.81324429 seconds)
  done (took 14.737615024 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.816326294 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811838949 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859537155 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860980253 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.811385574 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.959823102 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81134029 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.822843271 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.810658984 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.862175396 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.811482391 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.811318971 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.818298164 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.808699009 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.858734228 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.821628985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.92767112 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.81144791 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.811547519 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.962751018 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.809806651 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.818190336 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.865974361 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.822781664 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.812649048 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.818412131 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.402776358 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.81316021 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809866823 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.811648539 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.810119798 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.851888253 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.810902659 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.802824522 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809350266 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.927662697 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.812011879 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809974551 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.813279144 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.805667234 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.81184012 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.813220036 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.812508275 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.810246953 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.812629418 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.834825505 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.813940773 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.81243273 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.813553651 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.813825369 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.864069018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814005433 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.808803308 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.81082566 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.865989744 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820135125 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.813444156 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.812051188 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.814803063 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.811598145 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.965392614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.86183259 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.813462756 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860684092 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81432183 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.814467509 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.813474732 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.814451068 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907376788 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.814247758 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.861240361 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.810854822 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.971698752 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.837958663 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815993726 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.815971526 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.81599769 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.814248384 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.810200765 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.821940168 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.812028536 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.814577278 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.820205256 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813879102 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812277605 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.924785647 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.921597468 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.812606564 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.827107196 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.820576405 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.81338831 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.867360811 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.815635558 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.812341411 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869164893 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932592065 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.871094922 seconds)
  done (took 200.254487826 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.818056116 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.823466631 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.816934046 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.832447878 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.814738159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.815463506 seconds)
  done (took 12.664599788 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.81582412 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.81773135 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.815478772 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.815714759 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.815255103 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.816281502 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.816169438 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816110363 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.819739865 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.817023814 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.817616425 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.816051549 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.816751373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.814594161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.815727761 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.81490429 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.815974197 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.812342209 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.817030774 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815582185 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.963827624 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.814598146 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.815210172 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.817180139 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.818381728 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.815289818 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.822561356 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.815524054 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.815549509 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.822906045 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.819228532 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.815179307 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.815361341 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.820199777 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.820261389 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.816609425 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818990722 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.816429419 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.812199906 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.818189608 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.81652775 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816662211 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.817490944 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.816866241 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.817857164 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.820434392 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.819839054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.824335727 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.815962968 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.816441585 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.818532314 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.816872218 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.81653122 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.816799215 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.817813023 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820346919 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.820124011 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.816082729 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.816897919 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.817902111 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.818525054 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.817502896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.818245642 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.820853974 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.825923152 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.818321668 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.818482444 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.821470445 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818803168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.818680155 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.818425844 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.815132339 seconds)
  done (took 133.752827652 seconds)
done (took 543.434193993 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.918863291 seconds)
  done (took 8.664751348 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.877489808 seconds)
  done (took 8.723102779 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.439143372 seconds)
  done (took 10.185485343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.835201261 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.830328799 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.815338276 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.818393715 seconds)
  done (took 29.055920671 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.877657296 seconds)
  done (took 8.62434191 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.82455881 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.810535412 seconds)
  done (took 15.417800139 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.863470757 seconds)
  done (took 8.611005367 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.916591997 seconds)
  done (took 8.66660181 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.839266274 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.855803322 seconds)
  done (took 15.454578367 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.799149097 seconds)
  done (took 8.544678563 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.513664459 seconds)
  done (took 11.266538466 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.818169736 seconds)
  done (took 8.578785554 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.848328501 seconds)
  done (took 8.595090259 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.034867736 seconds)
  done (took 9.781469198 seconds)
done (took 161.916281052 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.813812513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.81045775 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.810961095 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.811522114 seconds)
  done (took 28.992540185 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.852411149 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.8532288 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.853552061 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.86333265 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.85561409 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.854164369 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.844794355 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.846178344 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.864169533 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.856394008 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.854189818 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.855455801 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.852330116 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.845437482 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.855361178 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.855187969 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.86473263 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.854663848 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.845535136 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.855927879 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.821648779 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.86388707 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.856767482 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.819950782 seconds)
  done (took 46.192350259 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.019015674 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.891802761 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.973221355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.871875348 seconds)
  done (took 9.503942875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.871693176 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.874322036 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.885329948 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.924481666 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.962065122 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.883229996 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.846860195 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.841483974 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.828215162 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.873211197 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.950288392 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.867160933 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.958431476 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.821057522 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.999840994 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.820657984 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.82101279 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.872739401 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.925019486 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.936635765 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.822266244 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.872708888 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.876159591 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.868106422 seconds)
  done (took 46.951809942 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.819902833 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.828569491 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.826975644 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.820864649 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.820603163 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.821582423 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.827384003 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.822461778 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.842155581 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.822622943 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.819848971 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.821691434 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.819744398 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.820946498 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.820342985 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.834067935 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.835208128 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.823050705 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.82432177 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.827363735 seconds)
  done (took 38.250446336 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.814826971 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.668603497 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.166414774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.071695861 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.813437067 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.818636859 seconds)
  done (took 31.104746302 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.834067054 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.82734425 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.820988745 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.878806967 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.96123404 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.83030393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.822210956 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832721919 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.867471403 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.887429222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.841645094 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.850496748 seconds)
  done (took 24.006026733 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.83168259 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.819785034 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.81964369 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.836170935 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.83438656 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.830326873 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.829723657 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.816166695 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.836725561 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.842650717 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.831463251 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.836855498 seconds)
  done (took 43.721369662 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908347544 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708607892 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.856919579 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537346048 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.292099837 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03132539 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.350098846 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154878356 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.824764063 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094858701 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900698454 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925340781 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073819792 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81971953 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.843469024 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.297159878 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115888621 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050000283 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85214693 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587512828 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870881438 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384662347 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.657515232 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880039596 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032456632 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.953121286 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.080913947 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.772295527 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952334635 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85932502 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8311762 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820276895 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096063099 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193300422 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927075639 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832105036 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.472443982 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.539815652 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.807919914 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.582177222 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.605362689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.948996521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829446238 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821838636 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.755690408 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349492208 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199184177 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.829038773 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.534336757 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.821848661 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832542568 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910001247 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.82637356 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.638183344 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775400268 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.101400556 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.820569825 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827278291 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391891967 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935196808 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393926707 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.801712878 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.014710442 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598971846 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216894278 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.971012167 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.827071388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827234434 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758482365 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.593367101 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87411047 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968518119 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.843769194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473802079 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132275747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.973844611 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768926793 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108639263 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.660886426 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.23507921 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052904369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.780384525 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75822278 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.683049136 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.757354822 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08630267 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859621512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.461578393 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863005646 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155803246 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.835864404 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841678952 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832650131 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048709875 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.391291364 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824388268 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.654888066 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977132154 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846447989 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156592117 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758818285 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.828210746 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080860156 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.036383561 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.102619902 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.342896411 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979371457 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825079895 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.907782046 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.78322844 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876610592 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.093132494 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886089203 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939650175 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884881401 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.782133877 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122212474 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854683758 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.993911284 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.90515347 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958095965 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.155936837 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121426594 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889946773 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83615744 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825924744 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.679563542 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378593258 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093196518 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.828480504 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362774351 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877930534 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.825693882 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761797526 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.425330614 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912588444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.799280105 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.049726817 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.817061903 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143192252 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76219407 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973065027 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.941670094 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.049686114 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.469033441 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.905774931 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084789998 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351656415 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.14777744 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879396966 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846176681 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94616374 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850450065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.295978066 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122620737 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.831077261 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.83210804 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646271733 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827451785 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828959774 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.833530575 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625118442 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109591049 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855696183 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832703785 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.71878266 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.842630595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895481848 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834511432 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838349296 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.373428568 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579979298 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.840612623 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.450032051 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057325902 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839785927 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.60231467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940377682 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.911815816 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105640896 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889462278 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.765442092 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.542235981 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.524500242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829909458 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764518754 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.830741168 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840329199 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843422961 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.208065894 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103454365 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877151017 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.628874985 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.875043255 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842699726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.836289233 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831720414 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37378025 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958170212 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396936911 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884290928 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968273212 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.844522837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765200179 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835447655 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835283182 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832145017 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.787124021 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884232347 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.596418845 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212624432 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087711129 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.47913309 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852525283 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.624214348 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.890764853 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.863192004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691642479 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818544403 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.872429031 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846281929 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.844022445 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.611199592 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54093175 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399943322 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147773967 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141759014 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270768425 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.352618951 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139764728 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167346492 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067996313 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362033621 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892263566 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172920098 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77819018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915232939 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.474204181 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183763009 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850556757 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061793878 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212309404 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.756812828 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860573366 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04602918 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867043897 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.793620827 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798514021 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.039980778 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975927013 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.591436693 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037212438 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164127312 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.542615993 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.95305493 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.831919724 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.509429985 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925067979 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.546674139 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195250541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411769432 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.835929447 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327018715 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.837325429 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281146381 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180913655 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.204676113 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.958550804 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770826172 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843712328 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846453068 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.834449613 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.831085052 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.703296959 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.090148528 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845444434 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070682443 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.150758733 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12886636 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.743332741 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.840075475 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835948027 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131228531 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.659309115 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004770132 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.32767186 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363037402 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841221851 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.769989088 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76995554 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.527105489 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842200221 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.811382195 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069668648 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.021904733 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79023782 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399516045 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082108022 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090462745 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.849095258 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110342265 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113134262 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.573162543 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865775617 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.93609621 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.563902925 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.945179929 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.107357337 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072624176 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634925187 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069626722 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.878027198 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.652113278 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.83480635 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05207411 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.106025517 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814620953 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066606476 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.559432439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.872281398 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155382408 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895724705 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.762737584 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990941448 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.032200078 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847494532 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922633094 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846297903 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.849031084 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850860956 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885485261 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.774565955 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964412101 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.853733693 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928173444 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.959855821 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.370331377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.846930219 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114155107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205553205 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165986206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901513148 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.839250463 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840133269 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774752225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97504814 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287715041 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112564634 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.97040764 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.137758391 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863170561 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.568409534 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270044832 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087130207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113509932 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.733465315 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838766702 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.863844806 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.106814007 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851044585 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.050139065 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075431228 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16347802 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309950475 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.120155179 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210841396 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11383939 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211114807 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842052473 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432547702 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.882855506 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.527408162 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.883849387 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801551987 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110799687 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852528871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222008992 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865658288 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.039612314 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.357681618 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620181623 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130673019 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.827215147 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.903154731 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11666346 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.233413187 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154065613 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912130142 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852261698 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.54620574 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977751287 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.715419672 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.113376404 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.84157507 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052677973 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.550654731 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.852089301 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114728545 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152372359 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.841281882 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.728962638 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855073368 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.85222914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068884391 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105329963 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09344631 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851658345 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850720279 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.656675496 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114074443 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901336236 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776703322 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.845994417 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941817556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09195966 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866093531 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.359737055 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.55417261 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13997013 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.759777766 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864486785 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4137543 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208985253 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164218462 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.381387425 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073486058 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.401045494 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844570986 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152594707 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.850183537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380036456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16262476 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.849245488 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.493537638 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890137821 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.115298874 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162260776 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.868267752 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.623780644 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.811934434 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067520764 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435782738 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787174875 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842287643 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.905173426 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842815473 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.976647231 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855906591 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.72825169 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823424027 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.599539929 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337543163 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.850089731 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.831973312 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.620965831 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.502711997 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886216359 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991264979 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852822615 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.554525661 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.138822283 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100196256 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49257642 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.85898805 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.850590617 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848259248 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774214152 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046334664 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.225860484 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14302393 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.340184651 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.888367043 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850566093 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.060738545 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058129746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.774220815 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986296288 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373849422 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890231411 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.580937866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.527928236 seconds)
  done (took 1669.794672871 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873531783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.866711876 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.865169633 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.918106523 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950922994 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93650409 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.931996933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.876016654 seconds)
  done (took 56.997821177 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.844207624 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.046412205 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.853743435 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.850295235 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.854644725 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.846686109 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.018736218 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.857876548 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.855473704 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.859971234 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.849175878 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.846852267 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.177806628 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.874357433 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.850029157 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.850063521 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.854456774 seconds)
  done (took 74.012029709 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.84621096 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.068220482 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.88966504 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.868602287 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.805912339 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.862761313 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.914480069 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.860277488 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.852782915 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.071966265 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.482245179 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.857368403 seconds)
  done (took 90.162747929 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.856603684 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.855545447 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.855748311 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.856134009 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.854809611 seconds)
  done (took 11.064402467 seconds)
done (took 2172.529499296 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.102603062 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.07906186 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09216893 seconds)
  done (took 5.953185015 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.99510799 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.046489885 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.163007072 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.172047896 seconds)
  done (took 10.161399402 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.144946736 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.22077399 seconds)
  done (took 6.141630413 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.255303813 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.866985275 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.250759989 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.848228838 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.852646005 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.853947214 seconds)
  done (took 22.341846043 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.851816373 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.857522805 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.855019859 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.856030698 seconds)
  done (took 9.201985777 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.838259361 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.509514494 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.836682939 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.851953488 seconds)
  done (took 20.814309472 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.60154323 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.290394453 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.595961972 seconds)
  done (took 9.269182213 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.337356528 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.746873955 seconds)
  done (took 8.861810287 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.124791468 seconds)
  done (took 3.903161384 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.88365738 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.124600474 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.382764034 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.384961797 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.481701872 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.71528997 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.174369832 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.104013638 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287253257 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.2974525 seconds)
  done (took 24.618612796 seconds)
done (took 136.523872741 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.230313599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.092350285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.050027316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.195076757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.082255101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.045978425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.054775449 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.18452809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.700616129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.691214306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.20033056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.075936988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.007810688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.094425666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.015744986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.093238386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.071441968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.250869398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.893239127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.095242772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.0630437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.829900814 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.042332923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.842759547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.071682462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.00399239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.420578248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.093708672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.047154648 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.42858851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.004126209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.253396745 seconds)
  done (took 172.010937996 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.743230762 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.850295913 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.847154544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.852170425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.075609323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.849583444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.853810079 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.850508913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.010879519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.991751726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.873353132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.117347116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.867133984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.849859353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855476578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.851645277 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.13121818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.825724718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.867672581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.872030116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.870560438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.986065848 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.871494965 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.035262337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.137054926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.870308745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.852359981 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871526963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.857438538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.859189409 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.861478052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.853606008 seconds)
  done (took 206.747971307 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.854083767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.854238749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.854473505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.850282589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.854848457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.856388964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.855241699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.856454712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.513205073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.506719016 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.853814195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.851245739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.859804216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.848945709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.858087443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.850055803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.858055828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.857601906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.853346419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.856772402 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.857727425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.645001137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.858012269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.666547924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.86270369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.863146734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.855573257 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.862538888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.863112919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.86434147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.866842209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.853269043 seconds)
  done (took 220.119824005 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.052458403 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.859916176 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.866652844 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.807311466 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.867436139 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.86243158 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.815585081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.05306898 seconds)
  done (took 18.984583116 seconds)
done (took 619.65635082 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.326548206 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.171034683 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.042694028 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.884856755 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.124443732 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.915866495 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.881368868 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.94078097 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.605322582 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.950206828 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.52200575 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.894801268 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.621862239 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.901501849 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.004519246 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.933938374 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.422025648 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.511903623 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.052001244 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.951378323 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.061801464 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.838277041 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.959447664 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.628627348 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.630802742 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880644704 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.057613692 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.424068043 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.891961073 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.041604248 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.604306356 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.270032958 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.893541853 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.880101617 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.938357147 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.918171883 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.221674529 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.889925061 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.013098565 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.648144366 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.9443396 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.499181799 seconds)
  done (took 102.581899181 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.852534238 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.856365775 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.853456831 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.855354151 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.853007238 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.856962713 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.855034565 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.851728438 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.851660518 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.852122719 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.851262069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.856150664 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.848696728 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.851419137 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.850253125 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.856189254 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.852743465 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.855456374 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.851621916 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.853799095 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.854645078 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.854160981 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.866092252 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.850338702 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.853331235 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.854807891 seconds)
  done (took 49.994646289 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.864909964 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.01252444 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.116591351 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.883675848 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.869411301 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.870276962 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.887223456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.869548952 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.865069285 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.870272133 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.958891427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.873452422 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886003183 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.118717255 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.878906779 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.8682087 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.867694961 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.864889789 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.019878793 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878330574 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.882765799 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.871617328 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.884221216 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.87926909 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.867547924 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.864290694 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.867763197 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.344601601 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.875024545 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.95872648 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.905440016 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.885185664 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.315398652 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.13557019 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.921421444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.871052376 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.869211102 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965584848 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.86921205 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.868830491 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.88513293 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.873525392 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.117721513 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.353570577 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.878214417 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.866703997 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.351722289 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.974687955 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.905868914 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.87687919 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.123423632 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.881731194 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.871296707 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.867319997 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.905967192 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.877963034 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.865650444 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.216481698 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.876913674 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.888513494 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.869143653 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.873220994 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.030152697 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.874766159 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.015068576 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.876433597 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.87818728 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.87239553 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.122823278 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884939556 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.365784744 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.87988181 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.868535269 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.961922898 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.018234974 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.376921521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.881703337 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.029569797 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.335052953 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.890566587 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.878062774 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.341287469 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.894474457 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.874980485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.876219226 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.872269227 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.870224447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.914774674 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.884768824 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.289739414 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.365362151 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.2367215 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.894642188 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.8844921 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.869109496 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.21790175 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.876086561 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.871065557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.11523394 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.367592526 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.881781435 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.878853661 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.352444851 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.881014886 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.890701229 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.876413695 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.124404578 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.880947542 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.913851031 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.872560443 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.878022238 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.871745397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.889793116 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.875598386 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.871028247 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.34007188 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.980890302 seconds)
  done (took 232.041740552 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.864132564 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.860697554 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.865138915 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.860709035 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.861516984 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.864778395 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.861125029 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.861299877 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.86739093 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.861231202 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.864468424 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.859720392 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.863735661 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.869174948 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.893661724 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.868807334 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.523097866 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.864552599 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.864759878 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.866032563 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.515006186 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.873052686 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.86344966 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.871265772 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.863815074 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.860914651 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.868929724 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.884531869 seconds)
  done (took 167.366204403 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.869669566 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.984279307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.888223093 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.899624159 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.880911122 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.870607825 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.893779027 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.886365587 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.875216208 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.869619199 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.868581667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.931356299 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.880608425 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970722888 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.901233195 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.907049714 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.977221985 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.878874703 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.867655439 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.869187859 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.901182407 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.864978795 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.9346825 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.992728849 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.887809712 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.982552697 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.874272229 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.873016009 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.867430549 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985923836 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.886564733 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.931431553 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.893127662 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.886889814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.991874704 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.987283438 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.973607756 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.896326614 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.877837577 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.86802358 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.868863944 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.860577329 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.985619523 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.888819364 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.872013687 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.978875952 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.887915293 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.871153824 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.878285434 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.87223275 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.88831821 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.888749098 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.938036026 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.999986135 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.902719325 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.895400935 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.897886659 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.184801866 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.881075845 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.970939173 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.861229398 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.991236326 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.888795867 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.857134198 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.872436188 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.876856505 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.899706467 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.901008395 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.975655996 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.876773916 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.971399432 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.903006003 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.87883009 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.873367061 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.876746273 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.982329831 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.986545085 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.903661276 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.90910222 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.904047265 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.867093908 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.873815859 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.862525739 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.892182205 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.875585405 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.989582061 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.985475352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.876109174 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.875419508 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.877671642 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.872814406 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.897269833 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99873437 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.903738534 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.967730051 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.934936109 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.94588409 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.885209539 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.884486805 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.880155725 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.930114084 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.886013428 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.884489681 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.233074243 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.94175189 seconds)
  done (took 202.748060026 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.32461429 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.924413735 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.931919521 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.17824935 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.300256028 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.731688983 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.914527727 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.923511389 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.944338133 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.11376831 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.995776116 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.940167638 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.9104195 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.899456126 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.924895493 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.942582195 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.944332214 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.252129798 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.039606121 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.012796477 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.899437018 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.214908234 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.234815101 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.338577006 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.955672365 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.265378763 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.599567522 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.166375342 seconds)
  done (took 61.626802415 seconds)
done (took 818.143667707 seconds)
SAVING RESULT...
DONE!
