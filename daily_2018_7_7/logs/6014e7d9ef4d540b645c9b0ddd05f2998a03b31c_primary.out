cset: moving following pidspec: 18246
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.982490092 seconds)
loading group "string"... done (took 0.577143008 seconds)
loading group "linalg"... done (took 9.450899968 seconds)
loading group "parallel"... done (took 0.180148423 seconds)
loading group "find"... done (took 1.491294172 seconds)
loading group "tuple"... done (took 2.212673915 seconds)
loading group "dates"... done (took 1.425004357 seconds)
loading group "micro"... done (took 0.241907188 seconds)
loading group "io"... done (took 0.669879358 seconds)
loading group "scalar"... done (took 45.609483419 seconds)
loading group "sparse"... done (took 14.562273325 seconds)
loading group "broadcast"... done (took 1.275980521 seconds)
loading group "union"... done (took 16.618978934 seconds)
loading group "simd"... done (took 5.657502542 seconds)
loading group "random"... done (took 11.651269296 seconds)
loading group "problem"... done (took 2.423095143 seconds)
loading group "array"... done (took 29.984737757 seconds)
loading group "misc"... done (took 1.371712753 seconds)
loading group "sort"... done (took 4.363405836 seconds)
loading group "collection"... done (took 25.282373418 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.760193958 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.158218811 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.178170921 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.228579659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243628128 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162857633 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.190609744 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.637617118 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.172839115 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.263832847 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.173898531 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.728657167 seconds)
done (took 6.67556843 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.266466327 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090646653 seconds)
    (2/2) benchmarking "String"...
    done (took 0.159044372 seconds)
  done (took 0.933931769 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093163518 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.22660623 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.124360741 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.142176369 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.141848581 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.123942666 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.141762933 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.14112155 seconds)
  done (took 1.735639239 seconds)
done (took 3.729306102 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.990007271 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.897492135 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.5560337 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.152195832 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.198216405 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.17504541 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.406848809 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.181869788 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.139989014 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.142509716 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.21592878 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.372810301 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.593515808 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.09011138 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.135713554 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.148296331 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.105022305 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.722074097 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.100835857 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.145891262 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.664118474 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.148767224 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.142056315 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143746195 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.234612355 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.154829524 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.204917954 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.120560345 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.701386448 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.121338937 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213144718 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.120303938 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.1843555 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.300662501 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.100646608 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.127431806 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.694800499 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.214108593 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.139124832 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.115133973 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.695024655 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.107221289 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.238296858 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.139130887 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.137590206 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.215462415 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.12542346 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116603302 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.125983629 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.110588652 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.187488159 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484653562 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.125208049 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170925264 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111476842 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.724394877 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.117734164 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.176138018 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143233952 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.127561093 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.117840755 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.118993634 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.193064899 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.125841249 seconds)
  done (took 21.999733908 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148084204 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.172832657 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.113896223 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.167312013 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.176339895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.116784882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104299089 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.113507996 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.142061603 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.227737888 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.173653278 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.178426487 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093248972 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.116339745 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12466617 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.281780721 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.148448131 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.131119077 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.119141807 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.129564884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.153011327 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.137439272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.118149244 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.137444045 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.197771453 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226005635 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.142345078 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.141133597 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099109666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.143809816 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.16069414 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.175897823 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.110601007 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097129427 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.223946195 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.139681183 seconds)
  done (took 6.088137578 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.251971338 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120565109 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.276828551 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.240682741 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.195774819 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.222558132 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147133399 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.324948264 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.297090774 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.197745695 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189424276 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150284286 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.134326477 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1016814 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.116038017 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097992206 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.315373908 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213170305 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200705166 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.13941087 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132340406 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.118313798 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.405084939 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107714576 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.121206994 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1106701 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.107838776 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.231295434 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108959681 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.626760007 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.13856581 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119073769 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153123297 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.227042421 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142500301 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.175494241 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109504136 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.123421699 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.273743134 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.136985625 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094341046 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.151270177 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153785788 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.158929403 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108167655 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143908497 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.296924511 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103449267 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.120764655 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131919484 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.367127381 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.240882817 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.119025338 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.120095855 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.430036398 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.123931985 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.133777388 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10431834 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.39639171 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152423668 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.120953792 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096271955 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.128494084 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096681539 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.439735161 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121882702 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.925896235 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.115247762 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.209893242 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124147514 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.135929885 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106191489 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122197031 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129144917 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.119831862 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09803294 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099866116 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.116847344 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106823433 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.140626773 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120724871 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097104376 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18397042 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.130636706 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.142658123 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144887315 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.108479963 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100479528 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121631594 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147380004 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099298291 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106218575 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.180861588 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.13365063 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102017576 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.141562763 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125414512 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.160582881 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102971754 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.224235578 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100935654 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.149391695 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.121879782 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132039803 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.151245248 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11740724 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104417289 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.113825508 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.100775801 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.179191219 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103130232 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097956389 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.124033727 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.137625093 seconds)
  done (took 28.075356532 seconds)
done (took 56.855642302 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.475126412 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.145797946 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.145934243 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.146090485 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.144827921 seconds)
  done (took 1.835817921 seconds)
done (took 2.578555012 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.441541198 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.259180577 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124684238 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.252838097 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110172415 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.263650232 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.218399451 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.125640593 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.284088581 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.105493512 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.250851669 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104693342 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.130143895 seconds)
  done (took 3.448600615 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.115555266 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.145874005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099635923 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.132475339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093042637 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113291842 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130971604 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.161855138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111903922 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105454895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.113826982 seconds)
  done (took 2.060982654 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.112619052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137847905 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098958936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111233219 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111234965 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110026379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128308605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123650475 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.129225332 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106326353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.111435259 seconds)
  done (took 2.022108088 seconds)
done (took 8.261591902 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.389666784 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.419148261 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.127454883 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.219489495 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.413053696 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.255531226 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.735188905 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169595508 seconds)
  done (took 14.7161042 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.157279138 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.118856035 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102387709 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11871088 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099928337 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.122090861 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098996006 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.119686604 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101091663 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.115778223 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102123723 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.118396048 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100440335 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.116237385 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099181927 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102057117 seconds)
  done (took 2.607214294 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143889442 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142269565 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.127408459 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11659956 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.124434195 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105517688 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.129635114 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.12705203 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104837224 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.122936417 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116739912 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.133495086 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.114215298 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.121619298 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11040986 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.135517421 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.121730758 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111052706 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.127833256 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110758659 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.134071348 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.107639621 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.131130397 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.133413464 seconds)
  done (took 3.822394182 seconds)
done (took 21.88379966 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.20846715 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107820526 seconds)
  done (took 1.05940322 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.125232887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144130273 seconds)
  done (took 1.021116934 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.135976047 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.116761803 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.168252374 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.141913809 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101443845 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100812484 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.16020785 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.119167999 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100719654 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.118900699 seconds)
  done (took 2.01760918 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.10671976 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.124712482 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.113505957 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.143772178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115963262 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.12103425 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.107362871 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.123946765 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.125698432 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099208961 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.127716189 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127767793 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.127159758 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.148195832 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107394699 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.127553371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115599627 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.124634865 seconds)
  done (took 2.940226086 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.10017879 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103512569 seconds)
  done (took 0.959132284 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.103893322 seconds)
    (2/7) benchmarking "second"...
    done (took 0.11603704 seconds)
    (3/7) benchmarking "month"...
    done (took 0.104199881 seconds)
    (4/7) benchmarking "year"...
    done (took 0.121291837 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.221591749 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.115240633 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09795727 seconds)
  done (took 1.635597007 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.628142627 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.303457972 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.403632215 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.144653492 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.185919142 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.451701989 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.207396296 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.122872355 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.140675553 seconds)
  done (took 3.394412709 seconds)
done (took 13.7744278 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.112266988 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.165336764 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637353706 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.136349613 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.097095687 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.181207116 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345609129 seconds)
done (took 2.430165083 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.413944922 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.145521851 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.103396721 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097870513 seconds)
  done (took 1.514788885 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.09844494 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10916605 seconds)
  done (took 0.969411463 seconds)
done (took 3.244803885 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09649374 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.155013771 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094369552 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.116069548 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.093597272 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096345584 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.113588015 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093488049 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113048307 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096082832 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096174063 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.113723448 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096531812 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113406365 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093435094 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111119719 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096365142 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096671856 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.111845935 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093750477 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111000415 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0959613 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.111194317 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09408088 seconds)
  done (took 3.308529265 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.124751476 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.116742923 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105569627 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.123029875 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103105173 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.122432848 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105622828 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.116458505 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.122222528 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100414889 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121102579 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103626028 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.118550833 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103071173 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1183436 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103151246 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.123138511 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099199703 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119075294 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10396118 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.123025089 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099952957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.120909524 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105540352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.121279802 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121591261 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102011856 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099109799 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123774577 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.12152613 seconds)
  done (took 4.157752052 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.108995909 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09431204 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.11268361 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.110411395 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.112213706 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098846695 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.112480639 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098954936 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.118092838 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095310579 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100915274 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.112487788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09788215 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.118259137 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.10018911 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.121837956 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.123085501 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.115837306 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09810622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.118263971 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102282036 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097350839 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.115661987 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094503454 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.112617047 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093919091 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.113283925 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09474256 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095350247 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.112550462 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102449647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.121923809 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09499636 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.131681549 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104070234 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.112431462 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107604846 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.111845446 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100375812 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094109852 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.111817956 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094414994 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.116682269 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.110885646 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.116304018 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096454515 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098539979 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.118901779 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100352854 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.121145917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09460776 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.116308327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102423948 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.118925142 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102578153 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09454768 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.114350987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095179563 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.118150445 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094127341 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.11309026 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094011812 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104208365 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.114760529 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.149743792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110840284 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097627827 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.120056388 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100403297 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.125890334 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10279764 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.13963719 seconds)
  done (took 8.558680742 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102600096 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127625772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.097939317 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097981274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112526878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095823249 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122568194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096111357 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116031477 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117119059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113336107 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097306419 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115979578 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100442332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11419408 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097826953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126845528 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093752797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.113957339 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100299614 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113860066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104499386 seconds)
  done (took 3.148572051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.297094344 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.125890871 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.183970969 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121324705 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.144815059 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.13900013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105436747 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.126048588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104865756 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.130711712 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.130310048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106117053 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.143886496 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12958424 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111833435 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.131756555 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105891282 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.130939076 seconds)
  done (took 3.243357307 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.116279549 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.117459455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127749083 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.118431587 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09989165 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.121187745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108975951 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.136550898 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102171138 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.117111824 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.11384827 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120253089 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102562457 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1184517 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102980257 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.117882603 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101928058 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116936424 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113365317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126450166 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.126174193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117019162 seconds)
  done (took 3.317125093 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122200657 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12019028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12867652 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125625354 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098232998 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119308914 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109579961 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.117174548 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111453146 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.11912088 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100096497 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118432065 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109420519 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117038091 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109008247 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118973559 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101534324 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117119931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101750846 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115505088 seconds)
  done (took 3.054387152 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.154428865 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13784858 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119818965 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155058408 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13825284 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119226924 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154456508 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119346956 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138549135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.15763369 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119985558 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.138659009 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136032539 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.147597135 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138420281 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136444814 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1538119 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.155450064 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120559566 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138614177 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.157275568 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120354729 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.154107721 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119967651 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.138590782 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120077404 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137690359 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.148378663 seconds)
  done (took 4.650038015 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09846678 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098109534 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.11362435 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09509876 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.113841928 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095684523 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095781835 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114021114 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098533171 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113782291 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.098917541 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.116680843 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09881898 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098901213 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117080997 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09889463 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11644006 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095559083 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09577929 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11474362 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098520065 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116896286 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098301734 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113865565 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096340698 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098904816 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114091073 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095976382 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117190134 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095899576 seconds)
  done (took 3.911133072 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.11260715 seconds)
    (2/2) benchmarking "in"...
    done (took 0.126907723 seconds)
  done (took 1.017624657 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098229341 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139079041 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.095662482 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102408633 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12681526 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.118256053 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112882448 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126863542 seconds)
  done (took 1.698285844 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.131282136 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.143246934 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.107952401 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.135244495 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.122697806 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.140936576 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.211701731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.108196455 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.129522138 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102053343 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.1433929 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100782422 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.131913799 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108876741 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.131096065 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122089158 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.119695982 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112903284 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.129341808 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102901561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126439884 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126588338 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.136402001 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111349355 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.124393626 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.117409646 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.141628079 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.133921351 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108405868 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.138765011 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110067616 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111908442 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106445218 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.125945764 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101233667 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.140403281 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129241749 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.127852659 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113884098 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.127518711 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11455431 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.117283174 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.117718308 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.129103836 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118840782 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.125197515 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10835384 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.118163068 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102496786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.125012126 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099177894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.12444148 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094209461 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.134345681 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116520031 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.151043082 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103448754 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.126092261 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108241665 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.123857017 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111516289 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.125335528 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117581392 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.124061515 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117221794 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.13206798 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113681543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.118032489 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094021928 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.120632078 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115929894 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.152355521 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.120702324 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.127396896 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109727537 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.120650326 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109937746 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129573956 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.132940724 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.120665505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.126061413 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111111424 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.136436602 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107485335 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.125794029 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110461524 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.122052004 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105602368 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10215013 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.155416861 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.122588102 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102310315 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.120736578 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.119693155 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.125496822 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105519981 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102695782 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.133805493 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095213413 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.126893892 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109210701 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1292187 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.143664394 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109175368 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128096264 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115631504 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.133579119 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109770323 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.124726099 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097169023 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.128080398 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103767787 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112373248 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.113114299 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110438807 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.127774168 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108019666 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.139899186 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103217787 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.125300172 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116855156 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.138363881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.122553467 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097631017 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107804728 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.12523943 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114988674 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.140084159 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.12284959 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099893733 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098859493 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.135094882 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10651418 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.131756341 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108649379 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.129704512 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094500201 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.120752666 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107936702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.139895998 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106333425 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.129145595 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.136037232 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111520899 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105306426 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.136597562 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.124608799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102689035 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.136785411 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109300082 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099350716 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.134570724 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.126313751 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.104309781 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107730418 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.134843495 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.127329429 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.109862159 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104399728 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.128540267 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119064029 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.121489203 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109171055 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.123474707 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.122310737 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.128920367 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100278602 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.116338039 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111381299 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.12322874 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106516388 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.121472521 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109651528 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.128074933 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103188366 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.12380689 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107129951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.142802793 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119180664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.129075424 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113743288 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.136864465 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.107495373 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.130449863 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107102074 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.129072104 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.108820746 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.135759178 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111283151 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.128465387 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108821627 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116478844 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112928069 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.134774109 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10331485 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.121740843 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10256107 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.126658074 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.120920116 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.127051324 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.109207468 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122487343 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112932135 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134881719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108670448 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.126011346 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102220323 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107574288 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.132124916 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109268285 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.130170331 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.139376391 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110181395 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099276811 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.135325969 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103613694 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.132885053 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100175216 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.123536603 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103592648 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.131061275 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105696081 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.125265607 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095613616 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.135883399 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117603452 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.130191754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103056054 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.127874849 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12493379 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.127134717 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113050431 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.127420866 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.115600332 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.152521313 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103184421 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.128376623 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.142344596 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108224628 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094789295 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.133396494 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104623357 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.121459412 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10479457 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.124010627 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111055701 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.131311727 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112352475 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.114142498 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109477204 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.123625351 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103528406 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.119674035 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.120843021 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.130215027 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110693676 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143930477 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111943409 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.128524183 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111942698 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.126437515 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110656596 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.129675805 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111115222 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.129189445 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10607216 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.122525802 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111258098 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.122591615 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103496272 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.127192161 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108948825 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.129743391 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112639713 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.125444369 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119559873 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.128624449 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.110165477 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172619826 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106216912 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.124685903 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110757999 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.132635037 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109402937 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.128517044 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10040241 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1353334 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108181772 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137900187 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108633792 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11783742 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109935798 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.127738847 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110445633 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.129566162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111043944 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.126678073 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107634454 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.127995294 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1255258 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.124384149 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.122210933 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.133634663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112381058 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.128955244 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111797549 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.126867456 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103501691 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.130604458 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110553372 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.131368465 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10717132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.132050056 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11112862 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.127701194 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107143104 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.12982448 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111308544 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.131240557 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096227889 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.122838414 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104819572 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.128280422 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117663471 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.129564808 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10698762 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.124919375 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112296577 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105609437 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.118453212 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114161539 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.132455863 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11010892 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14386973 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10336641 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.130151084 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.14734804 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09617063 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104485646 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.124619307 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105332039 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.137963689 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.110762473 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.138231077 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.11107517 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.124448657 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099619541 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.129959251 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106337852 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.115872827 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104208137 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.133894816 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106450822 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125282947 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.109890091 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.132861007 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111894476 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.137554301 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107000863 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.130730787 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11091647 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.119562032 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105139136 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103934534 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.131581412 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.110437713 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.124270227 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100712736 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.127805161 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111260889 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.130787038 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107779286 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.127005976 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118469926 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.128042634 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111067236 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137245946 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097183545 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.130576925 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.108216966 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.128264854 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104723039 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.131466668 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11316487 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.131725356 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118959741 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.128620634 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113719758 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128810931 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105330275 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.128336944 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109009599 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.129766774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104444058 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110847063 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.139853582 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103716176 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.13206677 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.131337796 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106407777 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113024258 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.132212411 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.132251466 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115603231 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108665607 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.131747729 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.115309381 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.128551398 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112173107 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.133185512 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107591992 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.138435414 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10460031 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.144340761 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.132109337 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.111807919 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.128165619 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106668231 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10928945 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.129114648 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107045992 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.140774032 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.111975054 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.123956336 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104861123 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.124924418 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112317976 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.137327267 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119220829 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.132088171 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112263984 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.122191209 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101374103 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.131708186 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106572523 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.129978835 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11461562 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.137137105 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111827934 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.127091089 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108013296 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.14045507 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117973291 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.136880438 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106675777 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.136412169 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111973561 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.131489397 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107553685 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.129351145 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113482622 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.135273829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108675267 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.124820071 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126234943 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.139735246 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112449631 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.128805503 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114747902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.130090841 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102731803 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.132130617 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110859498 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.136799919 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110993524 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129428162 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128892499 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.125034374 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10913373 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.138324532 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108702201 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.14213681 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102585614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.131663294 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113092278 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.133051205 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102473254 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.126228342 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105567572 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.132541526 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105000619 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.122560614 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129590631 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.140046326 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114269063 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127814899 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108310727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.123146176 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10356123 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.124767794 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112895864 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.129475182 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.126221144 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.125391218 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104969568 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.122225727 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110628657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.132425446 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114813963 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10168422 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.124710998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10520213 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.133425603 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.124203612 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12985182 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.109709794 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.133704741 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11146743 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.126699446 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11898142 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.12157099 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114076933 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150445177 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.112012818 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.136846173 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.13888688 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121975918 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.132122352 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103553515 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111595401 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.134344768 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.132722799 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112996696 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.132901635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138407799 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.133679159 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106268522 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.130657063 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111656625 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.125852498 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.124499109 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.133698937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.112807164 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.135032547 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110086532 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.134073722 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122750439 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.136375567 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113960943 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.134426979 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10802398 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.131107958 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10732727 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.129375087 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114997358 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.132631161 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11167907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.134904837 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106793007 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150351326 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.124148517 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.133035905 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101541205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.125197867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107207657 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10296098 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.135287289 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102797242 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.127065023 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.107423618 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.127860944 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116035558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.13483373 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112992089 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.133378257 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110168082 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11824116 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116560842 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.132665391 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116042857 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.121289143 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.111726013 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.132912368 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.12192012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.139974024 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108558355 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.132561481 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110324792 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.136612209 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103806131 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.135343002 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109787899 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.129000688 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106777816 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110961678 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.135064717 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113217493 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134883947 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11508187 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.133010725 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115277029 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.13692442 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101934176 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.12464613 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116347714 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.128193947 seconds)
  done (took 72.468965853 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.193758451 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111467211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099934661 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121037179 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.158812287 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106092768 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120221998 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105682238 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125058612 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122427571 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.119654501 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101161223 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.152008709 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.162862787 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.15792445 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122480758 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119827815 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105580696 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.120737614 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105689909 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.151760304 seconds)
  done (took 3.513149122 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.133132326 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.144525187 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.14241166 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.130264387 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.135260295 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.144679757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122314214 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144130572 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.150047399 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116582605 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.150352369 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.14427751 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.116522911 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.137308843 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137192368 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121223672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.149991327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.135162449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126851544 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142792833 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140705734 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123953319 seconds)
  done (took 3.815138702 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.115999403 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108750219 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.139104201 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.103021164 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.129927258 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103036723 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.137555813 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105449354 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.141329571 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111288775 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.128112038 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.111101127 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.138398275 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.102798093 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.128565873 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105994186 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.140762142 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.110956786 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11328994 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.124957321 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.178902011 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103290029 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.123753679 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108838243 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.14110624 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114978747 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.129351809 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.111009104 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.107791175 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.13251823 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104755574 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.135957381 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11857794 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.129478256 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109165861 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.130721606 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.110502017 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.123394584 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10706629 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.138703747 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10444665 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.132311161 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.123973299 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.126108592 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.105946069 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.135605882 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111852748 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102772831 seconds)
  done (took 6.635193688 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.152824548 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.192327788 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10873514 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.178566698 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.15109121 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123546696 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.133011021 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.177544571 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104302269 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.13082905 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.155869526 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.129768924 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.13293309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.11920033 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.13360121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131516265 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115155268 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.125555414 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119815233 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.129556517 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118743935 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.136462993 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.151251747 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126897963 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.137560683 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109160278 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129041423 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.139012026 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125959139 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.140566235 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.139685449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121993835 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.151078241 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113907955 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.130031842 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.134960619 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.13375284 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.132069908 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.114496249 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.124376227 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.114444779 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139125374 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.136079404 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134117475 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.13348542 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112818962 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.133487756 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101877133 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.147276471 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.132590226 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124538054 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.152352884 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.136804987 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111571689 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.140027398 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.151710578 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111516256 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.129955971 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.117128643 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.147103521 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103433373 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.138307468 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.149430326 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114756745 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.144949498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.150027696 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113609356 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.137057444 seconds)
  done (took 10.024012837 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150802952 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.136877463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134660642 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155193271 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139161885 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.119838939 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.140579315 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.138734547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119986862 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.150037592 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119284563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.205200118 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.134722994 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127681561 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.14113638 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.137276688 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117418309 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139557773 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119235199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140373275 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118719283 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.156547366 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.137712439 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.154425878 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138239023 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.130713657 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114739317 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134881913 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.151034801 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115751555 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156313937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.139592586 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119483449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.155979904 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.158363616 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118709548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.132144236 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119327237 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.140065275 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13807729 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114437377 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.154241887 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1167016 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.131264317 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132843848 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113711588 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.149986775 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.152701125 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123815056 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.145783059 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.136432319 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132681242 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136017612 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.136957911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133518977 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.166211414 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156430653 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156705844 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119635321 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.154088051 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.154739656 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.169357215 seconds)
  done (took 9.424256341 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106794089 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100928155 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119418487 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098556371 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12172179 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09981561 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10087828 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122847648 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101282884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.120925432 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102275637 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118683435 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101160384 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102865442 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12232199 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104592178 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125044623 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107527912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106205807 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12744121 seconds)
  done (took 3.050324692 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.118219869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154809747 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.10920663 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.139902931 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112000268 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.139702326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109920107 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133202075 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108924019 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133065253 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126085922 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146849818 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.127107524 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119278309 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.147332928 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.138694552 seconds)
  done (took 2.908588419 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.134769037 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.152830988 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.156326904 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.113721188 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125622961 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118104445 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.132148004 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105519269 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101767785 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.137837243 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113879328 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.134796611 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105125423 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.122047419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102877696 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.131628936 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103552113 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.134216891 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111655401 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.160865269 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.135219537 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.112425409 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129629687 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109381915 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.1284441 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.111087177 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.131346861 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101268151 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123068467 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107829998 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.128139234 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119075278 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.126422738 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.116054447 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128147538 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106616846 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.133004547 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113441201 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.136252461 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.113502319 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128431535 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113044473 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.132883464 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.115365379 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103903102 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.1348019 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102942403 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.135803977 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10784967 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.133410458 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109592198 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.142990087 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.116825936 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.146450787 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.142317236 seconds)
  done (took 7.61817091 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.127693082 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.135520063 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.117573405 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.126261294 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113745371 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.138736529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115130815 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13255259 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113210532 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.126290872 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112814307 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13488162 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113083447 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.135070192 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112850662 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.135075712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103444989 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110641069 seconds)
  done (took 3.051347565 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116353151 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108080606 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.140867077 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106600375 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.126305254 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109004192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122581385 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10645473 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123862509 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107169973 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127493092 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.112175424 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12811078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.111189328 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103436088 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124921206 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104721035 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122739235 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104426143 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118973461 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106698655 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121422253 seconds)
  done (took 3.406102463 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.134202444 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.172999049 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.129430191 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.187490569 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.13939944 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.115896482 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.151281243 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.118307443 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.161941946 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.115215645 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.136815636 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.116718778 seconds)
  done (took 2.527895832 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143858427 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179043092 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106467369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1315286 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126980244 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137818606 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134444174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11519411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155856964 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.159541742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118441161 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157899588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156995519 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.155334843 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128744684 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149142924 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116992489 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13485463 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104752229 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162756049 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13235697 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149792396 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111436312 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131911381 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112664443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14779952 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152120958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156624283 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114134716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152681129 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14838454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117754494 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154425996 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.159452445 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113898189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158172301 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118122588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170371773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148101825 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.155092713 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113284192 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151485909 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157188889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128350816 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157470019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139808498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128794744 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140059956 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117104171 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178448828 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147199736 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148021592 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144009673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129597198 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151677204 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174710337 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.154808936 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151805546 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128163858 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159486837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.155434232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129437501 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.156909753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16011662 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15078715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133543824 seconds)
  done (took 10.225983883 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164949433 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12928293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118397567 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.159387179 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.155951531 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13664967 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118033528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135390205 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118077657 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133387016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.205546366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11950754 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154072764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.155907701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118565958 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141058175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11601707 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15403648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129419772 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.181334555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118426428 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154120421 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155684482 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.156583758 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13847092 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150852575 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138984545 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119538361 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140827442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118310596 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150458297 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140667326 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133966245 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.13026194 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155971938 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118287948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135769595 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125108573 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137109344 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150336177 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1323737 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167614734 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140332689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11967815 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158265546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140087288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118974884 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134318485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118766609 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134448754 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.160049236 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138742619 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162776119 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.154385416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140439456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11843055 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137395353 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119815634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141432931 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129932513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157637412 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140660713 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180975849 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118763919 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140066933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154552293 seconds)
  done (took 10.135459828 seconds)
done (took 189.63201992 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.133943771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.178383323 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.128406764 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.198860528 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104096923 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.162711458 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138723606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14285223 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.110486088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.130466627 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109554436 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.131174031 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175917005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102742039 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.125624894 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108268579 seconds)
  done (took 3.03663668 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.230375639 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.341408681 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133030382 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.134281531 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113066701 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.131444085 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113783354 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.134851809 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110165559 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.151957649 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114715577 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.135384394 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132589513 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.136502194 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107302726 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.132027021 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.145949033 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.11202618 seconds)
  done (took 3.474074943 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.392714705 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.175140884 seconds)
  done (took 1.436493639 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.156249159 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.230175276 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.359026911 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176437794 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.16275495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.161469859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.202223517 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130430699 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.234385735 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.162144338 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.16351817 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.134245543 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144442636 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.14602052 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119226624 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.135828007 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.169904561 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121473461 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.137071488 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117134859 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.164360541 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115807565 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.144152373 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114332597 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.225067421 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.158642414 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.137206021 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113592332 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.13760921 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112263271 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.147178511 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.164832875 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.160752075 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.227186046 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120862528 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.245614949 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132205326 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.141895066 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116136652 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.140732949 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.14233463 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123332124 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.157287426 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113786118 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.139262597 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127085582 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.143599278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.137331357 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130617315 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.149230872 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.148982227 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126102881 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.217887921 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.151236906 seconds)
  done (took 9.252308174 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.969909677 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.191300641 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109531283 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.134704548 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176231065 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128940143 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.970600569 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.166929528 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.299031376 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.962747058 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164797293 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.151153761 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.312436826 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.309627203 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.227988749 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.397324639 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.844594125 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133260701 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167615243 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.193156798 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121711265 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.172355009 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162170822 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.495496353 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.134139895 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110950101 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142601349 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1269609 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.212515354 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.133498769 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.136974766 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.242507356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.322776409 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.274296381 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120883076 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.13671667 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113659638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.222527289 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.348473421 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.294905205 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.218315113 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109147994 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.133732653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131134181 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.162715061 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126299134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.219679218 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.229075735 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.227519654 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.140165638 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.147243807 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124986967 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14936141 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.21513348 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.128740678 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.395458852 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.423591306 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.130814409 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123316437 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.156995869 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337514486 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107664035 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.308428391 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.171880765 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.285633166 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110924746 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854677948 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.221566092 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109742516 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.145829306 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.144208507 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119656538 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149702566 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.211084991 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.465684648 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.154152352 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117554993 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130770745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.272032232 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130420044 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108765128 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.217424485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134870726 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123169444 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.154602742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15185978 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.227377018 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.301815887 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.152853538 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146002937 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119021906 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15091891 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112974749 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.287224478 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.280206487 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.236344705 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.26941629 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151369387 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.221218268 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.219288097 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.14828413 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.227175026 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.14516981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135349591 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152727396 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.297768812 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.185305788 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.111686859 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.140833461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124598972 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.188470293 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.137100352 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123813083 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.247419945 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548017353 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.22655304 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.135639142 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.121369821 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149572098 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.21642126 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145682127 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.315624323 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147692918 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.223809488 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.145493196 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106277067 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1463031 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.224171975 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.155088233 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127058061 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.152791415 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14471438 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.306204706 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.295615088 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132694689 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31301359 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.228579707 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126946317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.253496829 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124716108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.246643381 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12612842 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149992725 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113358773 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.856002149 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.154395722 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123037964 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142152228 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.235384035 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108831185 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132135266 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108463631 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127933136 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.858820121 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.134360519 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106121458 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.131563143 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124392649 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.145264078 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143143759 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118820943 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.216513476 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.319118564 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.152182389 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.145053954 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110603738 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.215687579 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.137736838 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111750875 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.131139195 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110331044 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.147988644 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118936012 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.132290086 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.230053053 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.217404597 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.309673219 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639404751 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110744504 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108343186 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313352972 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131769253 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.388769405 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125006901 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.309421516 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.222552362 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.130082003 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.422295904 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.227620318 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.233285867 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11251475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.226478629 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.13097574 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144057405 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.217478859 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109502092 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143914322 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.213883682 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.156257307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13064438 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.235211498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.131672875 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.283661369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10539584 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.246201536 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11399508 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15000453 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393055383 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109871942 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.160188741 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.218995337 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143961325 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112095314 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.113243249 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110266588 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14977042 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12427782 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.309478139 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.226344752 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155288575 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14961155 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12812842 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.239314277 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.269703546 seconds)
  done (took 54.026837047 seconds)
done (took 72.085291388 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.43449451 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.358593394 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.391514919 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.26676869 seconds)
  done (took 2.434132135 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238566097 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.201499128 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.163726122 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.137812389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.203425516 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.117538813 seconds)
  done (took 1.951080787 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.736377146 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.581253132 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.498954253 seconds)
  done (took 2.713132268 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.327187202 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.354764883 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.382650084 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.582974004 seconds)
  done (took 2.669865106 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.263736133 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.164413844 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12383038 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.170248502 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221291055 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258260842 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.176450824 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210133676 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134040764 seconds)
  done (took 2.666864467 seconds)
done (took 13.327939293 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.216871701 seconds)
    (2/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128171536 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.365058711 seconds)
    (4/286) benchmarking ("sort", BigInt, false)...
    done (took 0.354980563 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.229740537 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.322994422 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.166048241 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.302122311 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.162857842 seconds)
    (10/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.275147986 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131403804 seconds)
    (12/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.151258161 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116427046 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.159108276 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.175121106 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117384338 seconds)
    (17/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.313329382 seconds)
    (18/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116290908 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.163277887 seconds)
    (20/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125256323 seconds)
    (21/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.231770616 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.130193804 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.236277649 seconds)
    (24/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.204851582 seconds)
    (25/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.187165205 seconds)
    (26/286) benchmarking ("sort", Int8, true)...
    done (took 0.265465979 seconds)
    (27/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.261052193 seconds)
    (28/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.237145668 seconds)
    (29/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141118384 seconds)
    (30/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.262453352 seconds)
    (31/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.309771466 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.244870715 seconds)
    (33/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.238392231 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.174487112 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.26577594 seconds)
    (36/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.143539013 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126419891 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.205261736 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.178890842 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.219050828 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.152764233 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.115316079 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11737166 seconds)
    (44/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.169306073 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.258858437 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.144585553 seconds)
    (47/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123411517 seconds)
    (48/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.297186704 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.21414476 seconds)
    (50/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.138334207 seconds)
    (51/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.130163474 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.213545055 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.161095509 seconds)
    (54/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.268610934 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117120564 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.251160005 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.143258019 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126346689 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.140373985 seconds)
    (60/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.125996712 seconds)
    (61/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.190042946 seconds)
    (62/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135482054 seconds)
    (63/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.216162361 seconds)
    (64/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.269391073 seconds)
    (65/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.19079115 seconds)
    (66/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.174117529 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.094938015 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.136145346 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.250024006 seconds)
    (70/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.173499462 seconds)
    (71/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.219143616 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.168820795 seconds)
    (73/286) benchmarking ("sort", BigInt, true)...
    done (took 0.295430955 seconds)
    (74/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117173882 seconds)
    (75/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.138128209 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.16041043 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.147011927 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.130915495 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.197726073 seconds)
    (80/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.186591402 seconds)
    (81/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.192945447 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.175874515 seconds)
    (83/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.235990493 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.120175815 seconds)
    (85/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.139504934 seconds)
    (86/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108391342 seconds)
    (87/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114224114 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.141879092 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.195327572 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.106487392 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.147672656 seconds)
    (92/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115163119 seconds)
    (93/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.114319659 seconds)
    (94/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.194788169 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.16762994 seconds)
    (96/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.1417073 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.211636756 seconds)
    (98/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.106085569 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.180892566 seconds)
    (100/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.159170474 seconds)
    (101/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.148627923 seconds)
    (102/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.174978393 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120404388 seconds)
    (104/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.114021642 seconds)
    (105/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21225283 seconds)
    (106/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.155395887 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.266864019 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.149927344 seconds)
    (109/286) benchmarking ("sort", Float32, true)...
    done (took 0.274726265 seconds)
    (110/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.098935713 seconds)
    (111/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090783607 seconds)
    (112/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.118720291 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224009202 seconds)
    (114/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.154303566 seconds)
    (115/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.115760491 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.22911643 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123083974 seconds)
    (118/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.143178616 seconds)
    (119/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094634509 seconds)
    (120/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.124851023 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099160845 seconds)
    (122/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.09386309 seconds)
    (123/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.223853036 seconds)
    (124/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.151627708 seconds)
    (125/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.115595303 seconds)
    (126/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.190850974 seconds)
    (127/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.157048193 seconds)
    (128/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.203064312 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 0.235525445 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.149926085 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.149223505 seconds)
    (132/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197266558 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.155296776 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142993925 seconds)
    (135/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143271766 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.139160264 seconds)
    (137/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139621104 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.150781818 seconds)
    (139/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123585271 seconds)
    (140/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.13658081 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.221706584 seconds)
    (142/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09225289 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.137194531 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114690729 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.14823509 seconds)
    (146/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096392402 seconds)
    (147/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.162771605 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108855274 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.141868711 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.241711078 seconds)
    (151/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100045611 seconds)
    (152/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.118871872 seconds)
    (153/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136835544 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.129550655 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.096706856 seconds)
    (156/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.1266269 seconds)
    (157/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.152361207 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.146853471 seconds)
    (159/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118042322 seconds)
    (160/286) benchmarking ("sort", Float64, true)...
    done (took 0.274646229 seconds)
    (161/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.194913701 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.148212187 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 0.20656506 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.153379035 seconds)
    (165/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.124143634 seconds)
    (166/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.155955387 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095326558 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.14323811 seconds)
    (169/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110517148 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.13955942 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102112592 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.248177591 seconds)
    (173/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.145200745 seconds)
    (174/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.129283762 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.229211146 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.220586383 seconds)
    (177/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119407983 seconds)
    (178/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.150968319 seconds)
    (179/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.144224022 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.143206477 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138969534 seconds)
    (182/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.118107483 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.219235497 seconds)
    (184/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.152750488 seconds)
    (185/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.152906553 seconds)
    (186/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095576308 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.153141264 seconds)
    (188/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095338924 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.119781339 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09768073 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.141214924 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093666193 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.132694788 seconds)
    (194/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.129302926 seconds)
    (195/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102772931 seconds)
    (196/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.143308657 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099061443 seconds)
    (198/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.134318688 seconds)
    (199/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122954548 seconds)
    (200/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.144308109 seconds)
    (201/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.131048005 seconds)
    (202/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.121507855 seconds)
    (203/286) benchmarking ("sort", Bool, true)...
    done (took 0.276342972 seconds)
    (204/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.124877055 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149093626 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.131073664 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.143991169 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113613975 seconds)
    (209/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.125114504 seconds)
    (210/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120102787 seconds)
    (211/286) benchmarking ("sort", Float32, false)...
    done (took 0.212575928 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.146181737 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.131661772 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.151909736 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 0.248166831 seconds)
    (216/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.094538343 seconds)
    (217/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.121785732 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115742833 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.143922208 seconds)
    (220/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.100233469 seconds)
    (221/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.130411109 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.115377094 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.161318847 seconds)
    (224/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09613868 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.121689442 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09570358 seconds)
    (227/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092901084 seconds)
    (228/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.142175883 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.141046723 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095616033 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.096594333 seconds)
    (232/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.119466183 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120237483 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.119878258 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.100159107 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.123974047 seconds)
    (237/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118284928 seconds)
    (238/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.118166541 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109617263 seconds)
    (240/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093743598 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.143514784 seconds)
    (242/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116734564 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.153347218 seconds)
    (244/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.152465901 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117747991 seconds)
    (246/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.119716195 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120340633 seconds)
    (248/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.137410686 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127752068 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.141908408 seconds)
    (251/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.100266311 seconds)
    (252/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.140863577 seconds)
    (253/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.103614393 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.097849862 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.119075717 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.201324582 seconds)
    (257/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.118329149 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.144368471 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120039038 seconds)
    (260/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.118552706 seconds)
    (261/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094128093 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.144128775 seconds)
    (263/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096629252 seconds)
    (264/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.29576056 seconds)
    (265/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118816353 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.146799384 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.143964597 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110555041 seconds)
    (269/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.099939621 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.136637424 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117153176 seconds)
    (272/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.119399318 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109364764 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.152851961 seconds)
    (275/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092766188 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.141048813 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120537028 seconds)
    (278/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.11906763 seconds)
    (279/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.099023472 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.141238612 seconds)
    (281/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.096242732 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.13353207 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.101677111 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.139921079 seconds)
    (285/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116770261 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.163803016 seconds)
  done (took 45.724719507 seconds)
done (took 46.626081791 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.134724318 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184792539 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.127453712 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.174918205 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.136821413 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.157653197 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.147961867 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.128547622 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.153412963 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130737917 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.154121589 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.103484836 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.147415687 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12550831 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.147320721 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169102102 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130222745 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.141166298 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.116185823 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.13986255 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117227269 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.141263667 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120393171 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.130156533 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126471183 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.147270803 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11885024 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.148302463 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.119373084 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.137519311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.113321992 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.141187433 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.111828533 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.148487947 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113860573 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113809688 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.148944225 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118766955 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.142414791 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140001998 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120158691 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.139875893 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116458672 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118319684 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.138977625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11435654 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.138031494 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.169846617 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144766758 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137715197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117781186 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.146453109 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126779678 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.141240038 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112123001 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.138277838 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.1167726 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168650834 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.115483941 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.139289528 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119385969 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.142180782 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114243155 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.137769881 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.114170361 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.145460025 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123046859 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.139198472 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123163435 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.142069816 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.110165997 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.139020694 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114302434 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.134770844 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119883622 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120327975 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.131250675 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.114461072 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.14264601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.118032643 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.140858955 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112290976 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.142705238 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117005651 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134404921 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10445012 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.136037474 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115210875 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.139170521 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11412178 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.139951284 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115939439 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.14264146 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123607148 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.138956663 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116613119 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.140170023 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117272572 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.14204947 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112196623 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.1322727 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110829805 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.141852759 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.110152092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.138213785 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127203443 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.135614484 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11557859 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.139044852 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.114523409 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.154433542 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121844109 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.140170012 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11275707 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.133144947 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119353437 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136567977 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111659159 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.135800569 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11597006 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139675519 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.116220846 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109604593 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.145237072 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.151120919 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108819726 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112306043 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134313946 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.115542783 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.141313807 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116665014 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.135460625 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113368196 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.133320241 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113026178 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.13671259 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120087293 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134279221 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.113521104 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139553827 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.114649887 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.140025151 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116089564 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.141840595 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114818326 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.131217703 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114679105 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109656835 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.143706068 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.14056099 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117820496 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108847805 seconds)
done (took 20.722708292 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.130875123 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.227728839 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182922715 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.18942336 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.170089746 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.171371769 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.156217703 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188538556 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128574509 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182712263 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.184529986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142323814 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18486038 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.161798449 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.148446977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.151262362 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125028589 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.167721652 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.194592445 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.160729844 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.185326055 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.157411115 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.181172463 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.157070606 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.145544154 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.191036418 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128965032 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.148018946 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129446278 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.156434141 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142281751 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.155564634 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.152976325 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.139070843 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.15499726 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122979886 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.169520498 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140309917 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125745462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.150754438 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141661265 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.161937561 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.143627835 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138527603 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.148228869 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.131409021 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.147354557 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.1222042 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.146489448 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114885305 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.157099598 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.179353944 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125494435 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.153447869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.152620212 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123558446 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.153703853 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128934672 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.153672741 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128243749 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.150686124 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.153936368 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132447464 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.17562026 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.148517121 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128130134 seconds)
  done (took 11.070918072 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.153244597 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.185215236 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.153832646 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129635425 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.155381036 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110025752 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.132993262 seconds)
  done (took 1.981801222 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.117166607 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.174838605 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.153575957 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178352474 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.168706003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.160526818 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158405107 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.11054388 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167171884 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1258059 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.169860334 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209283414 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116455264 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.154460408 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182604033 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11353255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183073206 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.113400402 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147147854 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15495305 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146125448 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163623848 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133986928 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.137387834 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136381644 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.143250883 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.228396028 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129426667 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139630254 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121793367 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146851866 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.237300699 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141690125 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.153187888 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110009488 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.173944548 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.162456647 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120660746 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.169851377 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121993532 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.163472552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.121213446 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.147958433 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.121367144 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146688996 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128212032 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.155897691 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.150064651 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119352641 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.170605747 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127971455 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.163894809 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114024834 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.143481964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128257034 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145330426 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129644703 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.145922122 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.174048173 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125299298 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.171104816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147331171 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.164050965 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.172840112 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137398583 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.164732988 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.140389685 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146268342 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124887594 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.149321936 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.17342508 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118222312 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.154250482 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.130254748 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150774075 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.145023921 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.168419295 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117797838 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.153621307 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117783764 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.14291236 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11309644 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.156773198 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123251666 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145172206 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140671484 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.157632908 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146900957 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119509388 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.171017959 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121770852 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.155758627 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129401766 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.146910745 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.163138945 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150865013 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.155207549 seconds)
  done (took 15.249654312 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.117701485 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115915773 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.147650404 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117618434 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.140785485 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113648142 seconds)
  done (took 1.722281126 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.157224049 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.144653279 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.135547386 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.148402174 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192844904 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.14203984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.16556316 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1271831 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163082431 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.157873483 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.139736953 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.168266149 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.154886152 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.149625893 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.169023919 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.125843722 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.166784404 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119059364 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.159736273 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118375101 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.161149285 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125746316 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143201103 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.142910431 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.149638601 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.150052534 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122495588 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.158634106 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132472156 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.155565163 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125234249 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.147904021 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124237312 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.155038821 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.169442142 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124808885 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141962468 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125281069 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.15071009 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.124589321 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.170993349 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11911558 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.160128464 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126252177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.159188861 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.164873389 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.130367856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.154312733 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143458989 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150987069 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124453627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.150469188 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.123832839 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149626121 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126233902 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.156141101 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129714812 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.169479756 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148571289 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12469778 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.14635805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123974556 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.156117373 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127099965 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14882382 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123486234 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.151268878 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118011619 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142224412 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122543904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.150240182 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11972694 seconds)
  done (took 11.325112032 seconds)
done (took 42.306970843 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.736863899 seconds)
  done (took 1.703535824 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.996459128 seconds)
  done (took 1.966314909 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.851512792 seconds)
  done (took 18.855123082 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.70972079 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.848615828 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.266624331 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.200065133 seconds)
  done (took 3.992236436 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.034826354 seconds)
  done (took 2.026249051 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.381869391 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.319088897 seconds)
  done (took 1.676261699 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.901899608 seconds)
  done (took 1.882268089 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.756078901 seconds)
  done (took 2.73776961 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.47132554 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.240902928 seconds)
  done (took 1.705813439 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.683944412 seconds)
  done (took 1.673086258 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.953141899 seconds)
  done (took 16.946754255 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.297451666 seconds)
  done (took 1.297672175 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.355193772 seconds)
  done (took 1.345240012 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.79897222 seconds)
  done (took 4.787470888 seconds)
done (took 63.577121435 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.128261587 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.152456796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12800012 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124651249 seconds)
  done (took 1.517664652 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.13834736 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.150623073 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12955823 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.148421051 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1341155 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.150569022 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121541009 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.156623194 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123087524 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.151640511 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124658383 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.150200957 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.152698779 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121557915 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.144809491 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.127636178 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.154602767 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124351307 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.150164661 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125175974 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.146637838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125520738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.153983874 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122883894 seconds)
  done (took 4.326292815 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.128591856 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117883312 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.145844401 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117010284 seconds)
  done (took 1.506495574 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134218357 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.167866102 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1410874 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.156311476 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142671587 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.166794389 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.142208409 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11673545 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120240069 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.157650938 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.145097486 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.146597846 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.167574723 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.113096085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.158560277 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112872478 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.141936735 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141481717 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.156466913 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131803901 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142361567 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129892816 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150789295 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.161591253 seconds)
  done (took 4.446258471 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.227672128 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.162039202 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.172969073 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.126396492 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.209333331 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.175884638 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.116053071 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.175368333 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.118342254 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.170109533 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.147579505 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.180961697 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169898727 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.14894914 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119488475 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155952746 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.142865589 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.176169255 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.146071084 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.133626458 seconds)
  done (took 4.170634775 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.133947201 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.141975155 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111676418 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117402435 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.150721286 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.118826941 seconds)
  done (took 1.778703828 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115940453 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10917597 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.136268166 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.109878586 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.142071751 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109681395 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10847076 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13632305 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.109767746 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.135487023 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.109093773 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.134158576 seconds)
  done (took 2.460803139 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.530768011 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120527999 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.15742655 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.117451236 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.174067269 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.141245994 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135167759 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.141888756 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.213348046 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.130461361 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160670091 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.211243539 seconds)
  done (took 3.232148759 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282064594 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123061545 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.356973695 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.50106432 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204246163 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215538766 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.377059697 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212575104 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.24623938 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173067291 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258617167 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199452423 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193115933 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229434073 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176284231 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.223219957 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232432969 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27230325 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190583411 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276571399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221787338 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215255245 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239628131 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190801389 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148584241 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212814969 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.144650727 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132285943 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234333583 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250404243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247572083 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197026694 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149838579 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30653918 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309376724 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252711344 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.475402384 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169152086 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23356571 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.238618263 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.343026017 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153081653 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303007318 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173533082 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165171064 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240446843 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207934418 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.238617707 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.164662881 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148904419 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293476662 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235154341 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.245525376 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175594384 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403746095 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187882077 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.183918401 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240943321 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268356147 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258674394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2194639 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.15165981 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27486027 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266070583 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240556709 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155707712 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.224900098 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155893988 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233536932 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258800296 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241223061 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220847308 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.321189099 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169388404 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219014101 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219325464 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170844997 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232900008 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209052686 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.14757783 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190874595 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147514049 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158456143 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220005655 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122084788 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280425589 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17217901 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.331680048 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285242057 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202090042 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214077101 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219211467 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224659414 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185069463 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118696011 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188188153 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.207745523 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2039233 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167400514 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203197675 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159727006 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.159628045 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198381604 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124359 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207011533 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.166212546 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221719714 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213670949 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132885903 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212890649 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188800365 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.20573928 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230021857 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247765698 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16545215 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136572097 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259291368 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205329661 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.170983755 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229733944 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.247823265 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.213854937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175994205 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237316753 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26719248 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17950481 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255078807 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15745773 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169358103 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.201540192 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210635157 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207443261 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.194818882 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132555015 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196467291 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262381065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156638903 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141594041 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230444446 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157007038 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162370927 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15894335 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174272288 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.177617963 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.16672858 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.174066341 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206500452 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205731479 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195692708 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214739984 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159496816 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314437828 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137967044 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.203814616 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185037519 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.144157239 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.248615392 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248423827 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131616984 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247386327 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.254527465 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293462753 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214860195 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163081474 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238075955 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132376906 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.146212372 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229580878 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212820935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216198005 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.245355582 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.319462566 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.231439623 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.197959119 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161651195 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256088735 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.199175658 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220274727 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.183614894 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213395026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233314384 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.151510772 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125410542 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.158214187 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151363479 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166353523 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163297001 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258474077 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220052433 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305623759 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214542568 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151192561 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241745439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.156301707 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218558174 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.230766377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174647679 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.247281204 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241197542 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221596566 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152078508 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269483196 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122104844 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124720249 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.16826871 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218978785 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165472757 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141048614 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193420583 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242300448 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235983875 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194214913 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333495551 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226304154 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254019642 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149535777 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167221164 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224293663 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206004858 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.229513625 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144371059 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.209925027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232694062 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191248664 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27069929 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216649843 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228900361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316998236 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.201302578 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13358869 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19176752 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221583245 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185208981 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207748711 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157516111 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171917165 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201010569 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145256551 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156943892 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261870362 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181110232 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257717111 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.201149242 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250444121 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153638829 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191954642 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178501359 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182543078 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.144282435 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228811704 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259981015 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19213946 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209781698 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234624963 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13239867 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.438197621 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262585409 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25584901 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174579807 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18543875 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206529289 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174893855 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21940589 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239122267 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192248058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243181166 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204836001 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.18171797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143157463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185203562 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191924886 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.201696334 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143380167 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.202800438 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17962657 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264745761 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187368892 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203740984 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221216404 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148782259 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.194287538 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180362605 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271377289 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206133067 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240642555 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.196600865 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.220836571 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250329716 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122170059 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158860642 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128551354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239450171 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165251785 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209537116 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.306427959 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.306150372 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206589934 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222284412 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172348708 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124588975 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209944786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194349554 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321601425 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193318427 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143300219 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285701493 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15997024 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161233993 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213328547 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381029857 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179786281 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235504908 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.150609433 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.362833282 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157859751 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137543969 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205167991 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227813752 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.167166351 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198620042 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219386815 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191351326 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204630515 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146205763 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.306604967 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315108151 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23811288 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240718593 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.183488453 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180606014 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219663134 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234356312 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185073 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.183091302 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207001707 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243360186 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.245504806 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136889047 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213364012 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213422474 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208990462 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253011192 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1653075 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248364734 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164280663 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230386738 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181930118 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125662418 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204822655 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.294927077 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142280091 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23471309 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204917463 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163855242 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126462874 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203988892 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203824204 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187013438 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129904464 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28302395 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128853321 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215927938 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235942012 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133129969 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198653752 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187521079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164181125 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155317598 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189852539 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170751554 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178657037 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247975562 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.166092113 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23915693 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242467423 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219871152 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214147592 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182714427 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669795831 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.159478568 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240390416 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186189706 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25833116 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187331372 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224534987 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209880855 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161535234 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231063417 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194726867 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.260690911 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229937696 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207614268 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133894995 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189166284 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188307459 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.164901394 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163327765 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214613235 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178762706 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.172311746 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204036534 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159848285 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.187067401 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170746125 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24692472 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15749309 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288389459 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240795557 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146000223 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222481325 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280944702 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13419407 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.214708707 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22949288 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180321909 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205261665 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131995612 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166581733 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235298955 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121504647 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21282353 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21124209 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210147374 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215139528 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142244385 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210967738 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18663667 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210066484 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154892536 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.169861046 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202492666 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16260672 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12814007 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198279447 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218025022 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.20539467 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155964485 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179122625 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240979823 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151706878 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139262681 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40772571 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207549316 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264464823 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.198198283 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138140636 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181289022 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207421748 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197203232 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20670242 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130365066 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163824458 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135757377 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.221738204 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.195981788 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201612511 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248270314 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214257042 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249066262 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164613231 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275145585 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172208221 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198022283 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137259279 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.160981095 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17941958 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141030648 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190302504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.306782316 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237241821 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192768614 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.156962058 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159206181 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125046337 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164776431 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205988101 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201378944 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17310359 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190556697 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.146491664 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185949893 seconds)
  done (took 100.549953592 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175234598 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.174466974 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.179360754 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224804689 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201701348 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.280741123 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237943018 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256882492 seconds)
  done (took 2.814738841 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.134033775 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.168630403 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.177428615 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.155208719 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115434667 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.458684592 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.170270567 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.156182085 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.181294719 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.169052706 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115677109 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.77093542 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.123501638 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.155625149 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.139142236 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138852109 seconds)
  done (took 4.406911675 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.917475365 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.61424638 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.298444777 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.31029552 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.296446611 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.214863069 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.826058993 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.253271094 seconds)
  done (took 13.814930913 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.158062428 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.166557456 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171618934 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.19798769 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152128004 seconds)
  done (took 1.941263192 seconds)
done (took 147.950327982 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124919285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124070162 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.149368073 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152471313 seconds)
  done (took 1.629385482 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.138001079 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.101591628 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.133622977 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.100989477 seconds)
  done (took 1.559956735 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.542797011 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.131384538 seconds)
  done (took 1.802072281 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153840595 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.162077919 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.13660338 seconds)
  done (took 1.545063315 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134790838 seconds)
  done (took 1.230356179 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128590328 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125342613 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.170033617 seconds)
  done (took 1.520111225 seconds)
done (took 10.379987074 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143060886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.467032668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412432853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16504762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.757494163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403442408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.11992702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197234319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174510443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.143036601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136941825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.725901438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.03546399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.397548349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018167606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.395850563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697766293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146649535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123622276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145675794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.058875906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.142412034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116790384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146342475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.694010072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.451224002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115252394 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413190752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112980299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.151087549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405634584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14310031 seconds)
  done (took 17.842906628 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125690259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.220360888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127099761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14516109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121593721 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144615457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128976172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16494113 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223308853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114702379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.167284074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11372827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14946127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115718509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170225831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114311351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147813639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118505869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.153886628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117852111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.167627927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114050138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146616663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118191628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.142005724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130416056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143438823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135341226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143540952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123625834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.151206665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115930506 seconds)
  done (took 5.612245044 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.17746079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.233157326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.155325332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153765593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.210044121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116084227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.250028073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.198772038 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223382603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142410078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138503205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.143650102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159623613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14439593 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141653437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.143959969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119642417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.148112268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124971009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14680238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137963266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143573002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117607421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146968704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115018418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160501509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115745066 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.165241743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114766049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.15288898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122768523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144386364 seconds)
  done (took 6.011904986 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130582781 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.156532319 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136820999 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165243159 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118202943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.153562772 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.127268376 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.146916422 seconds)
  done (took 2.234402519 seconds)
done (took 32.796713592 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.138991077 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122892726 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.161180102 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130048347 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.155379988 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.143849081 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142611462 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.127423362 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.15886246 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123533989 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.163161224 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114039775 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.145179409 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114310831 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130157834 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.149666058 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131778878 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.15437273 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.141516535 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.162500156 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.11614024 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.157393295 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125064303 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.173680317 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.14070828 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.17257664 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.163086531 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12277037 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.14523762 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116826479 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.162925437 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.146298977 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.146679757 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.135353422 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.148652178 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120389971 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115303379 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145945837 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132444784 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.157156954 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122159256 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.156969091 seconds)
  done (took 7.029584171 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.154341383 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.195699281 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.117448803 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.145683513 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.116589558 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.192857107 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.186951825 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.116680828 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.116297277 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.176461317 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.178540936 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.116979206 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.144845282 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.116328668 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.115680468 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.145420227 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.145569885 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.176187568 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.182183958 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.150850575 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.200781414 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.184930941 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.15690733 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.175357196 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.19395449 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.160595532 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.172496366 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.186840111 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.147798413 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.143676141 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.153619725 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.180916664 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.11545397 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.145058129 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.16347873 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.188563806 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.179894947 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.163305897 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.180957826 seconds)
  done (took 7.293146157 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133037689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.161923959 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.143330894 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.226494928 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164644875 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161289845 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.128831352 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.170242492 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.136054594 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.146337393 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127109498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.186918447 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135867191 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.156278684 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122803458 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.16423644 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.142104289 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150294333 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122908032 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.169721042 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136898107 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162716705 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131440724 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.157832227 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119154126 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.163596351 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12221702 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.163355113 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123250522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155000663 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121396762 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.153061529 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125248806 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.160047278 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121478425 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160050893 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144093622 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15849896 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128454256 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.187904791 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.161521615 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124969225 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.176048263 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166190456 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148631572 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127288709 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.152258119 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128972872 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144377293 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139058668 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157844442 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118276146 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.173103398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117727113 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144133129 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134862816 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146596473 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120821299 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126102492 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.154088367 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.172834925 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124141994 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134576182 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.150709398 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123100525 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.147692565 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.1157414 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1580776 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144226674 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1520284 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.194648958 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116314805 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125845185 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155384015 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12305511 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156180053 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116020312 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.162648194 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127337008 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.152755438 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128897367 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149749119 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121393892 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.165818956 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142288174 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.160492834 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125993067 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.155158134 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121137494 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147697356 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13378716 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147984465 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12087364 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.167463902 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118807282 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149877359 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125962888 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153421701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115255297 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.16273918 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122612056 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.145802961 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128436111 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147198427 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121604616 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127288312 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153258785 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117832827 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153733481 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134871791 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.146822591 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122716966 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.151423146 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120857356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164551538 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125801859 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.150714437 seconds)
  done (took 17.932200986 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.303749033 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.264677249 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249317743 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.376131391 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.17918284 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.150271381 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.260545084 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.212533356 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116752122 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.203226271 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.223633679 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.230570208 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.216944608 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.226483236 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.224429888 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147569845 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.146388923 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.213140967 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.263257775 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.367808837 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144772628 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.169569076 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.205076735 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.203500889 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.141083193 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.170344401 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.178100308 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149337491 seconds)
  done (took 7.060999269 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.144978258 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.198093041 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.126239733 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.186234419 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.180642044 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11875935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.15311981 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118221367 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.168347002 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138625879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150009826 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12726885 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.155190829 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.12926435 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.147665957 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128891556 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.160569784 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.131688564 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.1509079 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.122662991 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.17208448 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.168943503 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124112237 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.156536031 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.141312873 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.158133518 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.120822552 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.178221494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.161436505 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.155257574 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.145131906 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127258048 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.165668495 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.117127093 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.158866032 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.12029135 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.149589288 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.119650335 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118747004 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.143707524 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.116729613 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.135116086 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.127336612 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.167583884 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126799841 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.152035936 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124356299 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.152977147 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123395254 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.143776519 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119130306 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.151371919 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122822673 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.170221344 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12157511 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.143919461 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.121583708 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.137259009 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130095316 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.120191713 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.143600893 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126131799 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.140336488 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123215737 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161017556 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.110042959 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.157106736 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.119080519 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.154131586 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12683975 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.151371157 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134649673 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.144750909 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.118607887 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163900352 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.135600005 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.152996259 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125713474 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.159226639 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116355945 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.133103025 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115957758 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.100816099 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.153657206 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116615813 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.15684564 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.120535666 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.155344229 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140518936 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.161775578 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.156523045 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117964815 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.126997705 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.154859602 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114909715 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.153370895 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139483534 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.176172779 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.145768926 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.114289307 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.172179898 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.119299342 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.114138382 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.137123249 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.13116158 seconds)
  done (took 15.881385756 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.182874667 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.221707879 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.149842755 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140889637 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.192299462 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.210425152 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.135874013 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.157841171 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.118972938 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141661002 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.16036416 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.128549717 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.161370907 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.167016685 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.178290865 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.160510674 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119139496 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.167385556 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124913929 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.22496266 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.171405786 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.17527586 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.214443645 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16367763 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123094894 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.204315416 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.213485833 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133227184 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.163085421 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.215708451 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.132657032 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.214327529 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.217540984 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124065541 seconds)
  done (took 6.857017242 seconds)
done (took 63.15083905 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.24923518 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.470454132 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.222575555 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.217410113 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.26821232 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.247495916 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.241047708 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.41230343 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.987013303 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.206924407 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.215103972 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.217706055 seconds)
done (took 28.082910613 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.24734426 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.373746902 seconds)
    (2/2) benchmarking "String"...
    done (took 1.551510049 seconds)
  done (took 4.058713586 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.221010997 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.219295854 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46727177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.228553645 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.209508664 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.227855696 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.236814557 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.237731982 seconds)
  done (took 15.955456276 seconds)
done (took 25.609666067 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.29040618 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.41029622 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.471268156 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.237667773 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.229319875 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.222080305 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.216769648 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.242355011 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.223632398 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.243274532 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.215607289 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.4949271 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.245086692 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.60873003 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.2272717 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.223559832 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.231557388 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.460858883 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.224437389 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.247820465 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.195055679 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204790136 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.228155996 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.237072235 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.226199124 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.22414003 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.223332836 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.21238453 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.440232364 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.239226204 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.2512412 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.219384741 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.224965099 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.216230459 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.339890867 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.244097568 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.408059494 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.231097819 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.1988843 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.220740421 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.418798634 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.642755021 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.217120756 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.215318399 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.25243208 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.287774023 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.202981727 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.938295299 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.224980985 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.227703405 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.232650232 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.665799402 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.238573253 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.230796862 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.223112368 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.461908432 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.239346645 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.232642376 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.240010097 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.242509674 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.214810751 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.218591837 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.238654869 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.216442793 seconds)
  done (took 144.603836537 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.226677402 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.226366006 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.228356542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.249472364 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.228871214 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.228776953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.230301142 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.225484366 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.228665785 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.231158795 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.228177497 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.227778867 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.227745711 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.211788782 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.228252241 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.243091657 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.228632256 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245226068 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.248544263 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.229922706 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.229723987 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.227810962 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.244120913 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.227818834 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.235146187 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.286055793 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.270804214 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.226106076 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.226765465 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.227569773 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.23395991 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.228401597 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.865797403 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.080119003 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.243225879 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.257947268 seconds)
  done (took 81.067636107 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.220456706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.222422968 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224525634 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.256435137 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.216589843 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.82125474 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.827820673 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.96121099 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485299249 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.230166938 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.627819682 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544398702 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.231265317 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321584446 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.232623841 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.217404398 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.238127417 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245370724 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221177723 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228542182 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825483838 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.243503849 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.462935935 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.395933144 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.23364593 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256884396 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.619218264 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218143414 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265392458 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.560360033 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265474717 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.217418444 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.646395994 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.46140979 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335425183 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221896767 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263588233 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222264564 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506905815 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220700943 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.232213377 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.232945995 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.96192279 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.233036047 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831480991 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235321548 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23469979 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.230449859 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.23153277 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229717154 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.469905964 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.952391176 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246182849 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.2258698 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.230903132 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.231172028 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230838955 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.265426426 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.37903697 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.349216538 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229038576 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.235159746 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260138523 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226382128 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.363424688 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238857068 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.023179725 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.285918359 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333457023 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830074722 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234547188 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331766566 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345870168 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.22170455 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.233832299 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231971891 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.232797764 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.348829462 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.225340956 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.644394756 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.402412388 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.238942603 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.691089817 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.33563669 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.223361615 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.657914673 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.233513492 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.228752791 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.23021731 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006598781 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322977658 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.224083365 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.234533271 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23478703 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.234207571 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.650511309 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808410305 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.502431948 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.235127387 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.598064971 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.237844952 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.66946192 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.825287764 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.951845032 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23672795 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345250797 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.404748287 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.241607241 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.237267772 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.695794589 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.238599333 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.294187166 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.235243495 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.630506052 seconds)
  done (took 370.006436162 seconds)
done (took 596.804496873 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.992834882 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.898390943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.030001964 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.916294927 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.882431247 seconds)
  done (took 10.859708629 seconds)
done (took 11.996933389 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428789396 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.417157807 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288764642 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.421564754 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256974387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.440598001 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402848501 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.250018273 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.340398163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.314843462 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331094354 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.29446982 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264307154 seconds)
  done (took 18.59098439 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510857336 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.240422029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.32213787 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48757562 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28063709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51153942 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.550784399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.240333773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390714872 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255435793 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.255773697 seconds)
  done (took 18.18772037 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553647695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.243204824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311310331 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499263243 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280232457 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515329984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.558839539 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.249308183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407885233 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256571212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25433244 seconds)
  done (took 18.27060445 seconds)
done (took 56.188963631 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.272452261 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418516247 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.256960484 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.247741607 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.245880284 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.243724183 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.24750461 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.24370759 seconds)
  done (took 11.319611144 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240027884 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.24214513 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.244992523 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.239454523 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.744986706 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.247334556 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.242995466 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.248075188 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.247433198 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.239919998 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.245006778 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.248109911 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.245277247 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.23927241 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237222732 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.242995252 seconds)
  done (took 21.5399607 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.241565605 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.240247608 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.244000951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.240649446 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242891588 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.242460362 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.247243991 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.24673922 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.244755038 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.246024319 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.241526947 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.24511535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.240989482 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.243463254 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.245012386 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.241863352 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.239887325 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.243170732 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.244512365 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.244957623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.239627261 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.241806664 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.239937579 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.24331152 seconds)
  done (took 30.976234163 seconds)
done (took 64.975632444 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.234452059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.25087292 seconds)
  done (took 5.629062157 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.301874178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.302005632 seconds)
  done (took 3.750727432 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.24332165 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.245417767 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.249125362 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.250527893 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.24954671 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.248677789 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.247936446 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.243821078 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24532558 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.245661603 seconds)
  done (took 13.613898604 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.24085963 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.241147303 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.243002377 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.24438913 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243430274 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.240932194 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.24863592 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.244851691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24670228 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.245272764 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.24531132 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.242920322 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.245233165 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.242339377 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.246414698 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.24461063 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.242458882 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.245793704 seconds)
  done (took 23.538718642 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.255869339 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.265905507 seconds)
  done (took 3.66677297 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.371006698 seconds)
    (2/7) benchmarking "second"...
    done (took 1.285088751 seconds)
    (3/7) benchmarking "month"...
    done (took 1.354208165 seconds)
    (4/7) benchmarking "year"...
    done (took 1.343706813 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.283999482 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.265523636 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.284156536 seconds)
  done (took 10.33510268 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.246844044 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.442996934 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.557807248 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.817739513 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.249747186 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.254944064 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.1260107 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.251176261 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.251841127 seconds)
  done (took 14.345800094 seconds)
done (took 76.024527477 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.235054219 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.250130177 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.2826276 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.246636592 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.577913605 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.271656553 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.242817118 seconds)
done (took 16.253914734 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.224517103 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.238166058 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.231333157 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.251625436 seconds)
  done (took 10.091214069 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.24840553 seconds)
    (2/2) benchmarking "read"...
    done (took 1.599204717 seconds)
  done (took 4.995321449 seconds)
done (took 16.233339105 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248769689 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.25278021 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.246079985 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.249173055 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.24673367 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.248091662 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.247230972 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.249889981 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.250707544 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.251580837 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.248214632 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.254327323 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.252931666 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250310826 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250818163 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250800612 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.254936821 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258460588 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.249760583 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246284154 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248291254 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249040101 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.250513298 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251957954 seconds)
  done (took 31.157795351 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.246955469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.251018713 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.248671373 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.249577543 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.249944508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.249564975 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.251683183 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.251557553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.253234238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.250919394 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247820242 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.248548719 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.249971713 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247452736 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252406252 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.251313183 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.249749786 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252267272 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250665028 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.246258131 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.252686973 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247554159 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.245820399 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250284266 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.247580415 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244927656 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.250851242 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.247458183 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250306353 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.246484148 seconds)
  done (took 38.631360641 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.252847151 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.257115154 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.252301623 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.249950857 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.25043208 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.249181786 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.249931224 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.250396356 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.251198052 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250979184 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.252150537 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.248326863 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.25096505 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.250319045 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.250815026 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.252164802 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.252761688 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.251948912 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.251889775 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.253471177 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.255664086 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.255250424 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.254560789 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.251836029 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.258276753 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.256922021 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.251399625 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.252189429 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.256308779 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.252867354 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.253136235 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.255426866 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.257497599 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.254740544 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.255923809 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.254979621 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.261781216 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.260352232 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.257027816 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.258946645 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.255965272 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.255275855 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.253459948 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.254486436 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.252005419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.254871025 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.25198327 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.255882299 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.254010123 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.255988305 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.25519086 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.254626589 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.257841768 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.259189056 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.253514675 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.260009749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.25437304 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.258998563 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.256385947 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.260042978 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.257669826 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.257406952 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.257783091 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.258909247 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.258936357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254598119 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.258230442 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.261758379 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.258287496 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.26068197 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.258659321 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.257816335 seconds)
  done (took 91.511653001 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.253041937 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254900332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252881582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.261315132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258105925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256557497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258634958 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256846072 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252519003 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258430175 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256830216 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260005238 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254894246 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.257450393 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260255428 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258157285 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260251473 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256186638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.259672018 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258460716 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255782916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256524322 seconds)
  done (took 28.813780774 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254771187 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26128521 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.255325782 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258841327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259336861 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259369524 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259807814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256935357 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258533505 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255186718 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25830357 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260037854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257355784 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253457211 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259144937 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257309973 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259357431 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258946116 seconds)
  done (took 23.799929469 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.252879014 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.25493318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.258363774 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255176421 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.258723632 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258080052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258594621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258548194 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261649077 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.258209597 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.262917301 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26736146 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.259127895 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26056666 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263222894 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.261525158 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.259803232 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264032079 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266592196 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263479345 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.261182193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265385652 seconds)
  done (took 28.889376266 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257742817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264979209 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.265024037 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257901431 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.263592618 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.264972623 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.266855171 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.262445775 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.268368018 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.271187279 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263339312 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.268204758 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.265512358 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259193613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.264634792 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26099044 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261115501 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261697843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267501444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.259187825 seconds)
  done (took 26.433864584 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258313587 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261443481 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26554856 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262199284 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266758597 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263074282 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262955774 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.26230712 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264057156 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264921181 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270648586 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267914739 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271515976 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271030439 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265793695 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268938284 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266809246 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268643972 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267678727 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267412056 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263509188 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266289619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265134438 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263763517 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26308774 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266951203 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263928381 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264445619 seconds)
  done (took 36.59521251 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265164383 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27193783 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.264694139 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263736331 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.270158125 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.268558436 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.26826154 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.270058941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269616215 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270553002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.26519657 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.271019204 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271066166 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.268589369 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265947761 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.268459834 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274320091 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.27060559 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264530933 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270224716 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.268876879 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271307423 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.270972996 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264148421 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270099758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.266648425 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262077659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264128192 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267254369 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264292818 seconds)
  done (took 39.207669283 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.308847031 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310267696 seconds)
  done (took 3.783013893 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.261560598 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270946389 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.269746051 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266049946 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26623363 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.274627791 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.273128737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269297706 seconds)
  done (took 11.317349019 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.264889206 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.269464443 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.273544487 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.272678013 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.274171662 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.270622092 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278440473 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291901162 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.271316789 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.275238691 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.279573258 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.279485351 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.276262335 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274281667 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.275130756 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277022182 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.274666051 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.274252875 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.272650482 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.268921323 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273749793 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272490888 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275155157 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.273037161 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.276384267 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.279315431 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277638836 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.276911324 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267816039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.277325489 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.269376909 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.269359716 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.269609775 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.271023065 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.268700303 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.275446419 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276776542 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296616471 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.280218751 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274702348 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271701614 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.265670596 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.272240558 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.271927644 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279610647 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.276315661 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.271095841 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.277623113 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.2770694 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.276197589 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.276176108 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274627042 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.274096063 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279355491 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.271099295 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28357029 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.297447629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.272597361 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.281799708 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.285648917 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.290046488 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.301561708 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277737332 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.274380127 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288380931 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.29162276 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280675711 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.295543122 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.27181193 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.278629364 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.28397183 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292354077 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.301773256 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.277464737 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272106974 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.276185448 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279683458 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280059232 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285373078 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.304310195 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.280652721 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276288865 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287290837 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29368934 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.271858666 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.278230991 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.27705637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.276792982 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27746548 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286702115 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.296682527 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.275259135 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.273699074 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.281415204 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.279752146 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.28271789 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.274509887 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281568368 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.279327592 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.28206981 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278530463 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281197758 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.283402835 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278887095 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28001688 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.284716538 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278916146 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278345758 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.281632565 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.281564973 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274795769 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.272601304 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.280168182 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.274366385 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284740196 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.286861504 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.280236709 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273601023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.277032736 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.27968044 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284996571 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.30200135 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.275689527 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.28036127 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.27963192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.288515191 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277070964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.277036479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.27991934 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.278217364 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.280411402 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.278584661 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.27857825 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.277039476 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.279721711 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276389872 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.274356388 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.279613565 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.2752802 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.278061348 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.281619945 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.277972161 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.28137018 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.280179342 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.276029661 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.277940029 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.282831812 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.278320441 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.278375753 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.278701321 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.274437863 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277601618 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.27841575 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.276799278 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275723104 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276000258 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.276000544 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.278429167 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278885017 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.280680837 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27782015 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.278408842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280629256 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.278618932 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.28108211 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.277779606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.277218994 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.280191027 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.281091719 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.283756415 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.288480607 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.279334708 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.288804085 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.286168072 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.277947732 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.27705965 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.278960416 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279095591 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278660985 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277675329 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.2800957 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.283175921 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.285113052 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.284064961 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.281345627 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281706404 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.277139029 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.27618719 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.279121565 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28211762 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.28264389 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.288505863 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294470895 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303649668 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.281213656 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.282559418 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.280418967 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.284800121 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.28299437 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.279062869 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.281497606 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282053113 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27705759 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281398483 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.280544261 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.28066718 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.279797044 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.280705687 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.282969355 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.280922034 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279934962 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.280056276 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279861168 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.278818352 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279231767 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279746639 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.278852211 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.276954839 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.277564342 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.279042989 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.281033684 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.280764731 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.283834899 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.277643826 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284657648 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285595628 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.279926561 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.278511079 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.279806374 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284024036 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.28230988 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292209355 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.298617504 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.280589148 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287452739 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.30148947 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.279578292 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.282775327 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.281492521 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.279491654 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.283783131 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.289116207 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.282613485 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.284812396 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.282900979 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282631784 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287102598 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.29135767 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.27891263 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.281896085 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.282272081 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.283530485 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.28051769 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.285896288 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.282372068 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.283415088 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289712755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282265232 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.284932505 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28571592 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.282826836 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.285753886 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.288140182 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285258379 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.288318762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.288538732 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.283566257 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.286522086 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284313484 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.288066628 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28233563 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.285824751 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.284017594 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29837023 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.312158701 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289975126 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283854326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.285742523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291114784 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.284574432 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.288052502 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.289492472 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286351647 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.284283838 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.286822495 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.28301511 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285339164 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.288054169 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284926473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.286816602 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.289357622 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.286380117 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.286833639 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.286936198 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.287585129 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.286000549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.285406748 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.285206748 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.286287847 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286516493 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.285028538 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.286137915 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29083549 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.307812805 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.291422637 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.28472431 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.286729439 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.288642503 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.287773219 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.286632383 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.28869294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.294755643 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.287810093 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.294830326 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.288577203 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29639321 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.288942785 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.293235139 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.295637428 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.284448546 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.287837213 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.287517549 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.289595228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295355072 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.314544963 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.288297706 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.291555131 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286794651 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.289707428 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.287450172 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.286706221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287749117 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.288081186 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294334237 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.312980036 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.290090432 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290331984 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.286325902 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.292161706 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.287652539 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.289847682 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291071026 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.290575059 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.287557211 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.286503291 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.291240773 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.292237234 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.291463009 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.293089219 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.284949611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.289573521 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295162523 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.313579571 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293507355 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.288911985 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.294827659 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29299573 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30078904 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.314090812 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.2904924 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.293048841 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.288895748 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.291709817 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.291407321 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.293037208 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.292862768 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.291720576 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.293254165 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.291945709 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.294752692 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.292298434 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.294789029 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.287519538 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30189022 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31285907 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.291747085 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294282579 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.288242655 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.290174502 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.294930589 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.290837387 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.289109077 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.294392299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302711204 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.297853872 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.288909757 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.295332243 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292169368 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293586012 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.293046967 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.29380915 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.292214091 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.290980459 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.29265996 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.292320974 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293368415 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.293025661 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.292212161 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295515696 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.295204706 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.299841264 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.29302029 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.293188932 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294315321 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.295341772 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.291257226 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.292896536 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.292171479 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293893155 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292700501 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.293757546 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298699193 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.299063711 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.296833598 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.292405303 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.295102297 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.293955444 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.290894521 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296215945 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.294007129 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294680805 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.293620902 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.295424937 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.294759454 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.291483375 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.296112797 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.294486789 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297077475 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297465363 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.299140242 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294590557 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.294061592 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.295636212 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29429811 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.293322688 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.294277224 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.30279963 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297246493 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.305246644 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301387983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.29851372 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.293930703 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29771439 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.302135962 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.294357789 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.292817238 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.296521749 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.29649777 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.295596664 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.29897617 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294134471 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.299831134 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294318733 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.294801929 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30262182 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.317997263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.295074649 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.296155093 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.298176261 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.29819385 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.295475682 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.294991274 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.295737676 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301131318 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.320126044 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297565147 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297138405 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.297557147 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298042025 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300306849 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29574757 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.296958591 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.295391441 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.29560677 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294548799 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295982116 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.296247868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.294732359 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.298418276 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.300860443 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.304087482 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.295812301 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298615672 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.297600296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.298689571 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298502704 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299440665 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.295719417 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.29676429 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.29645609 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295799814 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.298879066 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.302742934 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.299070245 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.299001839 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.300041365 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29950663 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299461379 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.308391557 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.307611931 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.296141077 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.300627653 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.300691121 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.301065765 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.298153883 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.299378964 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299444583 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.295922929 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.297636667 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300453123 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.299065385 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.301904623 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314741867 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.324507085 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298362853 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.299047151 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.304111424 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.30073964 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.30012847 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.300951566 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.302789219 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.303250687 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.308094324 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.298587814 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305276007 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323205327 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.298780383 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.304112176 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.304077833 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305253948 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.303935933 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299896665 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.302638213 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.302991974 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.315099436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.303396362 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311183964 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324741195 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.321154126 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.30377194 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.301712665 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302314156 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.30390836 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.30119808 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.301437946 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.300238069 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302527361 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.303345168 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.303775944 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305399239 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.305261416 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.30500318 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.302987043 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299568377 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.30322381 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.301704319 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.303701648 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.302227505 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.303692692 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.302620497 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.302967587 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.301551808 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31411105 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.328531069 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.303076453 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.304331353 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.301544091 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.306757768 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.30616416 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311692019 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.310876884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.304381739 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.302957703 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.30294549 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301899082 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.303755847 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.301722992 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.303454251 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301408854 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.301606112 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.318186791 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329885935 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.30764828 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.306043259 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.30569461 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.305698808 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303325936 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304419371 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.303980134 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.305055472 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.307282158 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307295675 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.307308737 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.306703292 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.308125781 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.314144211 seconds)
  done (took 769.803469223 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303799956 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304012101 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301571101 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301111298 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304254941 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305821802 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302845367 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304659318 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.3041649 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303812899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303841676 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304115246 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301392155 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305573435 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303431112 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303235662 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304575423 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305245169 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303300014 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304187781 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305371058 seconds)
  done (took 28.580461229 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.306363982 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.304030661 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304439569 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.307471527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304698203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.307187422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.306825672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309920381 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305987938 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304342581 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.307904258 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306743138 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.304559652 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.30412467 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304443775 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309799459 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308158389 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305217953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.308130224 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307745087 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308750707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.306061108 seconds)
  done (took 29.943281076 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.305798821 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.307776821 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.308375468 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.305543051 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.309405369 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.305143186 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.308187172 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.309688042 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.309884932 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.309859634 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.306203234 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.309053377 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.318228756 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.314002724 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.311421945 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.311117545 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.30884788 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.309295465 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.310435031 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.307654748 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.314135694 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.31021254 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.308455171 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.307727784 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.311415434 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.309821101 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.30980985 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.311228303 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.310115704 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.313131157 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.311080129 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.309013055 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.312206851 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.310618435 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.311486411 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.314615576 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.31192066 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.308481824 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.310526869 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.320738775 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.330038807 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.310397483 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.314642418 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.310802709 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.309287811 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.312316513 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.31722847 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.308448759 seconds)
  done (took 64.127409942 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.311331056 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.313568585 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.310280129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312864103 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.312677077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.311355643 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.311543323 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310805709 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.308267412 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.309481987 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.311662377 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.309611547 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.308642497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.312768241 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.311792071 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310456387 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.310962086 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.31057303 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.31163884 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.311324869 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.310967317 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.311601713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.312756993 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.308891534 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.313935617 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.309078674 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310170849 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.314513924 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30988028 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.309961913 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.31481365 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.312658275 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.314086244 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.312916174 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.313526104 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.311751411 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.312009206 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.311406313 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.315687368 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.310380825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.311407072 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.315311063 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.311978549 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.311632553 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.309124564 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.310091361 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310044246 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.310367023 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.311974166 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.31421545 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.315256456 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.3112688 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313508834 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.310584685 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.311906721 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.313970706 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.311757104 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.310600409 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.312689249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.310374304 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30875949 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313822714 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.311627274 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.31277431 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.314836829 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.310421626 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.312831604 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.314351457 seconds)
  done (took 90.407329859 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310865893 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.312773817 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31190586 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312905639 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.313019078 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.311639967 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313512189 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.311589418 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.312609649 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317126513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312657849 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.314193496 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.314495449 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.313256488 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.314124496 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31245278 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313151681 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313844173 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314534105 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312998664 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.31459598 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314014899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.314480402 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315055828 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316446536 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.314610571 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315499605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.31535812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312429852 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315061139 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315261159 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.315638278 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316010407 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315333844 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.317766506 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.315395057 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314781864 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31350504 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.316512757 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314719695 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.314486261 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31335667 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316951976 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.315986292 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315578553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316209425 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314718569 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.318416903 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.317063795 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.319950155 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.317809612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314746163 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317248641 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316272914 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317945215 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.317419326 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319318467 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316725804 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314790579 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.31734647 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31731607 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.31568017 seconds)
  done (took 82.741147971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317201529 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317771506 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.316284933 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.315381679 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317882422 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317194776 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.319060879 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.317967158 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.31946868 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.318183731 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319876873 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316835568 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316414263 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319599654 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316440543 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317859087 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317300632 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.317223993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318251721 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315635864 seconds)
  done (took 27.560362182 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.315561944 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319733479 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.31711918 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317391341 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.320125991 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.319537838 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.320092309 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32071139 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317628308 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320244896 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318471401 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318949813 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316699513 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317853431 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320087795 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.319505931 seconds)
  done (took 22.31036132 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.314897013 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.321730236 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.321661806 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.320261226 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.317576888 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.315374918 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.320908014 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.317684002 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.318446335 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.323528375 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.32020871 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.322885494 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.321016356 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.320582543 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.319814988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.323392695 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.319326652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.316640905 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.322664935 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.322721626 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.318297461 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.320439995 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.321110768 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.323737434 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.321391535 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.319860243 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.319859085 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.319786338 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.32105419 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.323472722 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.322199927 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.320589381 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.321200593 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.322523847 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.32407615 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.31876025 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.325256898 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.325254844 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.323687117 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.324609999 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.322682445 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.320465813 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.323438767 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.323254893 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.32402388 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.325144098 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.321592468 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.320462331 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.321290042 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.323708038 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.322500112 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.323431624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.322923017 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.325304335 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.322755801 seconds)
  done (took 73.895830154 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323814706 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325276955 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32113473 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32641775 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322965284 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.324010733 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.324574779 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.325017282 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323689982 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.326251387 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.320978464 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.3273895 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322794651 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325090029 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322614528 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326352498 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.322146948 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.322290376 seconds)
  done (took 25.047255868 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.318076907 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322394289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.325941646 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.32312277 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.32340624 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327539006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32267078 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.325131829 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326751852 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323769979 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321046455 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.32644112 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325513225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.324357043 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323789816 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32296879 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.327550818 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327372532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324927502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322887045 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324364143 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325979844 seconds)
  done (took 30.353998865 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.319787123 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.321953193 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.324861269 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.341915435 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.340507001 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.32390365 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.324671283 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.325911706 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.345690789 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.377901412 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.373354957 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.342618561 seconds)
  done (took 17.278649831 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323562073 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329079832 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325474202 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329351158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328177068 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325801875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325874193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324442299 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328391601 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325647063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325211617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32915984 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3281274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326498568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327858258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326180373 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326157755 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324510991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326280709 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327687391 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324978382 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329714424 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324709555 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325919634 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325822928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326637341 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329116597 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326275676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326853864 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330698615 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330372299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327153617 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328256973 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325725332 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328181824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329341763 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325942122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328711575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327844569 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326174492 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328661266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327250071 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331310156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331075292 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330042593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326051327 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327030355 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325652115 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327052585 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333790516 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330617994 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326048429 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33095062 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331714501 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331100233 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329250778 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328239134 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327606315 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329897375 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328614914 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329368676 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332015341 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330688688 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329974034 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332757038 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328492076 seconds)
  done (took 88.867739429 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327080015 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329343142 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327561467 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33093726 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330136143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328200911 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330271975 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329873196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328425515 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330031832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330963686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330906024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329470537 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330433433 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328056557 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328705091 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329523992 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331132478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330648716 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332429148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330241521 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329969405 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32988026 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329243184 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329973549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334109363 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332130913 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331470646 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329772131 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329087618 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331787883 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330953726 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331392156 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.331371424 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329045733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333126229 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333467269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333363085 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331825305 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336167613 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33135386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334836157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332368148 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332645934 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331579244 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333229274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330800229 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332166453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332269232 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331522487 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333589946 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333333215 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333093563 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332756309 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332465745 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333737112 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331984639 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334738595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335267912 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336260766 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334303627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335284542 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335012982 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334354409 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332850796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331864499 seconds)
  done (took 89.109577028 seconds)
done (took 1801.317637065 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.492899189 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.450212803 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.334206076 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.354385865 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.330589453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.328707039 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.345225256 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.331823832 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.33479175 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.336445927 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.335715583 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.523324444 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.33053684 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.332115757 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.335288667 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.430445918 seconds)
  done (took 27.156401646 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.362706031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.343581995 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.465725113 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.356974493 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.364425343 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.539381972 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396401769 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.341393664 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.533798844 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.380925828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.332425193 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.362176934 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.339515514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.333457792 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.356294568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.537401936 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.605204259 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.329115935 seconds)
  done (took 29.510251583 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.833383195 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.33262749 seconds)
  done (took 5.393565764 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.357518588 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.342370515 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.340568715 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.338942834 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.346108339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.326730586 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339824265 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.338412584 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.357816129 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.477084019 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.343208988 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.34960456 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.363229136 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.34296441 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.337783535 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.382299639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.536396991 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.341836943 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.339455031 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.346810985 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.340489322 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.437142671 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.386481181 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.339582278 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.478101985 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32855526 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.355217496 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.348756139 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.476115562 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.342345913 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.341446121 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.342791224 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.346587663 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.316637789 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.831274036 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.329999482 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.385801972 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.354027917 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.339284121 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.520555578 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.341638594 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.348523886 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.334652388 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.833748348 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.485408896 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.468930395 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.348368631 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.338982205 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.34284808 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.410415728 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.341706192 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.346044995 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.39095573 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.173500781 seconds)
  done (took 85.937644484 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.332949209 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.331166695 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516096147 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.353045724 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331103671 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330422929 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.334662338 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.651718148 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.350570242 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332727434 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.640431259 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.916646573 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.358320666 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.385095623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.183702216 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.394024693 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333963842 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.351317717 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.335886451 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.333109999 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909150169 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.356703988 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.333801277 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.561546004 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.371850679 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.885927519 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.335395598 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.333919692 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.357135592 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.332619723 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869466259 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.352445609 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.394380716 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338993252 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.627179872 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.746666827 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.705789544 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.334272636 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.363592491 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.33653785 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.360765043 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.863761356 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.727040642 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.333578485 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333419835 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.873966146 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335232203 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.341032853 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.337681316 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588624672 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.338921905 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.334593619 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.351873692 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.333271248 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.335294967 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.409696641 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.42641192 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884897794 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334517794 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.335782129 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.396373526 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.336771519 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.339912126 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341213255 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.338721344 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.731896474 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.487125328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.340342452 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.729043545 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865796164 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.352306247 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940466161 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.352565868 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.351080242 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.480835603 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337300218 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.336839163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898104325 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.368443355 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.334975743 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.712519174 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.337798344 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.645023041 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.360695138 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334065118 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911851632 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.339943267 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.343036426 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.337803116 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.338115925 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.338185762 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.346579736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.63175613 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.377851488 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.336651341 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.337901724 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.353435045 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340202701 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.337702644 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.343911472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942485078 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.355192143 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.340749185 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335995703 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338310383 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.336567138 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.339205949 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.3390415 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610033249 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.354724339 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.343220708 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.344490485 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.341349953 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.346593637 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.576173834 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.34578288 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.678837777 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.339989325 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35482556 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.344654415 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338965532 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390845174 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338247371 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.34748961 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.254093831 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.602227473 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.360657873 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.356264084 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.3382165 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.3408135 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.356171171 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.359225868 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.380478233 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346252934 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138646419 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.369227327 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.362898008 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.34450828 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.352879517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.355040841 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.350182395 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340187621 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642680609 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.635046673 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483977629 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.345608161 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.340242695 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.120870823 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.401512976 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522460677 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366779918 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.340073369 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.594979255 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560919181 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.346055655 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.343051755 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.342796832 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604670187 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.347599669 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.658049814 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908485883 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.359597518 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.345149261 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.123414406 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088147539 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.34491442 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.347021069 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.649171364 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.364179963 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.345440868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.347085455 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.345837386 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.342593585 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.347565644 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.347289875 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.343820835 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.344644826 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.442779337 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.541070901 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.367675798 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.353087337 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.886093675 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356748332 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342938773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.34724237 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.349213277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.344650781 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410122853 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.347313743 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.384666818 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.347025191 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.351673131 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903837927 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.343330387 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.344484844 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.54261558 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062415151 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.36231453 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.347574496 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.362819967 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.227024155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913518508 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.377804831 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.691863404 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.352594654 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.390787761 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.351842469 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.365748767 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.915662805 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.349861269 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.367429045 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.023273865 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.361998353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.206783743 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.34410119 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.34950174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970366501 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.36321874 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.355329072 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345280638 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364557001 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.643639243 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.350694654 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.358590167 seconds)
  done (took 501.538760009 seconds)
done (took 650.761909444 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.349152161 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.351357885 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.333179908 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.349031929 seconds)
  done (took 10.627094975 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.356652108 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.353656155 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.357738581 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.352282732 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.358361686 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.354132444 seconds)
  done (took 9.377752033 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.344194637 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.351060279 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.350755069 seconds)
  done (took 8.29200034 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.577300327 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378998908 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719137555 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.366587945 seconds)
  done (took 9.288087448 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.356766442 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.35752469 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.358442709 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.359097898 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.362233327 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.363711587 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.358830755 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.35839913 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.362272292 seconds)
  done (took 13.483206789 seconds)
done (took 52.312183803 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.355699688 seconds)
    (2/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.3508842 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.991948088 seconds)
    (4/286) benchmarking ("sort", BigInt, false)...
    done (took 2.350728928 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.349373021 seconds)
    (6/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.354063506 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.62975223 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.352745242 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.391820157 seconds)
    (10/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.186955225 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.205152167 seconds)
    (12/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.353639756 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.379795618 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.27429419 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.01306799 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.35689854 seconds)
    (17/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.235567172 seconds)
    (18/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.400903866 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.361206211 seconds)
    (20/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.473400847 seconds)
    (21/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.336108517 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.317203469 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.346872575 seconds)
    (24/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.340408335 seconds)
    (25/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.736563977 seconds)
    (26/286) benchmarking ("sort", Int8, true)...
    done (took 2.349118323 seconds)
    (27/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.360656926 seconds)
    (28/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.334465086 seconds)
    (29/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.355853593 seconds)
    (30/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.333544573 seconds)
    (31/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.350176341 seconds)
    (32/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.352201932 seconds)
    (33/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.337813165 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.32909667 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 2.350425761 seconds)
    (36/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.377649049 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.485953604 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.36904582 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.32814607 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.332388198 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.697256856 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.369306232 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.333514733 seconds)
    (44/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.12430275 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.489258896 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.370889352 seconds)
    (47/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.484997135 seconds)
    (48/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.356044451 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.339491269 seconds)
    (50/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.608561347 seconds)
    (51/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.50635783 seconds)
    (52/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.376973028 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.365732114 seconds)
    (54/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.334223462 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.574735467 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.342590746 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.191585408 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.636654177 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.274134883 seconds)
    (60/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.376546531 seconds)
    (61/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.751240606 seconds)
    (62/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.436869924 seconds)
    (63/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.52749791 seconds)
    (64/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.261087109 seconds)
    (65/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.345995541 seconds)
    (66/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.546317623 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.34299199 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.430612461 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.339916334 seconds)
    (70/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.338235245 seconds)
    (71/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.935075008 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.372255349 seconds)
    (73/286) benchmarking ("sort", BigInt, true)...
    done (took 2.358772922 seconds)
    (74/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.383191796 seconds)
    (75/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.556578768 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.366796632 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.471301922 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.359676548 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233652075 seconds)
    (80/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.355745522 seconds)
    (81/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.359463076 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.768888222 seconds)
    (83/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.413622502 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.385699523 seconds)
    (85/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.419054317 seconds)
    (86/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.62130193 seconds)
    (87/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.438458092 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.339612442 seconds)
    (89/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.474188635 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.342046502 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.474142816 seconds)
    (92/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.423318814 seconds)
    (93/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.040985463 seconds)
    (94/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.353634947 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.363782859 seconds)
    (96/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.452294196 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.359500191 seconds)
    (98/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.357851063 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.379827377 seconds)
    (100/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.732907797 seconds)
    (101/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.370539915 seconds)
    (102/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.041004306 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.398471088 seconds)
    (104/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.347971253 seconds)
    (105/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.340221542 seconds)
    (106/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.408598981 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.345084079 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.588959268 seconds)
    (109/286) benchmarking ("sort", Float32, true)...
    done (took 2.358426206 seconds)
    (110/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.340117947 seconds)
    (111/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.534088321 seconds)
    (112/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.350038799 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.344325276 seconds)
    (114/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.049871465 seconds)
    (115/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.560636369 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.354430955 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.354727418 seconds)
    (118/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.394371232 seconds)
    (119/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.979208147 seconds)
    (120/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.733773553 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.340899439 seconds)
    (122/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.256992957 seconds)
    (123/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.506906448 seconds)
    (124/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.447004257 seconds)
    (125/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.5020141 seconds)
    (126/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.355516181 seconds)
    (127/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.497976115 seconds)
    (128/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.341485804 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 1.916419218 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.382645424 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.620177561 seconds)
    (132/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.341950534 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.361413178 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.287165862 seconds)
    (135/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.416672144 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.197552971 seconds)
    (137/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.359338911 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.640120987 seconds)
    (139/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.448035214 seconds)
    (140/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.444213584 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.468023315 seconds)
    (142/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.346528037 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.357367661 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.397422262 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.489906021 seconds)
    (146/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.346533882 seconds)
    (147/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.410512996 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.207588954 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.385793794 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.346415053 seconds)
    (151/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.205834082 seconds)
    (152/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.341854078 seconds)
    (153/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.214831494 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.365266054 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.342144026 seconds)
    (156/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.387345417 seconds)
    (157/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.374955701 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.381806538 seconds)
    (159/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.389068895 seconds)
    (160/286) benchmarking ("sort", Float64, true)...
    done (took 2.363724422 seconds)
    (161/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.354204291 seconds)
    (162/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413663696 seconds)
    (163/286) benchmarking ("sort", Float64, false)...
    done (took 2.362002499 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.498272485 seconds)
    (165/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.560378809 seconds)
    (166/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.374087212 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.350556169 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.392688619 seconds)
    (169/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.546123163 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.389864056 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.364724227 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.360845451 seconds)
    (173/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392028008 seconds)
    (174/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.375563978 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.983174181 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.20724312 seconds)
    (177/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.495861174 seconds)
    (178/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.393592957 seconds)
    (179/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.381471256 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.391503018 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.37784028 seconds)
    (182/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.350133761 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.345296414 seconds)
    (184/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.044105416 seconds)
    (185/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.392161624 seconds)
    (186/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.357572062 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.410037471 seconds)
    (188/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.352563704 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.34717268 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.343893455 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.37830432 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349471689 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.202719697 seconds)
    (194/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.373982482 seconds)
    (195/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.407605793 seconds)
    (196/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.468990552 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.754224713 seconds)
    (198/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.376254261 seconds)
    (199/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.390324587 seconds)
    (200/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.377435397 seconds)
    (201/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.54982199 seconds)
    (202/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.349827361 seconds)
    (203/286) benchmarking ("sort", Bool, true)...
    done (took 2.377520503 seconds)
    (204/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.438457632 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.395923792 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.14415174 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.349988492 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.457859687 seconds)
    (209/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.361539552 seconds)
    (210/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.372383666 seconds)
    (211/286) benchmarking ("sort", Float32, false)...
    done (took 2.369484536 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.373606474 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.365447928 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.58076505 seconds)
    (215/286) benchmarking ("sort", Int8, false)...
    done (took 2.366659518 seconds)
    (216/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.75175333 seconds)
    (217/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.346023443 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.41390039 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.711904714 seconds)
    (220/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.38330709 seconds)
    (221/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.345920405 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.406832185 seconds)
    (223/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.379567932 seconds)
    (224/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.383528764 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.353132033 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.349032964 seconds)
    (227/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.001274615 seconds)
    (228/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.451412117 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.382443366 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.684537777 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.359345121 seconds)
    (232/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.348142232 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.771751405 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.368403429 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.346882816 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.349013956 seconds)
    (237/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.417559778 seconds)
    (238/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.352703219 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.594226968 seconds)
    (240/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.710517161 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.374949276 seconds)
    (242/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.376603028 seconds)
    (243/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.377803187 seconds)
    (244/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.375754961 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.39288243 seconds)
    (246/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.353811345 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.061485827 seconds)
    (248/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.459561955 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.758858279 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.419982198 seconds)
    (251/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.363675634 seconds)
    (252/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.398576957 seconds)
    (253/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.357797992 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.349973951 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.351668911 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.396551807 seconds)
    (257/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.369422511 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.4821427 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.398164214 seconds)
    (260/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.353701778 seconds)
    (261/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.369380703 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.777586379 seconds)
    (263/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.389649804 seconds)
    (264/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.375054835 seconds)
    (265/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.913998956 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.972917346 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.477443331 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.459954901 seconds)
    (269/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.360175194 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.537735917 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.437110902 seconds)
    (272/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.354965942 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.265174891 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.371275651 seconds)
    (275/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.329558693 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.390241397 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.78938249 seconds)
    (278/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.372228642 seconds)
    (279/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.412805235 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.432158012 seconds)
    (281/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.356016386 seconds)
    (282/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.872016056 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.350896265 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.4147359 seconds)
    (285/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.399553395 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.227243729 seconds)
  done (took 578.402787587 seconds)
done (took 579.651146197 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.41824353 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430587602 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.383635573 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.417662056 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.497569941 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.557024107 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.392191828 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.419987014 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.430439183 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.431012278 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.386889674 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.554758891 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.384503377 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.383121588 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.382972564 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.426952581 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.374421198 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.382321766 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.401032801 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.416588786 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.399702775 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.391745807 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.436365281 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.556251016 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.391238006 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.387405349 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.389382091 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.404729706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.497565508 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.38818933 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.390384502 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.397990672 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.37580007 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.389163 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.378845799 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.406869768 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.397945168 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.39424786 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.419004026 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.496749157 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.381094251 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.389693219 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.386380028 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.386085442 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.388475087 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.426283938 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.390423316 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.44282976 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429690312 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429197969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.377767299 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.401536426 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.395936631 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.388535869 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.398859828 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.387325814 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.445114254 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434232153 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.408246635 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432483507 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.391010285 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.388980253 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.42848511 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.406281729 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.395771515 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.377056279 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383810568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.43000551 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.385355953 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.390303035 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.376919264 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.390205428 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.390131954 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.404624218 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.419876751 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.381586812 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.380225934 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.38839392 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.394153618 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.389989655 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.437008538 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430681723 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.438671586 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.390354638 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432168518 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.563095726 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.400153075 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.389023749 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.422741278 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.409390149 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.39542091 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.398390587 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.424182564 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.392511641 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.4358173 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.447068013 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.397192684 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.398916138 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.439196588 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.397360992 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.38382671 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431627035 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.388584931 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.386786802 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.388187823 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.511632688 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.385289601 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.389018236 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.42327911 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.440519123 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.450879018 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.379677103 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.419526478 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434933475 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.396955109 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.452818802 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.392652112 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.394647449 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.375752673 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.508590998 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.394903998 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.405492205 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438638469 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.448977493 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.392226109 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.387630834 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.389382523 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432594937 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.512779395 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.401658756 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.501396243 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.389897169 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.394631712 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.423074436 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436989974 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.422982918 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.453029113 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437357224 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.408719787 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.392047908 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.402698594 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.401558974 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.393811983 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.448417733 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.388776155 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.42206387 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.4349282 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.435245228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.425885265 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.514083729 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.396773723 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.382518471 seconds)
done (took 232.333599641 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.457013915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.388341212 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.496785467 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.391695867 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.49801748 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.490258991 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.38712018 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.38746506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.389888865 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.795586904 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.387113082 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.389214627 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.392408547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.388274428 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.48030014 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.389709982 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.38869783 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.736543952 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.392446667 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.467889473 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.390388167 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.389222651 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.39306148 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.776508933 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.389825241 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.386284195 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.463200782 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.392627469 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.738179012 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.386256926 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.388177149 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.739008341 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.482167282 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.411437896 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.40235516 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.402292791 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.495941785 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.410360306 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.47512082 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.479571159 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.500955257 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.432123091 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.386123257 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.388525948 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.392632364 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.392765713 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.391440773 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.418693794 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.390890033 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.390915597 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.775301745 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.402638189 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.400977364 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.390606519 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.391280228 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.414925054 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.391838804 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.394915174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.492058468 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392849049 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.453874972 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.776598597 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.775817805 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.39375708 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.39187024 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.391759815 seconds)
  done (took 108.480055818 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.460953834 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.473153153 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.515544092 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.39626324 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.444837896 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.521441384 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.397521811 seconds)
  done (took 11.490209379 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.398291552 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396095129 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.442386516 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.442662376 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.394501558 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.60587007 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396888105 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.405371896 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.392362291 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.471813214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.395038417 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.397365983 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.402771239 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.390277011 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442857423 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.408290211 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.510479939 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.397291582 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395639429 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.547151609 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39452727 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.400842332 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.466714918 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.408602451 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.397743692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.400508198 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.336489399 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394955416 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.393533399 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.39729785 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.394242052 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.50472078 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396426475 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.393699871 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392776854 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.555246531 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.399074726 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.393216083 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.396660879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.398158398 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.396880334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.400011593 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.39969477 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.395088638 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.397857158 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.419510097 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.398636023 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.399009398 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.398306186 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397875587 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.472088587 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398541854 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.393103501 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.395995507 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.475728644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.405105227 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401138873 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.397192769 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400517685 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397331834 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.550892742 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.446350659 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.396808833 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.446038711 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399993644 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401317937 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.400864612 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.398900182 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490066634 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.39796864 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.446727093 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.398033439 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.622978615 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.42439133 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401634168 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.400149388 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.401176305 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402272936 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.39378836 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.40312338 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.397617018 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.399782614 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.404350256 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.399613828 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397252312 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.586385217 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.555091772 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.395843726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.412482626 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.406289775 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.396442883 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.474288853 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.399779756 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.399067201 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450652395 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.5128105 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.47692357 seconds)
  done (took 144.363386577 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.403589592 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.406606902 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.40176176 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.422376836 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.402119705 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.399894089 seconds)
  done (took 9.721422454 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.399854966 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.401947489 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.401729335 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.40161287 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.400494127 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.398651525 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.398575871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.402400914 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.405833651 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.400674924 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.401423725 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.402121574 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.402218517 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.403395796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.401108851 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.402058043 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.403125026 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402281616 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.402623572 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403182141 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.39909136 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.403952916 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401657486 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.402088283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.406846239 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.4034081 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.410672752 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.4055113 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.403034726 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.408143898 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.423811694 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.402899283 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.403663417 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.408403652 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.408223212 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.403908069 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.40905865 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.404873638 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.400768351 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.405731416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.404098246 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405109012 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.404612676 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.403366158 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.403853037 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.40883277 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.408650843 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.410622046 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.404282991 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.40619495 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.403584917 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.404374959 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.404170782 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.403862362 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.405273543 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424576192 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.408533405 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.404230898 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.406881856 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.406119928 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.407201044 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.404584878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404974283 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.411130355 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.402970004 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.405799553 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.405006855 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.40964097 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405899322 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.404237763 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.40487853 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.404299158 seconds)
  done (took 103.442319533 seconds)
done (took 378.773213251 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.432866029 seconds)
  done (took 3.722418599 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.506652566 seconds)
  done (took 3.798532086 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.62552646 seconds)
  done (took 24.922685832 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.403011476 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.438554103 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.408690737 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.398671666 seconds)
  done (took 10.939837016 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.773135657 seconds)
  done (took 4.062923423 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.410051707 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.413211373 seconds)
  done (took 6.115085146 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.75543141 seconds)
  done (took 4.045897553 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.871910883 seconds)
  done (took 4.170713735 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.424969025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.41494528 seconds)
  done (took 6.142194013 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.38077656 seconds)
  done (took 3.672192999 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.382719338 seconds)
  done (took 18.676082731 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.415151621 seconds)
  done (took 3.713503741 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.425231811 seconds)
  done (took 3.71480033 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.409809217 seconds)
  done (took 6.699765259 seconds)
done (took 105.686979589 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.399277148 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.403772584 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.404976808 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.404013629 seconds)
  done (took 10.902191713 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.441180885 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.459305095 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.440830411 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452969075 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.44502686 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.44076539 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.433966514 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.43336764 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.455594942 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.446021946 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.46193772 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.445455882 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.443590733 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.434863933 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44483603 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.44442516 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453801557 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.46376307 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.436601702 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.449387132 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.413082706 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.455487042 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.448054532 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.409248895 seconds)
  done (took 35.948722815 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.926919621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.482590252 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.563250884 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.460651872 seconds)
  done (took 7.725103871 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.477422558 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.481236981 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.494465446 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.532499249 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.551528958 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.491273939 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.434455944 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.433981878 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.417078292 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.479670442 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.542062375 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.476097217 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.558586792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.410277092 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.606961423 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.412126586 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.410862774 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.489679237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.528490565 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.546016085 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.413241652 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.488885892 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.496080757 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.476642123 seconds)
  done (took 36.942238104 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.410897855 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.429699813 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.411143203 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.409667827 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.418315971 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.411235502 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.412512633 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.410158927 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.411627547 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.955708934 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.412158223 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.423312866 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.936306767 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.414838501 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.418310072 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.413605317 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.93499481 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.935059793 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.41492773 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.414971969 seconds)
  done (took 31.695335654 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.402535331 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.404160388 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.755807229 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.66450413 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.406304381 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.407376718 seconds)
  done (took 14.336648746 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.49103276 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.650515073 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.409534714 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.821396109 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.898903793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.410618744 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.413098136 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.688643622 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.05456444 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.050003396 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.478473962 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.496410447 seconds)
  done (took 21.162822654 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.405926181 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.408804304 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.424816211 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.424429543 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.475703076 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.413333204 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.418528948 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.40726912 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.477428166 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.477596698 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.413462155 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.4791148 seconds)
  done (took 22.525592787 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503029147 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409452773 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409668799 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547503804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411034951 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260530161 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505990927 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.221914383 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.431475758 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681790379 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421281408 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50652948 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663047227 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41472403 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401989055 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.396160649 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642206562 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956170347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407074849 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403757437 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444093617 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416178135 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411130087 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659852053 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412077099 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40743941 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.668997002 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406400187 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736815087 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424317457 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419619431 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408868343 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682059872 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139088388 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53332292 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657100735 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422437601 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411344477 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.390743426 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.412384142 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412842331 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413941479 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418643249 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409998825 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406829368 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414863452 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224741724 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.438954034 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.405697963 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410334661 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709749014 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510846841 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.414265498 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409757192 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412810043 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411378297 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.412210523 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.424012834 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995200446 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410966025 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415129536 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.405767985 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409962658 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416739707 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09614262 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.414264588 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.414728935 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414889249 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413079271 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408366395 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428358359 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41460351 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.433840335 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412273119 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200001774 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427126238 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419715972 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022051058 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421623255 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.41054416 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645455516 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411274904 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412061297 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.419730416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410867727 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239093338 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423643078 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.394391969 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409761368 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229599285 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687270819 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43775534 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445606021 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639560928 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.392432105 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412972084 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.427060539 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41608246 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432237776 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23331457 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436689694 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.41734406 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671274656 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.625646261 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4162801 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.394061809 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998794856 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451789597 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.428873973 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419602587 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.661789389 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.072078333 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427660651 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414661687 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4342904 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414202301 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288665712 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43342357 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.512368272 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433579912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708017228 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.321795585 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420249407 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485040529 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420489418 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415938826 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421837078 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418940919 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413685522 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.652620511 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437812267 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.425331398 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.413843511 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41536365 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.411304421 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412084811 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.438222699 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639254797 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429348211 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688242085 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416847765 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417644433 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413995204 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.639532692 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.431034903 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.758148275 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679519551 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41511715 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415374596 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427658789 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440027168 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525401541 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443003501 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.421627931 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669811756 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.419868683 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.42109495 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421772346 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422702324 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426183561 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.42464655 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424510113 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083210843 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387259384 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424692537 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313881075 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.433775138 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486985267 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424346151 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.671476294 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.423650916 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441135963 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.424782532 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.424299649 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649254013 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431200928 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.419033045 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498071018 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.984151662 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103538735 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433048316 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.417660272 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.415811969 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.417382627 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419864886 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418481508 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42175533 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669647907 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438560138 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429783704 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082097594 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41920662 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434328424 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.424165617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435301069 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.427325912 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421391913 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.424980944 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421210789 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427587715 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.43591438 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566029284 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.436860493 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419378327 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.936083135 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42691239 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4229344 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420348371 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457196868 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439265612 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347507114 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678963273 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423242336 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728003007 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43929385 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.436819913 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.428727462 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437609766 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432218461 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.437851847 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452960749 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.43263195 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427200777 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423943261 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997178659 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246892553 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027426671 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428477215 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.428559597 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447246373 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243271206 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446260251 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421163535 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689988929 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247891174 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447878524 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989744078 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.444954953 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329164405 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73161726 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663359188 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425708299 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.446701535 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731821987 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641272955 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459658098 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441034514 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428683552 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.402234479 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043374542 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45305633 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505618218 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255670827 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445337055 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430261372 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.513284352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.42116299 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927414282 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447490696 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426225762 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435399731 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444493453 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310087608 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428727575 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424769425 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118996079 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424580079 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.991334919 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447341792 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680068877 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.439831227 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.427251763 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.423517872 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.433173064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.68023917 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73055459 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430753952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425544832 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042087491 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.3059595 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.432119362 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426319344 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295082275 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437701184 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759879433 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.42984023 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.448077586 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425867391 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424242171 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427308625 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.425722366 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431509008 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397315425 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984844371 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.423937077 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460751022 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45267511 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431540584 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682454839 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.443559936 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087914268 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658597469 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426401993 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455307697 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.432599793 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42899847 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.41208398 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42763384 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428848073 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574136346 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651203022 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429835518 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.411937666 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.538649733 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641020459 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429517408 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428843043 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715637428 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.430341016 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.445590322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230148286 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457518901 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430186973 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434199255 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434410893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444209 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50328007 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683101171 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.444239788 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.442847748 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910404548 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453289019 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435843123 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.442247811 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52972745 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445798746 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.445906839 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.205273951 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104326617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25450929 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093441172 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733502557 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4370832 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436143793 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43245269 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59342072 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433200545 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708353893 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432586767 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.43516729 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458981546 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43879334 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439161061 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650156217 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710036188 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436452299 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442537447 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432186536 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.428238667 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443290625 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.644558549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998648419 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049093136 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433270568 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436292335 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268278576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731799705 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439134006 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441342957 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437228373 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.465120292 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.43782729 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.445882218 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444453282 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587503587 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746428099 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189616165 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.468365564 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.461769251 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.208494303 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448528234 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690839899 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446032067 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686774735 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099339868 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224420694 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69709022 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505219809 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689751614 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.444687467 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601087648 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.430104176 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431963868 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433791142 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434280135 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.430117638 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.447201286 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101285849 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698020312 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.439618198 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.433956602 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465021695 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.445479751 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.662530929 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281118972 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.664811077 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447097209 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441029903 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435733269 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102482074 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7428089 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442144029 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.436512264 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718975057 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439988197 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464795453 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.889492226 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.437636894 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058815797 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.412729134 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460123115 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436394139 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235377696 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10201516 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438616219 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998539871 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437778458 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454172314 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711287007 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.443435455 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436758856 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717968613 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.445650193 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.445676686 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697665873 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.109563781 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30717805 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.449454245 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457584992 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.442572529 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439948028 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542671114 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437115269 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446195878 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.933626513 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463867919 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43924305 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446564924 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.439204291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437850042 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.442364652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438955985 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.443817973 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.437421982 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.438964027 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.446090585 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.445857307 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112097554 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469550575 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.117400027 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.77777942 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698533796 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448189378 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.4257249 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.448073664 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442254805 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436504103 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440112534 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442477532 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060016134 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.45553824 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.456032293 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.448123587 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.660241243 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657007101 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452014674 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701472563 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460215998 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456405885 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.425768279 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44309991 seconds)
  done (took 1010.481113438 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.471491977 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.469935052 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.467083407 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.543200639 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482371173 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.516146342 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.486631312 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.489472088 seconds)
  done (took 21.254716499 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.455241157 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.449426455 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.447981646 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.449323763 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.455112352 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.976012764 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.468272766 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.450335237 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.453252939 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.452823816 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.447798638 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.269188753 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.455035046 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.444352301 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.43534466 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.448139717 seconds)
  done (took 33.897170144 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.698042766 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.712759473 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.958814727 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.53339908 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.442643029 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.438758268 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.856676459 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.458350716 seconds)
  done (took 28.43305333 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.45678653 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.455647419 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.455009821 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.456598759 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.456205133 seconds)
  done (took 8.609514596 seconds)
done (took 1285.207219352 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.449006621 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.454065071 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.447850922 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.449547138 seconds)
  done (took 7.129249346 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.427226576 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.426813251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.422416059 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.441414935 seconds)
  done (took 10.05087149 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.286914192 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.202318536 seconds)
  done (took 5.822501701 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.44703608 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.20940388 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.18681903 seconds)
  done (took 8.178506777 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.771856221 seconds)
  done (took 3.105681227 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.856956918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.842804076 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.64406086 seconds)
  done (took 6.677789064 seconds)
done (took 42.295488949 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.446384265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.695356597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.603172227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.444125674 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.605399415 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.635237404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.300489969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.461519767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.453192057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.451407174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.443572708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.607469411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.208616364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.69815112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.209997189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.700011662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.608703812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.454392701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.443625018 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.450156861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.30055132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.447037848 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.450135366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.445687711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.606370027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.593609676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.462382789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.710171375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.447227514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.445183436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.609268079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.454198062 seconds)
  done (took 85.224495617 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.447612864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.449829388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.444505576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.475884625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.456729885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.446858475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.467883633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.474563284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.456054147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.453885545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.458321158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.453346265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.458005267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.447792178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.485444276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.445263041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.468794683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.449395625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.447590145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.464316539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.4503151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.470344978 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.448071809 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.447991617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.44727858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.448216215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.46658542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.468647214 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.470783729 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.447920552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.468032224 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.469204662 seconds)
  done (took 79.992686142 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.448761433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.467109801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.48200943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.454378298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.44694586 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.459015201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.447177011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.451101715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.460351151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.456766216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.460244223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.447264676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.448724495 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.448373625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.448118455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.447113706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.462698068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.448609677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.449165604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.448068076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.449174652 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.449434982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.452332399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.44705101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.465971793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.46859168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.463251196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.448381137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.449814106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.449667351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.491305755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.462660213 seconds)
  done (took 79.918558771 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.734723918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.463502262 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.461210197 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.456505113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.462403542 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.461512966 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.456791328 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.738748209 seconds)
  done (took 15.575931957 seconds)
done (took 262.045408933 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.465428276 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.464006157 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.691616107 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.493775739 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.478664005 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.476609632 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.490071498 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.7112444 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.482449765 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.710164318 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.5012902 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.478313443 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.482378558 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.489920406 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.773543167 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.622979949 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.451232859 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.463153193 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.827183692 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.474202204 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.774911935 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.463649628 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.764922009 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.451721781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.470007164 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.450626351 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.46435264 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.463579106 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.506519112 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.850808754 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.462940005 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.459321724 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.550271083 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.573853998 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69669181 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.637943976 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.482528436 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.549971697 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.694644362 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.464284609 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.462645953 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.291947244 seconds)
  done (took 87.356924926 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.463957879 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.580952338 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.465206473 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.46574692 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.466102226 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.583617377 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.557931815 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.465062738 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.466334422 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.465263484 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.463373937 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.46399919 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.464105948 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.466804712 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.469280229 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.46675254 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.466658031 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.465934095 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.465070853 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.511062202 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.586609818 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.494168658 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.454804028 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.464088182 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.567002072 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.602905475 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.46594769 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.453554285 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.506018533 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.467129024 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.467037179 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.510576467 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.464141277 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.468768103 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.583706854 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.563210657 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.466953082 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.4608659 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.57808362 seconds)
  done (took 59.653459285 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.467603155 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.732332819 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.93388866 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.472434167 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.468747447 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.474385175 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.558976737 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.468809387 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.472201077 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.473712281 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.632599537 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.469826344 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.51002145 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.974467301 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.476006404 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.471032237 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.470482817 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.470547379 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.74126331 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.47448923 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.580001218 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.469952415 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.561016573 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.478220506 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.492905457 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.469306324 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.474751333 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.055715874 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.473745537 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.637738536 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.396814081 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.563151007 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.00839034 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.960637091 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.408938596 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.474196403 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.471021185 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.641373761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.470400688 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.471772557 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.559490407 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.469577238 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.959059117 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.152460433 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.496642694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.472954005 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.084866801 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.644081233 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.762783222 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479714234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.978846399 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.472895013 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.473138119 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.5092867 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.755207221 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.475725821 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.471641565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.07757113 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.492456599 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.56255426 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.47180438 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.472927134 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.751573993 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.46975102 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.739313438 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.469932705 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.480371339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.492974142 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.950182178 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.473141439 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.16937213 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.49213555 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.473204797 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.635672204 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.737078563 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.111806076 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.474567553 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.758303366 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.015469326 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.561999383 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.477263255 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.045878948 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.570798174 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.476700348 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.477087719 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.479114307 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.474985731 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.523827316 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.565127753 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.096711942 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.169224905 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.114229244 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.582037284 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.487513829 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.474589124 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.09238632 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.494723721 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.476340221 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.947102275 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.176885856 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.498824649 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.48286405 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.182835546 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.4992419 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.566259818 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.482446554 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.962770691 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.473984946 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.521058472 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.486152604 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.482029118 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.496500497 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.568365688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.47674473 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.477051131 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.151138616 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.671598656 seconds)
  done (took 194.362223417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.469908794 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.464320012 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.469419456 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.465137229 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.467182362 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.477010006 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.466615122 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.466463139 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.473778355 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.469212378 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.466622722 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.469776069 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.471344321 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.474061799 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.479328874 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.47864262 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.470792438 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.47132344 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.470775357 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.466452442 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.469330543 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.493283563 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.469630779 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.484934963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.472020335 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.471048777 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.482456019 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.475778679 seconds)
  done (took 66.582472007 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.480792801 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.125527666 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.478265173 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.628366863 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.505172188 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.478360458 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.626404988 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.547375708 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.479785438 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.474347481 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.476306185 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.826288154 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.476906959 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.060857261 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.705887251 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.630721865 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052141441 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.499793418 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.476605076 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.476741319 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.630972439 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.49109718 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.82106985 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.111058789 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.48354091 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.107920767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.468442566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.480019203 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.475887042 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113370245 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.479190595 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.825236822 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.571215673 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.551170403 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.120944852 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.098321086 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.094168726 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.651216213 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.482242952 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.47724336 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.481011502 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.46718127 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.118698018 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.484610262 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.483081047 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.109842374 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.505843098 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.483381996 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.473552156 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.480229833 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.552966403 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.554034865 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.831092173 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.196718117 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.576573924 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.480764298 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.629804155 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.801027227 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.486358022 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.078813801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.462557312 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.14030971 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.484864716 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.469362188 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.483821081 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.477040157 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.657562262 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.636716086 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.079600643 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.504804766 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.107877703 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.68049994 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.483100243 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.482938847 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.484802235 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.143485764 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.113045783 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.680434948 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.637243191 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.71531178 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.469785064 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.484054351 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.468218955 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.573605428 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.481002391 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.144589973 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.137280055 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.506304705 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.485176879 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.487784291 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.487532105 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.69195076 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.15650122 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.579037266 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.093921023 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.870368918 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.853733837 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.490578034 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.55597431 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.504200811 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.922783446 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.4854438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.555704281 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.856524532 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.860460677 seconds)
  done (took 177.801967635 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.75678622 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.504346363 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.599028273 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.661635597 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.136125167 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.090296771 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.486099995 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.624173172 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.621515307 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.768334804 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.48634089 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.586831719 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.735466091 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.575679737 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.221862926 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.56451286 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.600741843 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.656750144 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.649657366 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.479109112 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.173959541 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.807543711 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.686306634 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.512997033 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.627700725 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.341106343 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.10866735 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.082352477 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.685325086 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.480398941 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.051122802 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.485514989 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.478730976 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.24560917 seconds)
  done (took 68.9372352 seconds)
done (took 656.033043323 seconds)
SAVING RESULT...
DONE!
