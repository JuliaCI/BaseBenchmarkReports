cset: moving following pidspec: 19995
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.387560388 seconds)
loading group "string"... done (took 0.567547914 seconds)
loading group "linalg"... done (took 7.221557424 seconds)
loading group "parallel"... done (took 0.156779728 seconds)
loading group "find"... done (took 1.142896602 seconds)
loading group "tuple"... done (took 1.796540936 seconds)
loading group "dates"... done (took 1.304195398 seconds)
loading group "micro"... done (took 0.217438598 seconds)
loading group "io"... done (took 0.951971394 seconds)
loading group "scalar"... done (took 37.463527817 seconds)
loading group "sparse"... done (took 11.828642383 seconds)
loading group "broadcast"... done (took 0.941515352 seconds)
loading group "union"... done (took 12.132965693 seconds)
loading group "simd"... done (took 4.480509669 seconds)
loading group "random"... done (took 9.029596353 seconds)
loading group "problem"... done (took 1.82677116 seconds)
loading group "array"... done (took 20.809800078 seconds)
loading group "misc"... done (took 1.680508657 seconds)
loading group "sort"... done (took 3.321793938 seconds)
loading group "collection"... done (took 17.267551858 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522376078 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125591003 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118143961 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119638809 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147337432 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112651651 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124850976 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086283022 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.817015843 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148577828 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117680692 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428640462 seconds)
done (took 5.173893153 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176780758 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082838658 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082933935 seconds)
  done (took 1.305168787 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065356701 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12320692 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066662252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066802597 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066844226 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066159163 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066642962 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066266026 seconds)
  done (took 1.662647289 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072949787 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069589072 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06657997 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068344001 seconds)
  done (took 1.419119115 seconds)
done (took 5.778165696 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.787977684 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206184231 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187991463 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411984101 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131134914 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158339659 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636516104 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336952628 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188364153 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080311709 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109550073 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329612813 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111229067 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638366262 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07608851 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090829358 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139307675 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415500365 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067786115 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082603106 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089211814 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127727082 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084973196 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074181961 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143747805 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068193496 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136678762 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080072006 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066503274 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214012456 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172702585 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658721157 seconds)
  done (took 10.283495943 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096744967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097048739 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068898575 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123241539 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09613695 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069852206 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070786859 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067478239 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086729011 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128741592 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088420664 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101954405 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065699558 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069062323 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084878115 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204057391 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080358764 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081825773 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070874647 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075644346 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105486703 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078659932 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077353765 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076914308 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128940694 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180914726 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097830971 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097265128 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066628883 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07983107 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11495404 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125391504 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065897965 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066147632 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124085009 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094441192 seconds)
  done (took 4.582658321 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.998630872 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.118658634 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143802247 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089629514 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134680244 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06494255 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108679786 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066412191 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080516952 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209599403 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.456599822 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.587874744 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111230925 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103963212 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06776411 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069033562 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067439291 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496378086 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095184603 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107552176 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081865893 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069879032 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069008444 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376730307 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067593795 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0639437 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068127382 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05751861 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125257296 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068426169 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.046342548 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070766143 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126512001 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066424892 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101243665 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08858057 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083591084 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274188615 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068930299 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065580876 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153097867 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071247404 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065973517 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083834907 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103871614 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114101484 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066808745 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06709837 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16466423 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064621452 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079108579 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.644603035 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153579712 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076359798 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06440439 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064360132 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253696554 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087930786 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069434969 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064811811 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182717154 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133037593 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067329601 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067147942 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068472594 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068825109 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.323139619 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066302282 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.867018105 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069450511 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077341001 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069934509 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069486835 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073231512 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072579117 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088059926 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066488103 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075002575 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066014353 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066017047 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067546535 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083517596 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.373513516 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067250242 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068170131 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064984192 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090058169 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097213277 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067069486 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065765018 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099991187 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068373565 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066752227 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107067716 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066322531 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083399338 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06938909 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112928375 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066030815 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187937511 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065739645 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096167248 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070792063 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098981627 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080272329 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06734743 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.417768634 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065703061 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065312227 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092595104 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064494108 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065679415 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068113023 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067018862 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067963644 seconds)
  done (took 21.112172391 seconds)
done (took 38.117309571 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234028757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078394627 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076516447 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073740768 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073826555 seconds)
  done (took 1.767035328 seconds)
done (took 2.976606693 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122956036 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101335282 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06513275 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097584362 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06411989 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102236279 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100721257 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081962106 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100488849 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064133952 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097692946 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064571816 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064488412 seconds)
  done (took 2.357218504 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083307582 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084353173 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0702135 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082932672 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063759736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083053966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081329625 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088768156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081934166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073405929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063923061 seconds)
  done (took 2.059677675 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08326413 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08408951 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07003957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08238853 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063916627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082492681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08235109 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086516774 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08168371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074919818 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063548606 seconds)
  done (took 2.053333203 seconds)
done (took 7.667536064 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07740434 seconds)
  done (took 1.267534096 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592604168 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.110234407 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081735148 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111275327 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19155486 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118711986 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272896669 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087108769 seconds)
  done (took 8.940356005 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088788408 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083748648 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069705802 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071507151 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06944698 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069102287 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068817998 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072299549 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071465437 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068602782 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07166353 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072245575 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071993012 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068513514 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07075193 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07003964 seconds)
  done (took 2.42359842 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092046922 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091155929 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073322602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074583126 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071879587 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07154808 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074948743 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0740837 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071499118 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072023975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074848927 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073430946 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07173416 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064869693 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073811886 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074737322 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070733709 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074102815 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074535227 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07493898 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074384978 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064935699 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071789863 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073813994 seconds)
  done (took 3.080707936 seconds)
done (took 16.910471465 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114104555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071335914 seconds)
  done (took 1.386073411 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080916088 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084087697 seconds)
  done (took 1.372532138 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081860816 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066212584 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089756507 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077902741 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065955842 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066056236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087714116 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065786191 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065754683 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06576612 seconds)
  done (took 1.940833769 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06753806 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077770412 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070814524 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08184415 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073229944 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064024205 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072582065 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067465699 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077294163 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063405655 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071615215 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082335001 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071351642 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083913646 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071761222 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068374369 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070843836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067066738 seconds)
  done (took 2.513975522 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065352626 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067446921 seconds)
  done (took 1.348650893 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066772802 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064148089 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067012801 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066816159 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063398624 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062457186 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063083178 seconds)
  done (took 1.665954727 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383929009 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113332078 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310713521 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07116913 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082012489 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256550774 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065811217 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070061011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070689196 seconds)
  done (took 2.680474537 seconds)
done (took 14.122174165 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080080872 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086762672 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096470312 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374450524 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091527094 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065573923 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114784701 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186909256 seconds)
done (took 2.322546325 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212542683 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.636552923 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403578121 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203518609 seconds)
  done (took 2.458317105 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344136164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08801596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059213027 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067141142 seconds)
  done (took 1.783230508 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06716246 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068284798 seconds)
  done (took 1.357820832 seconds)
done (took 7.031519549 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06649463 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06631021 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063816757 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065761068 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063735503 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063679763 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065545009 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066229984 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.066014974 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.065640368 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069366558 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063942602 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06380769 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083304475 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066121321 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066217514 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063698273 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063611097 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06476887 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063168433 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066367905 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065776802 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063420937 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063637459 seconds)
  done (took 2.837536539 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083824217 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066725223 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071199313 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071421013 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069269726 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071564252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07100035 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066631547 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071526918 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068265835 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068978552 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069156999 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068204115 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069266519 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068482577 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069983388 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071050563 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066188505 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06771142 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06934651 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070912118 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066246909 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0692809 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071208226 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069292402 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071120581 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068704812 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065658017 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072144026 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068924381 seconds)
  done (took 3.322766633 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069681045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063660044 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06406591 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070067512 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063316002 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064647649 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063111591 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063811311 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065007677 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064207755 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0646061 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063501195 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063585573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06475359 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064072913 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06749196 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078951424 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063775321 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06364112 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063686799 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067023038 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06304808 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064067345 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063724512 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063793917 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063172413 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063810902 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063537855 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064065518 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06333297 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066548824 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067448124 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063499964 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071031714 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067823783 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063430597 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068209178 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063439725 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06389226 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06360971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063161261 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064513189 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063642113 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070469636 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063630527 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065313133 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063377616 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064862056 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064908236 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.178506267 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063663078 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063536146 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065129822 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064915704 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067603679 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062893558 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064089659 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06305459 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064019854 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063154131 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063492737 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063280941 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065939921 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063794508 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078075612 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07013272 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06379334 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065818924 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063691829 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065634033 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064977383 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076671466 seconds)
  done (took 6.050417809 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090383771 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087701547 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065041036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064965818 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06239399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063537732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068991473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063691225 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065656552 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082161104 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064021687 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064740836 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065279206 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067505076 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063894464 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064926603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071965127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061416451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06361328 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067220533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06423648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069342388 seconds)
  done (took 2.745694714 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155866433 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069927626 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105229933 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074867642 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069704735 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075494564 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069506483 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069916272 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07105581 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067654334 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067825201 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070488546 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069369731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068042678 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067609377 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068183811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069469233 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06745038 seconds)
  done (took 2.612613854 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076116236 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065983783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086902683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06583284 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066497173 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068625155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070523217 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074172951 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068160602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065998394 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073928799 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068398163 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068078248 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06539283 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067997306 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065676219 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068208754 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066059432 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073347586 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070334733 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069573593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074069294 seconds)
  done (took 2.776414814 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078846383 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068463057 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080727557 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068282405 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06181623 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063921462 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069898034 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065724552 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070182582 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067288321 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065643607 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064269502 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068483583 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065822121 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068614209 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065837238 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068147082 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065840895 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06778551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06191167 seconds)
  done (took 2.596307463 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086508997 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068536152 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067922203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075490157 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06781665 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067824356 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075550881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0676759 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067871266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088978522 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067445773 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067239239 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075361499 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072151746 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067622791 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075020678 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074991722 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075201798 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068122033 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067615554 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088472452 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068461369 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075712082 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067896255 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067539862 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068179788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067662539 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073022431 seconds)
  done (took 3.263562537 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066503375 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066453938 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063635093 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064052339 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064144872 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063461254 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063641612 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063411503 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065896108 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063335905 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067015317 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066215153 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066265669 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067050479 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066032602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066136639 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065593261 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063675434 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064241277 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063250174 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065775913 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066199025 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06581739 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06395374 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063245769 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066094855 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063400637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063147349 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065702071 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063716507 seconds)
  done (took 3.191056967 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075102187 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072686247 seconds)
  done (took 1.393330751 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062777538 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080031835 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063464315 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06998988 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068984354 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066957734 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073321787 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069230736 seconds)
  done (took 1.796912117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081799571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077347374 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067283919 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078885843 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076692439 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083268298 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134755331 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066995865 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073095233 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064878886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079795609 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066082827 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072667194 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066504976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072386986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073488824 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064378498 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072331931 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068540814 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065155397 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067976032 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07573613 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068916875 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061454588 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067528658 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088295238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078110251 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065605948 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069528977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073343451 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0721722 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060292293 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066192553 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066731997 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063499637 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076246793 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081076297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068825727 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074687495 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067001741 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076038248 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061549558 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070907615 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072766033 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076867878 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06660685 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06665358 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061039392 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065202343 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068401356 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061135399 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069282266 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060386947 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073178765 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069636079 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077172159 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065375257 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067775678 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068945764 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069945646 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072569484 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068248426 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068637285 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065751179 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075636918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071188025 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074482832 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060826253 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060056957 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06370462 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075619127 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088913936 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07209303 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066619943 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066957579 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063801237 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069893069 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067183595 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071452872 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072193934 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066263266 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071290126 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074414966 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066333987 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06875044 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074006368 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064544694 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068325441 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064222263 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082779646 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065327869 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064029396 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06429393 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076636366 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070264349 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066300039 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064310239 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073815887 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06012736 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066454905 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067115886 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066923555 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076340677 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070520525 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070535631 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074110029 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072632083 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065841513 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067929248 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06187318 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066092375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065086014 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072251278 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059143508 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068127779 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065935721 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065506256 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073952842 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06357323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065077406 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072650412 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071156142 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189123386 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063383548 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069975138 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067731078 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070968528 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075706278 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065712995 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06222811 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061167501 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07018092 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06661066 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070565352 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071233568 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069882328 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060959615 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064019439 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071898421 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075293258 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067430576 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068396058 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073204302 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068338236 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065971239 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073859103 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069774635 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06614703 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073128722 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068147738 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061596659 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069705404 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06959758 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066541467 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070591698 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069909969 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068885915 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067467357 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064533314 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073604818 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067166559 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065375841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067308013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065277286 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076968741 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069500399 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061521704 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06357495 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074654527 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064603215 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066527748 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065639032 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069386935 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067673292 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064121562 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06568399 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067982894 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076152226 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070603076 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067875833 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072037287 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078330996 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066420511 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069453302 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065891492 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067773822 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067505122 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074703716 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071760773 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070667056 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068884996 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063052684 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071630567 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074105321 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065219733 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063416627 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065142096 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06971011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071621201 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070263803 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067405086 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064347467 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066925122 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069531723 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069363556 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065871137 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065768348 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07218038 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064340644 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072965281 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066916526 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076462446 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069109156 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061315378 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068806869 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065043935 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072966316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061261607 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064980836 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066033719 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067806223 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065697194 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069442625 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060509874 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073445817 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074137466 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066638529 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065872053 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066154788 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073429882 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068015206 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069951795 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06929355 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070860439 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075559028 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064590408 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069034259 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075177038 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065039052 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059483613 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07062041 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063374088 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063860114 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06425301 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063043741 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067920302 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073132766 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071948641 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188002827 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07012379 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066072309 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066417411 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06232722 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071691883 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070116204 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067557405 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07355408 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067249335 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067156518 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070594048 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066556833 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067858866 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067470027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070480984 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067857262 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068188938 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065602123 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069711299 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065267994 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064266383 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068239282 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067277416 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067674307 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072531068 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066572129 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066808452 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069374772 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067500836 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066804168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066852327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066518239 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069796932 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068041997 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06666494 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068846832 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061668044 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074007207 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067003234 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074424204 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067380457 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063108428 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072850893 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068677481 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071778791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067420179 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066864766 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067992359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065926319 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069610974 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074573415 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065424627 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078577133 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074567037 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067791539 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069030872 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067452384 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068023082 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065690611 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067647478 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06685784 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067738196 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066827413 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070816659 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069643596 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067037427 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06828251 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068134812 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066904895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067620985 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060511096 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065857339 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066044499 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066254268 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075844492 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067226055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065861689 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065746628 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067258449 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065419777 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063168709 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073546455 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074870103 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067341418 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073107578 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065403949 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068119058 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076984653 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060288955 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064325992 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064229025 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064407115 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073868817 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066568493 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075992705 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066733293 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065418238 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063400772 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067580967 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064614892 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060579016 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06405244 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069899878 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06529631 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065824293 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066075235 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068941302 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068087726 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07567009 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06590232 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067270829 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066795135 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063321479 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06500003 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065263017 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068364915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065928679 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063332422 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062431822 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064940746 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066269333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066982555 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067487985 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066505506 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072128909 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064826932 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068001056 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068071602 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059981849 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200134855 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066764539 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067219588 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066448581 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070673911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06991488 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068158197 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075695008 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066726346 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06772554 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066527467 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064483776 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066233953 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066841027 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06694012 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066089712 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067974092 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074289234 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064667041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070013408 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066932541 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066920597 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073142928 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067399628 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070556719 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072582495 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066842493 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068898361 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074832219 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070719973 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069722644 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066880437 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06970662 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072645836 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066187288 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073408771 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067601699 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068023354 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069232034 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065241824 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06598745 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06704981 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066408457 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072554723 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067236291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065821573 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066099505 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064854346 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067310224 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070016151 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074597037 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069683084 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070222093 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062301187 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064900896 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067175956 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064358069 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068998094 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069557396 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071986433 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069965159 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06801768 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0662 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076887967 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072566619 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070405085 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065042576 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070090756 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067228883 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069341965 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067570486 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067461084 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067584612 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070586184 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068334969 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065620844 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072391326 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06951694 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067005806 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067967521 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067364374 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066990385 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061158912 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066912153 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068151367 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071284568 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069035575 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066623312 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076390961 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064361161 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066263819 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069287667 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066023176 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071171614 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061039673 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067761204 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067204366 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067239892 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061780112 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066472662 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064374489 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068752332 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065364752 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061179028 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077332854 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075764688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070098225 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065985905 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06533879 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061816131 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062379287 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066014999 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067398193 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068491212 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076537761 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065513097 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065208736 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061096214 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065904525 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068407896 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069089409 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062507877 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060449163 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065558132 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068541028 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071751441 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06456752 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065166605 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068896858 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06763881 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195211613 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070634369 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064268117 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070486622 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079870267 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06773581 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068130338 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073665205 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074569901 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067694118 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062105169 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067147144 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069730425 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067260245 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067906953 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068295497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083087106 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069931895 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065705259 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065316283 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069048475 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067516855 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075060461 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068206427 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066791786 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071463617 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069406136 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075257863 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070340534 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074046845 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070020495 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070085961 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066433915 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067681339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065496246 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067116218 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067853385 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067232476 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070840524 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073856464 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066091639 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07752936 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076808237 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068373217 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062871426 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066052372 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066886543 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061890838 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068066138 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065336241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066418399 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065513266 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065619401 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06829394 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072469043 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067332715 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066905224 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067749675 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060887038 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069937223 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069055868 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067744798 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063504321 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067063301 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067765868 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071557688 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069883954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064228102 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069232932 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068392153 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067943133 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061677381 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073066343 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065693718 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068035437 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065892001 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066544947 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067360465 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070106156 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071734554 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067809606 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068888907 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070478427 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068701073 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063676437 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06387441 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071863746 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064230728 seconds)
  done (took 42.600924668 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102689787 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063978847 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062617925 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061736457 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073323235 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063126589 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062058368 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063559944 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06373489 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065371116 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062510481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061791864 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070739075 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078175317 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073415099 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066857958 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061938263 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063630253 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06234374 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063154577 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070922925 seconds)
  done (took 2.764502729 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074026033 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077681247 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076083529 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082019833 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071183153 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070864311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075340726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070558707 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078743577 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072552037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078322014 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070648609 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073164635 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072575364 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072841796 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070623195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078480641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071692394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070788703 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075609342 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070831663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075115309 seconds)
  done (took 2.948483432 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067404922 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066260562 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068019233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062042498 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065997939 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062116883 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06946794 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064401171 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069526145 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06586722 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06605906 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065254717 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068431924 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062301189 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066420653 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064303874 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108645946 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06945765 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066739799 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067106082 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06150974 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068240971 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061878527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062106128 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065318794 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069408623 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067107464 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064287804 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066209514 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064870776 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066317357 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063635423 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067617873 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066327093 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065952727 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065577505 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06534826 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066090657 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06123616 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063478991 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066401265 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061282442 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066054373 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067058189 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064170242 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063757772 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067831202 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065750232 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060842862 seconds)
  done (took 4.573370758 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079397826 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110072727 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067253027 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091851328 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079854989 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072522628 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069501012 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089949952 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063828024 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064479094 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081799116 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078820072 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066058835 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070579377 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073209944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065309708 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066755184 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06444441 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069481421 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06488009 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069350901 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072698517 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079958497 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078158699 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069219366 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064560834 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064532989 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069826277 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077042454 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069571688 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069959339 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070835941 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080121455 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066867013 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064545717 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067898581 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081096763 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065465369 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068712927 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063020426 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067357059 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069663356 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07232367 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081899003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066455961 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070414021 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065960194 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062564771 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077147264 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067494984 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072866049 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078937266 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069286176 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06544319 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069809723 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080575404 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065004454 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063946684 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068421919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076543014 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063056039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068900986 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078897 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06704151 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072876686 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078968021 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06985496 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068863792 seconds)
  done (took 6.344129493 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075941876 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095246994 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083562575 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082791859 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07537988 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075683892 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076490813 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075792396 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075596271 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080648648 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075731498 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115266002 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071326347 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077821043 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075625303 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075735748 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075526461 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07543089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075986534 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075291645 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076178092 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082748387 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076080885 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083301627 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080087087 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071378026 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075699137 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075206233 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082962391 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08363111 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079417687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075352565 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075235274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083185718 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079476422 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07539685 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065945476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075218405 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075191008 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076010458 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07091345 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082623102 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075147414 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071234483 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075325599 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07558139 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082978312 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079587061 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077710428 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079968913 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075470621 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083494768 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075579242 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075638438 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083181781 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085466731 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082884197 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083527785 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075283928 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082757863 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082610134 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085235506 seconds)
  done (took 6.223419729 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083244731 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074408359 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082460667 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061472215 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06405928 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071903813 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064396203 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064085329 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073991693 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074464308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07640891 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071794429 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075001348 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076731931 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071745615 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074438945 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07215146 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071824534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073655589 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071512962 seconds)
  done (took 2.79301331 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074696121 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082787201 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066888785 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071480827 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068801039 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07120877 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068518927 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069100519 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066783773 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069414258 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076251907 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076255613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067061343 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071714265 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075589726 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071252341 seconds)
  done (took 2.483472733 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08376476 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072880658 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080454891 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066826382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067297333 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062848993 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065926306 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06140328 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062341322 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077928875 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065549321 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076632241 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065943299 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064908307 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062902382 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071055536 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061884432 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063388035 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065365558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078212061 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06909257 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064164936 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069509763 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065520124 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068147144 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070086635 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064710177 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065695991 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063366227 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066146703 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068845699 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06953798 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063118702 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063358121 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064200487 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063242731 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065745022 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065756486 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070897094 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065418109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063573986 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067417178 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065270756 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066532725 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061605605 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065985579 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062127976 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068328564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064160976 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068137495 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065770745 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068266426 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066615289 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072374504 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068854433 seconds)
  done (took 5.03576444 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079484888 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069938761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061395213 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064047074 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069591485 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067276069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07027606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067527856 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067525758 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06472078 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067266778 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069423786 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06717354 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069758758 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067374856 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069557578 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061765541 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066717783 seconds)
  done (took 2.570138919 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071537266 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066369928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073085437 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066360847 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065707056 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068033748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061856824 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06448713 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064639918 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066617612 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065849075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068556819 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064367181 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068444568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066200169 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065891144 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068838175 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064902612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066317313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061427299 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067991414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064374786 seconds)
  done (took 2.80511569 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094153562 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084010583 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141288655 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078750755 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084844486 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072038023 seconds)
  done (took 1.899303558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09138595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100126426 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066879301 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069108963 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075679042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070581812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070087207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070402535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078217497 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076090143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06987974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078582735 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078084156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07763223 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075869921 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075868955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070273896 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07020584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066482934 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083582655 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070280776 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079150257 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070733882 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070085558 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070189418 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077641288 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078697743 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075999406 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070497871 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078841483 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075996151 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069892765 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078814223 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076033004 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069225507 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078324507 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07040004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084221674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07612253 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077553326 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069296368 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075814353 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078256331 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075348678 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078727368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070359399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074887216 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070173943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070201201 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086186168 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076063004 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077410976 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078515163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078536068 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07862229 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08588197 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075925036 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077201095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076213143 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076347249 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077904981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075478564 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0772461 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07573306 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075992406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077169268 seconds)
  done (took 6.3509795 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10406218 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067133412 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070673568 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076298276 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077837301 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070149776 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070635212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070327282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070382695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067186937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108577755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071289836 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077942747 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07765647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070953859 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070866148 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070980313 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077638097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067052537 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086345976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070473759 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077915038 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077847017 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078262338 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076564323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076964585 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070441438 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070424438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069985968 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070038881 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075055616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07034616 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078022224 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06718541 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077998399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070626277 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070473465 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075029199 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070103645 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075647908 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077207668 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083327685 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069967001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0702457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076018031 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069857553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069902598 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066741731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069822742 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067243524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075965391 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076292485 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075768621 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077699775 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070583596 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070251087 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070143398 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070332523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070259098 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076103468 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077453343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070952541 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085766954 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07057033 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070867563 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077686286 seconds)
  done (took 6.262824835 seconds)
done (took 129.461626126 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187535959 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166718696 seconds)
  done (took 1.695830412 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069197407 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099662758 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077738429 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129098 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066863858 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100851621 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099942599 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079130761 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066085417 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066418803 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066088869 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069205525 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132301636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066677436 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06641644 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069363997 seconds)
  done (took 2.679000766 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.0994505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162916798 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102946767 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06553208 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099807262 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073849826 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064817231 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075612148 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071530005 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065323878 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073582554 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070879437 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065241806 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071331157 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071577723 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073189537 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065620277 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072940379 seconds)
  done (took 2.804893854 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100471613 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092180038 seconds)
  done (took 1.552181606 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165430028 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.108427819 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148393171 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35258185 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165857388 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150106957 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147391611 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146392838 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.126548356 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14098918 seconds)
  done (took 3.007797377 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100387069 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155397425 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26779018 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118753093 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073401634 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094528413 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119429461 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078961746 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081587008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08062172 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081023015 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076106752 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099493696 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073546265 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07413397 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076540352 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10387085 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072963527 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074801111 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076549988 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10060129 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066329015 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073705149 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073254764 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077647683 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077943831 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066432149 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065949435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076813933 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075053307 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077586687 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093528855 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077530428 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10695174 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071225059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107341039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076827327 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074181391 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074924844 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074799485 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079109692 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079678828 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073635249 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076220252 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068180214 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077239497 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066146516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065891637 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078718179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068290874 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078575649 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077637747 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106465978 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067323306 seconds)
  done (took 6.014675466 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103650583 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106124793 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072081059 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115432331 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103502196 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07288148 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103118803 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096045 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104150272 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070882821 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068694729 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07097178 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082369738 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083173827 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116413781 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107758281 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074622769 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071771858 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106593772 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105739648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068957047 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097639621 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091597196 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103481627 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068167021 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070474462 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068828201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070905975 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077349201 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079929285 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070490007 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081037999 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085108194 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078944103 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068274253 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068517841 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068808185 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080063496 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080448653 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07996603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077816507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068358377 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068411414 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070528683 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070699862 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068177463 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079496085 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081653104 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079144469 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069686436 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070940236 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068330805 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07015977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080370424 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077814088 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081502029 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080255711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069064046 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068829048 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073186051 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081182732 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080311663 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079618814 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070123717 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079153586 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069248774 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081269077 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084356909 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069287715 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070226814 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068845315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070066994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069986145 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078466933 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077656446 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069862615 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0697794 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068448439 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080341672 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078604471 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06866411 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077037721 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067674428 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068625516 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069886479 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070149903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078249905 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081428915 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070336462 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068653391 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070326099 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069873935 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067595076 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078080865 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08104869 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080031048 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078640647 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069300694 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078022838 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078113669 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069521922 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078569066 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067630876 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069430081 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068720781 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076683281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07562506 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07837708 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.199510709 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070382253 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079082365 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082237912 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069338281 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078993911 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081996688 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079718514 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068215795 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081678439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070186499 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080869837 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070272047 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081157545 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069539473 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081076892 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069596629 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069231226 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069520885 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08017615 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073847312 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069286204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070777533 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070655983 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080095244 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082800088 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071653202 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079345676 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079359741 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070974953 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079886384 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070241346 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08030258 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070724443 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071190777 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068219942 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081803834 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069032557 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069622581 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06945485 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0812617 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069034727 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081113866 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078932898 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070070825 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082471591 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080102261 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07760569 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080014563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070826718 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068911877 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068791986 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069778916 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079187911 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080979884 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070658926 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069581127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078358002 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079712626 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067797869 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078688403 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078611485 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079770305 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069420036 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07042583 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080914975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081545325 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078759748 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078895065 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079538231 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068988702 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077855023 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078746511 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06882474 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084753168 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068880676 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083008431 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079421458 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077297813 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079470811 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080757752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080171838 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079974138 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08308864 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068207364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068662919 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079679773 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068489036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069521782 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078662952 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070223643 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069750639 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083393896 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069559177 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080286389 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068956306 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079506741 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068107089 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069819087 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082228817 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068470378 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069119223 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078068136 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069387459 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077294733 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079110812 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076693153 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067090619 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069306987 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209953378 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080263696 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069567532 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069775294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071147786 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078546902 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077519399 seconds)
  done (took 18.779630394 seconds)
done (took 37.898543088 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209877904 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153512753 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183067502 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119079663 seconds)
  done (took 2.126979365 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117063783 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102382079 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093239971 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065764298 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099117005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065797983 seconds)
  done (took 1.939105326 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312772802 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211269855 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188643931 seconds)
  done (took 2.106125313 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201987196 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190593411 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419058344 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263385842 seconds)
  done (took 2.577991011 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144055476 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089393057 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068152205 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084309481 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134370906 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160361236 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101539437 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125595704 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079384214 seconds)
  done (took 2.432423765 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149574994 seconds)
done (took 12.726744608 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.21594385 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134575706 seconds)
    (3/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.226154328 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111322322 seconds)
    (5/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110286864 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.229365579 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113315733 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.211320782 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083532553 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.203030347 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078217543 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077309321 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173786356 seconds)
    (14/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071995347 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074023525 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091195998 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.170695129 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.161402033 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.183297303 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072111459 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111810463 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110635035 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052090082 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093389173 seconds)
    (25/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073061146 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076131096 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230729483 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104314067 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071432757 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.228279263 seconds)
    (31/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075185865 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216178922 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09953075 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065582699 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121765913 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181329131 seconds)
    (37/309) benchmarking ("sort", Float32, false)...
    done (took 0.132686852 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069054826 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090144802 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099593063 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.128057186 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063866715 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076781577 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.198458306 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.15578271 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076315271 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073711796 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085672316 seconds)
    (49/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107324144 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088828101 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072066648 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073836237 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194458708 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06726481 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.208549542 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108341789 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.211106519 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076210618 seconds)
    (59/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063809241 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109356085 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092220757 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.1051893 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052084385 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073452157 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053205214 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.20050688 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113471152 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09410423 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173594252 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.202145115 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090003873 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07426692 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077406894 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06325663 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052540879 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073302646 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054278453 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072794832 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.066240255 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065044047 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089237093 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062590594 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092829636 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075008602 seconds)
    (85/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067019278 seconds)
    (86/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073855354 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108532353 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15326284 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062598325 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.213904995 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155900852 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073931002 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.09285772 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077196777 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052514462 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073256128 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06684495 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071460253 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078291906 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144791745 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051213714 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066866923 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112943738 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156488383 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.112996546 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073511191 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111363479 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073612443 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089039865 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065975089 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.181276267 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.161664456 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197209004 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148165877 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088846944 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093568202 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069757091 seconds)
    (118/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122133074 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081623785 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174846148 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066562037 seconds)
    (122/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070659073 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19293967 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154193921 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091221303 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068335228 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079585786 seconds)
    (128/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080743553 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.13757593 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050812431 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073611087 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068632502 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05341192 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066832313 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086672008 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051353904 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077076726 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08896803 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051560012 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111453508 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116321365 seconds)
    (142/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073350037 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072344168 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072593052 seconds)
    (145/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072416323 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062396685 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192973434 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15520505 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072306612 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092476892 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184810886 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063454263 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154527513 seconds)
    (154/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052529221 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065010253 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073410484 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050619925 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090098269 seconds)
    (159/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100408384 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161342125 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065701318 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153893761 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.352014596 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073072031 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080338236 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072154961 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054496207 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080277962 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 0.14213828 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156581166 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088921842 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112586943 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065234453 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066802661 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066389708 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113426936 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051484128 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050863658 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 0.130657533 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076214949 seconds)
    (181/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051860233 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05205263 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050449475 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111062797 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071826485 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051753682 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087355888 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073989743 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053457522 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051245451 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072410391 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065556711 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062135269 seconds)
    (194/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052955987 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07645949 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096825061 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065299329 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066788851 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05128669 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063724867 seconds)
    (201/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080532493 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050170339 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.222148377 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071112915 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052464866 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074583526 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13278058 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052200948 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099694232 seconds)
    (210/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075696417 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052056703 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053437356 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.088994719 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051674201 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074450443 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145157713 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066449702 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093688092 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092002292 seconds)
    (220/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051294129 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062156754 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071982109 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075524521 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07692203 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071570688 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090947641 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102547174 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07532354 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.080428186 seconds)
    (230/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052991185 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052295868 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184053476 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064588917 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06571002 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073985012 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067645955 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067574571 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05107706 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140934058 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.206204124 seconds)
    (241/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068623952 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052227477 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142451581 seconds)
    (244/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08253418 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149836026 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07343293 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052204369 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05280296 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051929829 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.0652803 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066067928 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068806693 seconds)
    (253/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051432303 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065122596 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066934906 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072808679 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155681816 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065817354 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050688539 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051926438 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177484347 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067096698 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065645878 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066402169 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139528972 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066002046 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072093292 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073745246 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09499026 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052206842 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052592086 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068490881 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07355755 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064246878 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051730212 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067932242 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061123834 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176057725 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051705215 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072355141 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050986305 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05073876 seconds)
    (283/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051754156 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065383327 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073143676 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111424154 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088704631 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064241954 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18237508 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064588396 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050828368 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065690368 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07310363 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050928043 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072267764 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051436415 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051113272 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071577727 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065550539 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125076193 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07090841 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067430437 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079442049 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071465957 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090052696 seconds)
    (306/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189987675 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050976404 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064134743 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050849364 seconds)
  done (took 31.02742104 seconds)
done (took 32.431404983 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082858143 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093185451 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074284283 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094201897 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080850091 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076167365 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072928769 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07805193 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080003391 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081340988 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078163976 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054200625 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073984252 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074401152 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074614585 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091405685 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078087743 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073325588 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07284429 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064577002 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072997725 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065511707 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067535202 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054307897 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078275022 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072222871 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072309664 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073972284 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065689044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066303578 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06910411 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073847168 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065448199 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078126082 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072570696 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073359194 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075071063 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076736642 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067181073 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066063115 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074813213 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065814204 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073135 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074276815 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072349985 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071564274 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073226712 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078264042 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0910469 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068167321 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07508495 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076654456 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075968034 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072849522 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069688414 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072908736 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070870013 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09203463 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073839254 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06791538 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074416494 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074373529 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07146372 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073392208 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073376769 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075164401 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075758915 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071046219 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075154028 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071555927 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065150411 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073136528 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068943327 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.0658805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076150113 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077870764 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064286129 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071937006 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074014155 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071316767 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064606228 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067181724 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067077993 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072710729 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067339715 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053906681 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069496119 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071831015 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064343407 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073278182 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072095756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072405712 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067096757 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075904651 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064565366 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070762973 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065335348 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065073143 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066621416 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069612269 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06504138 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067139769 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074569155 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066790008 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.0717627 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078984102 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065756444 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071930244 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064223841 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06504882 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079808137 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075709769 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06547105 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067341649 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064530957 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073061839 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064418378 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065199772 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065095939 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065158444 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070725535 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064923901 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067071156 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072181323 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077701136 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065372971 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067643391 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06665453 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063997047 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070387486 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064433517 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064708191 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065668948 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060997835 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065978887 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064517122 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072157714 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066745309 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206962068 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067645368 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074485108 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071046598 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072237001 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071070235 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064429464 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058956107 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068953412 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06823403 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06783919 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066185996 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067207624 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065329116 seconds)
done (took 12.450877415 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06688014 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139782366 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097359777 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096080952 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086627482 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066847497 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076270837 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100945295 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067515385 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10179493 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087715185 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085708475 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113889591 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064451854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065912507 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070084742 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067416997 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082146468 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101205662 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087487102 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115164806 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065343077 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093540075 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089773326 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088327502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094444725 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069286532 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070479034 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069939638 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103497487 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088262865 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070314815 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066717741 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098119797 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093616095 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084109397 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066167128 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083016849 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066289303 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066330383 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067628895 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098900724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080744733 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081515818 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070204126 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069822745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066770731 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084191437 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089960407 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079144932 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086709451 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101955867 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068968225 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065803232 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064532985 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086658285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065557852 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069252522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06596959 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069092217 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066135822 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069529965 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081281246 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081141974 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07008949 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079999325 seconds)
  done (took 6.81974495 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08415691 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091584697 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083360131 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08384558 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06613921 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066216121 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066256129 seconds)
  done (took 2.044589266 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067054981 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08915868 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089640784 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089787311 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081449376 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08781281 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076070392 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066507323 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08792693 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067599712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087930281 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100475398 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07024009 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074107025 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090764337 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066722756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091034852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066595317 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06990376 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090980231 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06867992 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095483032 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070026284 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066968205 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08074383 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067228309 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113663078 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071366515 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068074802 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069738214 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065002517 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107576585 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080592581 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074462362 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067226 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081688442 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081398695 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065008479 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083433089 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075808616 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081251235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067068135 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06859972 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064761687 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071133527 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078915878 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068232872 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067055526 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069000589 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086561187 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067394804 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07991565 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069425008 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072143793 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068225329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073197175 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076726126 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067350279 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08627995 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067726584 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083802956 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083137559 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080295246 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083203827 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069291618 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080536994 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080851607 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069061061 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068249865 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069728496 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082977648 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064703523 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068477835 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077108931 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06897269 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089992004 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089870173 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068558247 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080569896 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06748176 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067093902 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067153167 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090355548 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073029947 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066731759 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071214168 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070117725 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065159542 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065957365 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070966463 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064652307 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068964474 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070602012 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069951753 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0700979 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08441933 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069755058 seconds)
  done (took 8.842141635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068721705 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068172118 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069972432 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068307544 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068065065 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068298721 seconds)
  done (took 1.933884974 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093226054 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06895166 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079716937 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072082959 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105410095 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087672492 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.0876161 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078307546 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084283273 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079785513 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087274116 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089431285 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092316266 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072895686 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08735013 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072311319 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087388053 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074982769 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078889213 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072507387 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086708862 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072007451 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072906076 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082273525 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076014439 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07216531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067564256 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079095747 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078814365 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078562429 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072356826 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076088338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071166952 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078082583 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087577734 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070921967 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07139537 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07769282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072288774 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076126298 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088546312 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072755108 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074148247 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077681428 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078279996 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070816104 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077702314 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075098502 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086323635 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077033542 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07671557 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071105395 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075597149 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077778046 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070545113 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077991003 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077428942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08728033 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072208715 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070832551 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068752083 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076506332 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077980953 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07618039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078784601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077265671 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071291271 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072297899 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072654211 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071756969 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077458909 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068989216 seconds)
  done (took 7.099829565 seconds)
done (took 28.227355675 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534291837 seconds)
  done (took 2.025588795 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613698478 seconds)
  done (took 2.128453545 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.966031065 seconds)
  done (took 8.4785493 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401022663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524620292 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721142224 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131917633 seconds)
  done (took 3.330147892 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.697051027 seconds)
  done (took 2.218194958 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215327799 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202230172 seconds)
  done (took 1.948350179 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37499524 seconds)
  done (took 1.88968671 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.125198898 seconds)
  done (took 2.641201579 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258016165 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17531846 seconds)
  done (took 1.952516894 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474426299 seconds)
  done (took 1.990526394 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.867471927 seconds)
  done (took 6.384879536 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213321526 seconds)
  done (took 1.777432447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241296869 seconds)
  done (took 1.764706204 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.717824133 seconds)
  done (took 3.241268753 seconds)
done (took 43.289366915 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080726811 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081818785 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081850768 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078913326 seconds)
  done (took 1.834515518 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07733629 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073419411 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077725797 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073026281 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077242988 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073822795 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075063795 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076858059 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073763419 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074006023 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073348561 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07324745 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076234352 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074549788 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07209732 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075733409 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076997843 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073302643 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076445599 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073730907 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070696383 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075185282 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076224125 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072603505 seconds)
  done (took 3.318554102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078239296 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074842508 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075784191 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072759698 seconds)
  done (took 1.832641433 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078416477 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095458605 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090409976 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078925787 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093864668 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087656856 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069363235 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069373915 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071244555 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078083473 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068714558 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09684588 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088867301 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07886267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080371778 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06630475 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068503149 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088116963 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0787004 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078829461 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070501768 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078228157 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068465615 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089714372 seconds)
  done (took 3.4415433 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086574324 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105569546 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082282542 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090061795 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091678025 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06643036 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088298479 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092259963 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127078306 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065528455 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070989066 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065629655 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073369628 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065598547 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082150712 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107908769 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112848902 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069380011 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097750203 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065892251 seconds)
  done (took 3.247421811 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0743148 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070701818 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067013016 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070381997 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078375564 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073499722 seconds)
  done (took 1.973221008 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069411641 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068850551 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067829655 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067915283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073191072 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.0672643 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06704345 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068260634 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068900682 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068231228 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067842817 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066467066 seconds)
  done (took 2.35513733 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202463319 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068776541 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069942406 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066149409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07114944 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067036017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081985842 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068747642 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092307397 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067191669 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067514973 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068920092 seconds)
  done (took 2.527685094 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208064253 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076655857 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240737514 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151076425 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111218114 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116296981 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112855534 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114610011 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142482281 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101066444 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169156566 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16755666 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107793006 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138339132 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089299542 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100862405 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154402911 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163394221 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105966024 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168274487 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146523932 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12749254 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154364528 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102351457 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10669773 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122747194 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071925708 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080815627 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171003033 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133510692 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144344894 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111512451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092558779 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178089635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172525632 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141851798 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147715093 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084849142 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105774825 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135194817 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200853658 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088565866 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162277115 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109317469 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220052031 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136256843 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121482404 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121046943 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106920028 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09095854 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146724183 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185827914 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138792105 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088307914 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125008326 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115254681 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114953864 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115257515 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184181053 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16341118 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129561001 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071868542 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110030076 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155038082 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135118193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109097818 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125357248 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092948588 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13600682 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157112362 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121596855 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146390864 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117716925 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089447873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12059761 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141130258 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128341069 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161949103 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12583065 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073852314 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124660869 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10266687 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081371119 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14694565 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075800811 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177470808 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100052727 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109858181 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125762158 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110296189 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110019428 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159434219 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145093218 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103087653 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065171741 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248357417 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122047421 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148012645 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087817115 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110289729 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119043345 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07797558 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138581561 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075834344 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123963876 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078337369 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128824065 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13014998 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078189987 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123254616 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10476089 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102295849 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13248813 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161350587 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088448116 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082950117 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172732809 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122666851 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104864577 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145074205 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157004649 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102582749 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101992504 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149836367 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180889923 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089944403 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164903289 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107262574 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084258986 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088657533 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124396802 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112743384 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124801386 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082475593 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118771432 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170182984 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075753437 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096679659 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135142744 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079802361 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081781869 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106305703 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105502658 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096100894 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100598741 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103505552 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137152917 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124131662 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106263886 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124345468 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09894927 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316670223 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089606968 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103620886 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105756093 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071155796 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135881346 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159523088 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0812007 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166177634 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123991417 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117118037 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120119932 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084246963 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141434411 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080758766 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070749625 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146554599 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111738689 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111883956 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154276821 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116098749 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126783808 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119896948 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134592177 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132987124 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131772353 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106498134 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089785747 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113940398 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126917346 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073518726 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090969474 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080094509 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10516616 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096321537 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083572801 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142316098 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124965719 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110148097 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113356857 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097193925 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149574751 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076798891 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128957199 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120600852 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096267242 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15426223 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154145856 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132167948 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099422372 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137685397 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070386486 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074845726 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088916722 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123074862 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082873691 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083471618 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260568238 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150931928 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132010993 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138334209 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126017185 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121566864 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158327633 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070660509 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118078466 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148471164 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122822081 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105862669 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091012585 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100251181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145970572 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108745982 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183559073 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117896229 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124251474 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155046913 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101878791 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079836919 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104302356 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137708313 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104958613 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144546852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100234681 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088591431 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110485395 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07483715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099463283 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127610957 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119264847 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135547001 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11634574 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13337094 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077911087 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116818003 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122314586 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12280472 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064984662 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121409573 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163331423 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09554041 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119279369 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154591339 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079751422 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134609681 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175969859 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144922473 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085283721 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254428928 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123307868 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129650901 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122206931 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144667391 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10731274 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139101312 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111237601 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087750088 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089350912 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098320254 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106384635 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096698898 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107359399 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114724148 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096405377 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133278526 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104755378 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111670268 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118733342 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098334082 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091168916 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097078887 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177844683 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119758359 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172089948 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10024919 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146198422 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165819272 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075782008 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079570393 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07910335 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141577009 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084636012 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131292913 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107692193 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118284942 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124874641 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146139413 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096389401 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069242592 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109699042 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133377213 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125257538 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098989055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104343793 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166023281 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102699507 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08010342 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114729471 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116693214 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103453779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172933584 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0619986 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106539365 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077092606 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080976758 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128230794 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296006571 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082523809 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10467971 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120381322 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112773293 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130915745 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102057252 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109689214 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127719058 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151966934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129532557 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090991455 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112799628 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129321168 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157837627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105859818 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097181626 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17471048 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153591874 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161617281 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088005652 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115238756 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115622137 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109683359 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139947927 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084682061 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165661052 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083124887 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137334062 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104211801 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089710248 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129934921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10905818 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089049599 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148751197 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118619312 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083465258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077870577 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119198468 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120623511 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10677975 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076311093 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140307352 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074281064 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133340688 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160877806 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081428529 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108511658 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09727017 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079634058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106812972 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10221943 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087950918 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099125721 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320387733 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08890193 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152881806 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136264975 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115391541 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138926122 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103313183 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640779251 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078633353 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154262862 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117478615 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176182356 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102010926 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11931173 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111182076 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124221842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14667556 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105051672 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182707013 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134857988 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117051341 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080873484 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103419161 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105456494 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08898706 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108226809 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114527026 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115908039 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093065787 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116353398 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125230555 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082570103 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096215441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157740513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117459705 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144834096 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141219488 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085901914 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119326844 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139294427 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080783917 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121636473 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152595466 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106670507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10029361 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080730306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100873972 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159257261 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073939051 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15836746 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118505808 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254099537 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116358995 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112772306 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132690385 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10779786 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122904744 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094505817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111129323 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115910326 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082064038 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077924894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105889733 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113045054 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100902741 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09777877 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100102335 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152869122 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073012751 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099748669 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116004125 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144698503 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175128234 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089161008 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083059092 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119191272 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11503174 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113155351 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122310463 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079689089 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08185726 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080960628 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078641342 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109247449 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114184338 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114873567 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112073507 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163733532 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083694137 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232150977 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096819362 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105916633 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070961194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078682063 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096913575 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098896802 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108182761 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110464599 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160840708 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096755175 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090808561 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0922851 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074703439 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083959211 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13058929 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110761941 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118965727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098721004 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062629574 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107543511 seconds)
  done (took 59.411061043 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110303389 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083724335 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095250306 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145807936 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124104434 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203183031 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155114771 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189661462 seconds)
  done (took 2.772155716 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069228658 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096774244 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103715363 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08479974 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068080945 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069383743 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233781899 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082386722 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067656749 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099034294 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080062885 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069548464 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430017848 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066772915 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068547666 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061944009 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067699873 seconds)
  done (took 3.45755445 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391088176 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611300648 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353484725 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072815237 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.479558708 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088251041 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.154749378 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128925608 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074953872 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539063068 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412082215 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125043329 seconds)
  done (took 18.078916186 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076103974 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069575493 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084658071 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084326401 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073491607 seconds)
  done (took 2.03217883 seconds)
done (took 107.859768908 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081298556 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.613236793 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05384285 seconds)
  done (took 2.338880457 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083426401 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086503417 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085802337 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084830523 seconds)
  done (took 1.99222721 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075237966 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078496621 seconds)
  done (took 1.799452294 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233272416 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165197677 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096823422 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0836956 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08073181 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080944086 seconds)
  done (took 1.893002788 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073598947 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075873345 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073808683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077138874 seconds)
  done (took 1.943369738 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076604285 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052554128 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054930276 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058062716 seconds)
  done (took 1.886165461 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088122385 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080213945 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080048611 seconds)
  done (took 1.893254423 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103390677 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087109746 seconds)
  done (took 1.835543651 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08270734 seconds)
  done (took 1.728274096 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101138447 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102442723 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133152662 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112453074 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141315717 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110509362 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085481796 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086935712 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077266643 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087743033 seconds)
  done (took 2.683229984 seconds)
done (took 22.211236398 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079887041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368551449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361193072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090795195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671088238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357131421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995775887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093665684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115911284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068397679 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086548653 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649327798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988303569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324619001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971924639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415409157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.662795965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069241732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06866123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068240598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980381474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068049714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068522472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069124139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650424434 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373274767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069322959 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414371773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068688748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07090629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35642717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068977285 seconds)
  done (took 16.398072846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071201341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121902461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074949083 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086103486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070733778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070415229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072459958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069450626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122842867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06865702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086136769 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068592605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.090230622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069620084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088589685 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068513704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069928327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069641849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068822757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070277535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088295494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069427098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069089792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069393912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069511696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081684129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069292591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068622874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069405309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071026802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071522625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06959202 seconds)
  done (took 4.103537524 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120749643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129292082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075514336 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106651321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115161742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070805096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149575274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094644289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131226474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069090329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086140123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068949884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104106168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070063851 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08910616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069206994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070103282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069848661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068725409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068885577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088896527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068558118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069364667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069844026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069046713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082746718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069599235 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06906582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0688746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070352998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072482718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069927438 seconds)
  done (took 4.356006672 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074278724 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076357567 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084476949 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085539086 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070286356 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073266262 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07422356 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07031329 seconds)
  done (took 2.275308732 seconds)
done (took 28.783259675 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079787929 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06935043 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072844843 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083377086 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073773692 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079156143 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067449736 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076734852 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073192007 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073987105 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07643246 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068929185 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072109421 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068620942 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074585368 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068930494 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080257206 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073164654 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079745859 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080070058 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070819221 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073801006 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076342333 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08019074 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08010087 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081116894 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079143871 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073643742 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069590656 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072036387 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077609141 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084844465 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069600936 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080361468 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068317026 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068904939 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072240413 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068259816 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080154034 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076937759 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069783502 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077419333 seconds)
  done (took 4.788755296 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089693376 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093436235 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085804637 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06168588 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067589673 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066466621 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090382148 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061073813 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05989999 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089030979 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056633352 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060716947 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067238669 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054236642 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060880533 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05736072 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062637681 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055812289 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061354879 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060370092 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089982372 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054145733 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078401622 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06402143 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056863256 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061958232 seconds)
  done (took 3.440559952 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075248578 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086988979 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092005574 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133010728 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107410269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080861537 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080437873 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096891506 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089610122 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067467931 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071586084 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093764086 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090614999 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074784585 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068175263 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087305809 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084228714 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06958558 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074852979 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096170131 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088126149 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087132889 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097029612 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084600057 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068055778 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071082014 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072557352 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082822373 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073579164 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078586479 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072759244 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072058297 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071359581 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080771182 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072288656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070457093 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093800292 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078703169 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080605733 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069658889 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077616044 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069974727 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094411303 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12885321 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068368897 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075361104 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073152545 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079701035 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069951429 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090604785 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081109185 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068650285 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071870438 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067886257 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068915795 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082415399 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070759054 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071180258 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078273566 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074826298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094926187 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073695629 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085996427 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068895764 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077171579 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068446666 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069998924 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067893206 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097604697 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070899969 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113600537 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07031249 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070230291 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0780586 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076634498 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075388309 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070271199 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08551829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080230087 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072527199 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078118784 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072108345 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071745563 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094153798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071292878 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072110865 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070365542 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074803005 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072121172 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070173709 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083010316 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068909728 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07224884 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087097577 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068765344 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070025681 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07524585 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073245017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068410177 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080450475 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07366584 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070028017 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078750686 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068753829 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071827389 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081888979 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074919082 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067468743 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073614526 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074862364 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069301631 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070217334 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071510869 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070502898 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.0776206 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076206497 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073533523 seconds)
  done (took 10.83521701 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16712257 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159723121 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071489979 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.161348983 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077232341 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081151368 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152863411 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096315648 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0687857 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069703055 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069437965 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111978086 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108043856 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116923049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080366443 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068863635 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086173117 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116545832 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154718365 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148358739 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086621231 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078195863 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071076551 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070435619 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071246242 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079649458 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086571473 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07792903 seconds)
  done (took 4.48940524 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082303231 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106807225 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076360956 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092059771 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091306609 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068756389 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071278954 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070955094 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082702976 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079385144 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068870106 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074087412 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076344167 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072209455 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069555235 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075457073 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075763241 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070683404 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072248294 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074584892 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079089669 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092816061 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072619198 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068169229 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073796225 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068043992 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064695445 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085490616 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068919226 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096526539 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066804456 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073901328 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083640043 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069232495 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06854922 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068774955 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068187036 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069504512 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070435679 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067390368 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067173822 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057897517 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067849766 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080741202 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075979208 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057319124 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074394855 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074344819 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074484469 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066127965 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071950903 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071581508 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072232673 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076966168 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072964738 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074278433 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07040845 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075303551 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078090698 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069359722 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066026004 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06694205 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073459457 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066814735 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07764526 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.0738406 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067480028 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068367609 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071044516 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075950126 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068769206 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072981057 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066461031 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071311842 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073167855 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071093325 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069970831 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067096251 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068652766 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069225867 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056753325 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068651128 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053770507 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072214176 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066689521 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06708819 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069197653 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073329233 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081032867 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070753447 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074983959 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070006202 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068085522 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071991947 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061129608 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071421446 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084843041 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083588492 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069064316 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066505288 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082218661 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073367601 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06763841 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05679208 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074159244 seconds)
  done (took 9.311908891 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091292107 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070658161 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086103242 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093008009 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089084234 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07703348 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078441679 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070311004 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084274052 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075392167 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077681219 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06914912 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07934729 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078846241 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071609499 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079297248 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073136887 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086267437 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084020424 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069245773 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077994223 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08213203 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092067462 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083860278 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082613979 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083745027 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092103416 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079631482 seconds)
  done (took 3.969334181 seconds)
done (took 38.493021055 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.754076559 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.918950446 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.743038775 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.113135721 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.057322572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.808848553 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.880124886 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.737801875 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.968445068 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.776925762 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.969026593 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.855186667 seconds)
done (took 65.263421978 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.762830227 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885216883 seconds)
    (2/2) benchmarking "String"...
    done (took 1.984061857 seconds)
  done (took 5.54938175 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.056555073 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.309802459 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.991352067 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.736919529 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.74365869 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.079753728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.539512064 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.249282288 seconds)
  done (took 30.334117734 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.804470399 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.968784523 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.40444699 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.433458983 seconds)
  done (took 15.337012798 seconds)
done (took 62.806876477 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.748533068 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.762053316 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.749747921 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.723837273 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.799151419 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.748638676 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.126337252 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.980830935 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738410206 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.730954001 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.742179641 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.179845568 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.750790194 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.117704798 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.738095357 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.747127793 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.757142187 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.301466289 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.899049117 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.752613413 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.759742138 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.753828302 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.740230545 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.745769708 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.788099753 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.740489248 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.176777414 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.753245005 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.559558006 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.740507979 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.796571667 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.315612966 seconds)
  done (took 204.644708389 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.740076875 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.700873521 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.795580312 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.771928601 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.271355487 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.925654992 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.862365821 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.28427291 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.745055361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.762437239 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.912218386 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.743911682 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.929530904 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.759491585 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.772874045 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.841147394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.88661024 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.957192877 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.777827976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.878019674 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.742301638 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.757144998 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.721777751 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.909167812 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.768706563 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.847146752 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.76722527 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.769007667 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.928136384 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.874661826 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.773478488 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.791134739 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.949290495 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614099999 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76017828 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.754028213 seconds)
  done (took 168.728572501 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.120756009 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.112910132 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.741548649 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.741172803 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741286551 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.746569918 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741855253 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865586892 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868891259 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.340814471 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.767389547 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.79507506 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.557551622 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.744243719 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810615697 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756597578 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743470825 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.758561416 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.77026161 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743470738 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744051577 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871059094 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.755396469 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.319329236 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751870166 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.743772082 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748955662 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.114144441 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744053678 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750208676 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.791249793 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.991807605 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.745918231 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746284927 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627861215 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828038793 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.74419125 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.745285364 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749254158 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.744013459 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.963337926 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744950796 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.743881422 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.746775981 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912944593 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.744080699 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.869842459 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743728706 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.238885265 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.745503024 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745477707 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.516656987 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.410601954 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.745491433 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.745154531 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.745309039 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.747487582 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.74594145 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744964211 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.751366584 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.547230872 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.817717957 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.747906004 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.748628351 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753577234 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.746653939 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.801343681 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.747764236 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.132842561 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.805029119 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.99105406 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869178676 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748001417 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812997599 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842249951 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.745764157 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.74610198 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746622622 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.746071804 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.828155662 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.746750215 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.866575869 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754116392 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.748197064 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797213835 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.818492567 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.750829568 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.645978594 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.749912798 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.7516193 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.048081333 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813677905 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.746038394 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.746032473 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745935378 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.868338999 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869842312 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525117384 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.748372356 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.770577948 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.750445559 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.885583914 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747996543 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.917749765 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.748980022 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829864683 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752792465 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.749817937 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.74890325 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.748040984 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.747394323 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.747669062 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.780089465 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.747790881 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.80796171 seconds)
  done (took 398.801083457 seconds)
done (took 776.029859391 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.420699023 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.379633312 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.491362541 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.399791408 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.374011638 seconds)
  done (took 13.754143247 seconds)
done (took 15.443133086 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.835339838 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.840988507 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.77272718 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.838481419 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769304756 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.837672558 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.821263696 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.774473212 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805450644 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.774678121 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80806927 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.77523335 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761568714 seconds)
  done (took 25.104698058 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.976488484 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978727304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.821069444 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979037394 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795483812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.974095084 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.926028188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.898575665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.903090462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766035209 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763436112 seconds)
  done (took 22.472905497 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985103641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9843917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.826003637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.995297077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79941959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.990582447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.911091619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.902980578 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900521327 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765205169 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764689482 seconds)
  done (took 22.516417224 seconds)
done (took 71.783429514 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.75821416 seconds)
  done (took 3.44903728 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783486118 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.941536461 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.765229135 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.762665886 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.759101181 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.760540701 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.762394767 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.758932766 seconds)
  done (took 15.986754749 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.755561145 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758644328 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.755830552 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.758500775 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.755799934 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.755579186 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.756301522 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.75843224 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.758521139 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.755678766 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.757707624 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.759278369 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.758476663 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.755775785 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.757722327 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.755769171 seconds)
  done (took 29.806602001 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.757303184 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.75614528 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.756209176 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.756489209 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.755590605 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.756993122 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.757696516 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.756040991 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.756106682 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.756949843 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.75851642 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.757681779 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.757132057 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.756420626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756820389 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.756958009 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757577973 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.757387786 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.762366262 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.757065728 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.75824618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.757533359 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.758950982 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.75772309 seconds)
  done (took 43.871192028 seconds)
done (took 94.804634263 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.641773508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.356775634 seconds)
  done (took 8.693222157 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.762387299 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.760145565 seconds)
  done (took 5.258641891 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.760318847 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.760152234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.760451665 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760324665 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.760939039 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.761194661 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.760559598 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.761851035 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.761309221 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.76133184 seconds)
  done (took 19.303068961 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.761306675 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.762630829 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.758441627 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.7609719 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.761772943 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.758282714 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.76094029 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.760667087 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.761328962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.759153758 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.761076102 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.75904401 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.761837905 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759110481 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.76184174 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.759259816 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.759402196 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.760435561 seconds)
  done (took 33.382849557 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.761139975 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.762251915 seconds)
  done (took 5.22014023 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759450066 seconds)
    (2/7) benchmarking "second"...
    done (took 1.759963865 seconds)
    (3/7) benchmarking "month"...
    done (took 1.759216583 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759386768 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.760449756 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759498937 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.760098218 seconds)
  done (took 14.014572386 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.763523833 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.933700331 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.995760864 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.393814532 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.765077103 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.766034745 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.678410497 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.765837547 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.768190076 seconds)
  done (took 19.526956923 seconds)
done (took 107.092624477 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.607812209 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.760471282 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.103051049 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.815946569 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.810823818 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.1029952 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.793028482 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.059022266 seconds)
done (took 42.750029834 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.835819364 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.319934975 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.348666438 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.247856475 seconds)
  done (took 12.614553971 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742556416 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.290263314 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.794984657 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.343955591 seconds)
  done (took 19.890407032 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.127853939 seconds)
    (2/2) benchmarking "read"...
    done (took 2.104337429 seconds)
  done (took 5.934237153 seconds)
done (took 46.973680394 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764715686 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.76463118 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.76107662 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.764087416 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.761002453 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.761612568 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.764397335 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.763991326 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.76566287 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.764350219 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765230894 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761774347 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762186171 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.761891945 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765093784 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.765852096 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.761990506 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76206049 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.763092546 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761963785 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.764472025 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765487902 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.763740649 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.762226484 seconds)
  done (took 44.021195952 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.765427659 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.763408647 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.766356938 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.765806194 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762678508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.765811313 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.764820392 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.762965021 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.766807015 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.765199922 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76323779 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.763129747 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.765993398 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.76349266 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765530024 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.763591861 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.766081015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764344675 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765518316 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.764832849 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.766366686 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764160853 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.764329351 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767688329 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.763852354 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763901721 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.766811022 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.765406605 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766704186 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.764282127 seconds)
  done (took 54.648547967 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.771605889 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.775594109 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.766782898 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.767157924 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.766807878 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.768014367 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.768412605 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.767106012 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.76693713 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.766769272 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.767461652 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.7672314 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.76732384 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.767755072 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.767983149 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.76757781 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.767519276 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.766927133 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.767492959 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.768295309 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.768578777 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.767679661 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.7683844 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.768325447 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.767546637 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76938716 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.768172241 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.768485351 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.768522868 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.767940243 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.768288241 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.76836897 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.767958273 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.767974807 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.770015702 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.771452643 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.775950945 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.779923181 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.771253493 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.775925861 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.773584577 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.77225692 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.771502878 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.77044989 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.770154245 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.769488105 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.770461414 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.770102283 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.769829055 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.76923856 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768791445 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768455847 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768371889 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.769350379 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.768985577 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.769679698 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.770479354 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.769751293 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.770209676 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.770082646 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.769060406 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.770224101 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.770130769 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.769856103 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.770601925 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.770054835 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.769832831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.770180341 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.770307747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.770615909 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.770564909 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.770982625 seconds)
  done (took 129.108026814 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.770279445 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768472972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.767851827 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.768472219 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767806804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.770689108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.769024708 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770507116 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768056063 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.771063925 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770920717 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.769724191 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768276575 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772013666 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771277243 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.768712669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.772810318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769013039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.771382143 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.771339992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771407483 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.76844771 seconds)
  done (took 40.642320163 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77264329 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771246046 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769891582 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772225922 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.769438686 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772646484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.772183804 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773279847 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77250399 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769291754 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769491995 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772061021 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.770123613 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770183198 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769760959 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770310524 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772924817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769800967 seconds)
  done (took 33.585669138 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.770459243 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.770208959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.773439698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769778254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.770803187 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773038115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771003224 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.772680697 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.773086609 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.770582057 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.774585842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772739364 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773269528 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770749085 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773425455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770991057 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.775071311 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769972893 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774538421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770778395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770673936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774305912 seconds)
  done (took 40.693418478 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773975414 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773428332 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.771466455 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772014203 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771485978 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.77359071 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.773929264 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.770505887 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.773027124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773912302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770904137 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.7741305 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.772087123 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772821212 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.772162433 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772488534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774973747 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77303233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774202208 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772062013 seconds)
  done (took 37.163554832 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77747407 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776053342 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.775619344 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776074339 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776228262 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.775759377 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776421845 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.776531714 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777304203 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.777265607 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775968779 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.775715817 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777024716 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77557039 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776362036 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776042824 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775648202 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776350553 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.77702618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776221093 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.775784073 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777023009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776549207 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776807876 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.777550584 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77774853 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77752396 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777747437 seconds)
  done (took 51.452845858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776123028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776682815 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.773271593 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.773644575 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.774225383 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.775608094 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.774304201 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.77402191 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.777389349 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774209752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.777283966 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.776415549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777228374 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.777062055 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777236859 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.776723496 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776845139 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.775323616 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774469081 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774682809 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.777266396 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777260647 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.778063429 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774700237 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774183379 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.777582176 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775155827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775318251 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777312866 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775311517 seconds)
  done (took 54.985196969 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.795761032 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796266145 seconds)
  done (took 5.303334973 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.775386123 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777746026 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.779015864 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776062287 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.77609309 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.779086694 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777825613 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776169188 seconds)
  done (took 15.929422866 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.77820345 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.778313667 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.778425396 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.777737235 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.779252578 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.779461093 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786045173 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.778843439 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.780619727 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.780449161 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.78689027 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.787095328 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.78150207 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779935697 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.779411213 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780732198 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.779663763 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.779667698 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.779526132 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.779243571 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780368566 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782354483 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781840699 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776849352 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.781681605 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.79004728 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.784202553 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.780270413 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780011721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.783268914 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779704195 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776878186 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.7803757 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.780735579 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.780115223 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.780749927 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788711029 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781170702 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.78744834 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782332962 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779875286 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.7784584 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.78247533 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.782602961 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782667003 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.782194995 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.781298238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.7792606 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.780917196 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.785155789 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.786177152 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780859122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.77836542 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785361787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.783340382 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.787018412 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.782972308 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.785303942 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.79089177 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.791991633 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.795345824 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.789392254 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.784262666 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.78321906 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792008022 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.80640159 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787553716 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778679278 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.778739116 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.781443581 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.78797402 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796139125 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.79317223 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.782826039 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781967428 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.781669111 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783633208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781931523 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789589585 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.785542274 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.78317759 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783558536 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792835648 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806565134 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.782685534 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.783990648 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.783935002 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.783938728 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.784550388 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793700987 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.785252256 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.783071089 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.783941845 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.783218078 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.78550638 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.783755476 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.783298878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785352478 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.781170164 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.784547474 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78438347 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787412592 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.793713008 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784432556 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784268602 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.790039502 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.784003086 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784631771 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.791716226 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.784049516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785253261 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.785294649 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.791221908 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.780959509 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788199971 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.793719928 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.784615023 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.786315873 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.784608069 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.784460432 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79450797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.811808131 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.785003403 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.78630783 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.790870813 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.797154686 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785839861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.790100146 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.785330252 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.782953886 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.782278018 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.786862723 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.786507622 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.786771864 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786224155 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786978543 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78333735 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785090291 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.786270895 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.787208428 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.787198718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.786725807 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.787215092 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.787951223 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.786407529 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.787753284 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.791410296 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.787613447 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.787948609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.787961981 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.783415236 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787684899 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.787963121 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.787878866 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.786207384 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787480823 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.787502407 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.787552367 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786278555 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.788037238 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786782801 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.789101439 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791421255 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.787613436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.792188273 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.787943678 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.784378892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.787036557 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.788131999 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.788065701 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.786694957 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.786500173 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.7909013 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.795688379 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.787596496 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.789411911 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.790232023 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787949416 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788224756 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788776297 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.790935159 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.796911467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.788580717 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.794862045 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.788037735 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788939877 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.787872078 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.788115607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.788472587 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789495845 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.791778916 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.797897191 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802370535 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797949655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.789998912 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.792697509 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.790161224 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.793718898 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.793483845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.789035596 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.789346456 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789110903 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788187406 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.789441314 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.790720806 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.789086158 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.788632292 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.789661891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.789616041 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.790545985 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789606198 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.791001396 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790979425 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.787358065 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789903518 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791296907 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.789420892 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.787772507 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.790104703 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.789625001 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.790624088 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.79040612 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.796251817 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.788149857 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792438073 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791551257 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.789800145 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.789158243 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.791053507 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791994331 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.7909491 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798077464 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.791504909 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.792410132 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797395034 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790932906 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.789334951 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.793840445 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.791380355 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.787983613 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.7956499 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.799623012 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.791686645 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.79188791 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.792150775 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790814041 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792090125 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.79745451 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788643874 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.791655353 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.791586136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.793204752 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.788815771 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.793674438 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.792397678 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.792361036 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794487849 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79242817 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.791617044 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793599747 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.792786878 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.7920888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.793298239 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795491094 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.800664361 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.797115012 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.792853951 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.794406136 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.794504149 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.79700634 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.792956972 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.793157828 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.791843515 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807370518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.801748866 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799231647 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.795380879 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.79315342 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.798314265 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.794685921 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.798266567 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793914636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794039968 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.79402664 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.793895358 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.790135355 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793689984 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.794450066 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794949382 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.795539234 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.798750598 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.794391694 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.794071182 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.793935569 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.794476074 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.793547984 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.793426171 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.793662797 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.79647197 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796601519 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.79516157 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793547157 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800970614 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794753659 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.795576875 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.794519542 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.794594587 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.79396961 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.796336584 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.795392646 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.798419039 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.803016567 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.797666135 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804661632 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795786354 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804365859 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.795696563 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.798559952 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.804457934 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.792715617 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.794324028 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.796331956 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.796336092 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802503858 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.7968621 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.796084298 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.800969121 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795895245 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.796575174 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.796217749 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.79639694 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796045532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.796343162 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804737154 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.798891835 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.800236335 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797339265 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.792495267 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.796261615 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.79582541 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.796573405 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800431805 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.796618077 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.796932517 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.79648874 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.797073344 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.795788323 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.797102929 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.796755977 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793270241 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.796315015 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80344215 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.798430301 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801857412 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.796759196 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.805485034 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797620908 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803766649 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.798146508 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.798237402 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.797838192 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.797209224 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.799063296 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.796994721 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.798590925 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.797707701 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.799947346 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.802239498 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.799270112 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.800981169 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.798624164 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.798917418 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.79841427 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807680494 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822784089 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.800212225 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803721755 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.795374847 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.800185927 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.8025341 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.799229885 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.79824168 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.801998218 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810013586 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807023472 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.799720574 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.798719556 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798996194 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798811451 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.799460976 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.799519451 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.799958182 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.799133386 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.800153456 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.799899646 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.804596852 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.799036319 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.800803618 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800654484 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.800415969 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.810568639 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.800462688 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.801266408 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799219405 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.800123449 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.800086017 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.799819165 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.799857555 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.80071588 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799959381 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801619403 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807295827 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.807156913 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.802228891 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.800518846 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.800586273 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.802093211 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.800922754 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80090502 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.799905663 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801572495 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.801369146 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.800520508 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.802608852 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.800230081 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.800712353 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.801060466 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80035003 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803897594 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.807796751 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801039751 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.79813737 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.801204377 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802229713 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.800761487 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.802105029 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.810234276 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804669544 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.81329257 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.814384281 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.809761331 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.803897198 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805301141 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.810693875 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.800827248 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.802368099 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.802715964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.802609627 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.803271048 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.805885994 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80346146 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.808515195 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.80201678 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.802668835 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809918442 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.803897939 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.802750163 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.804236978 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.806438434 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.802054848 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.799788865 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.802522471 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801645218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809693183 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.804569053 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80422693 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805381041 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.801881738 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.804726566 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80738324 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8026949 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.804192986 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.800854618 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.803252875 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804643765 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803390366 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.800468291 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.803235086 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.803096287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.807100813 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.810753894 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.800113766 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805740299 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.804915436 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.805515193 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806060581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803955581 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.801677438 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.801725842 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.803941177 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805075657 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.806014473 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.807748568 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.804546479 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.806045118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.805712261 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804958944 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808584748 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.814796926 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811937297 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.801893042 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.804672389 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.806139948 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.807726506 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805287239 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.805201136 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804696846 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.807739102 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.805365604 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804671348 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.804229974 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.807958445 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820764502 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.805744112 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805676256 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.806651815 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809505985 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.805337578 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.802220375 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.805238434 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.807944863 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.808314648 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.814435524 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.807094556 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812931871 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806487591 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.808076098 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.811017542 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.809966128 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.814717613 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.809685104 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806817179 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.806188075 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.811842774 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.823388443 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806322495 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816126617 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837743361 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.807779459 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.808665998 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.807730213 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807041893 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.80718144 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.809669894 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.807518135 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.806775036 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807759268 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.807269758 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.809612745 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814142872 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.810381957 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.807755662 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.808232061 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807631859 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.809518136 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.805192516 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.808145782 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.808519197 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.809979743 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80840891 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.809021231 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.808331514 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821401923 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.818701644 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.808332268 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.80899334 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.806431764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.811872377 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.811993773 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820554607 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.817550569 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.808612302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.808881304 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.809965069 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809514132 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.806147784 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.809334015 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.809293041 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809879767 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.807214947 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.822593727 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.818818066 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.814290876 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.810116436 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.810415462 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.808817885 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809930105 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809764834 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809927085 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811542965 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.810931664 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814364266 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.810125164 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.80921134 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.812999784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.818119658 seconds)
  done (took 1072.313169482 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806750492 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806985415 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807022655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.806914588 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808018921 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807444868 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807469016 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.807596877 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807429648 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808129539 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807814031 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808208077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807534581 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807670076 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808512566 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808358264 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808758712 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807192686 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807835537 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808208074 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808685884 seconds)
  done (took 39.705234288 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809800219 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.807736534 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808092733 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.810797807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808268744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.811642098 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807784221 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81122589 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.810986261 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808641901 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.810615249 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811235679 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.808382905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.808874997 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80903514 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810716452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.811786282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80869426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.811853009 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809329597 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8115136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.810152816 seconds)
  done (took 41.561247928 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.812403919 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.812842085 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.812015137 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.809101011 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.812566698 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.809487262 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.812996509 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.812358085 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.812843489 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.814214611 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.811595161 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.814890329 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.820073234 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.818346244 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.81352979 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.812947535 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.958813444 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.813045419 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.813161572 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.813560787 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.811058018 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.819019629 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.810303787 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.810578457 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.813593785 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.814705553 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.813245112 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.813366886 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.814175223 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.815470891 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.81891166 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.813603383 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.814500075 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.816196482 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.813800826 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.815322885 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.818399477 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.815274782 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.811125795 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.814238381 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.82423254 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.83690268 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.814796248 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.820844939 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.813989608 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.813863067 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.81768219 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.824270932 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.813104555 seconds)
  done (took 90.823543228 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.814865624 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.814148759 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.812108421 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814893005 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.814982933 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.815666108 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.81416927 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81468067 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.813579218 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811747716 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.815237882 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.810856547 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811901985 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.814188722 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.814114528 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811693474 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812475874 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811362636 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811102212 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.811378831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.812331803 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.81417877 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.814405164 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.812672152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815192648 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812464061 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.812025904 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.81600713 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.811361099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.812378415 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.81434864 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814570751 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.816363091 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.813837264 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812380887 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.813967378 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.814870596 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.812320318 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815118138 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.812314474 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.81474767 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816065303 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.814289849 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815540139 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811526651 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.812900156 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812285869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.813152494 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.814727803 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.816013717 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815626451 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.812502056 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81552272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81286364 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815832378 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.816163725 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.813125701 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.812385071 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.815527572 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.813703364 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.813011651 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.815822257 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.813971947 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.815662253 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.815974791 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.814497057 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.814624543 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816064342 seconds)
  done (took 125.092035879 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818572617 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.817249867 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818920707 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817200184 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817286754 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.819438681 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818011602 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.817688939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.81786035 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81822373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81880111 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.8175698 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.818636155 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817580646 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818041074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818746345 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819002212 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818596405 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818165124 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818198589 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.818705517 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818503768 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818780178 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819182525 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818610634 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.818850011 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.818917987 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818962615 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819046077 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819861793 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.819725056 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.818899917 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81858967 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819736607 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.819262621 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.819082642 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819290979 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820028738 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.819267448 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.819403436 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.819271839 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820061849 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820473741 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.81955892 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81940573 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.819890488 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819857235 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.819711361 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.818668391 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.820185192 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820950542 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820399058 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819606518 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8195888 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.820459729 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.820394139 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819708871 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820354895 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820930681 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.820169878 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82123874 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.820456847 seconds)
  done (took 114.538940242 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819573541 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819682105 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.818227651 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.818441298 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82064529 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.817928079 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.82024819 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.820802805 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820369063 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.821245641 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820483158 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817924601 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81907955 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821776547 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818027734 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818029214 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818223838 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818375341 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821463752 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818613979 seconds)
  done (took 38.142467233 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.817970704 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82089525 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.818791167 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818157836 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822199937 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.818623247 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.821288378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821153434 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818945404 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82169243 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821649757 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821616541 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818899479 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818433235 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821716182 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819816169 seconds)
  done (took 30.875068884 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.819229116 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.822150534 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.821865981 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.822515292 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.819784999 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.81836772 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.822094298 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.81885848 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.819271053 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.823007168 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.822572947 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.823029029 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822294851 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.822889078 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.820511771 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.822329709 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.820145083 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.819618098 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.822709461 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.823039683 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.821371895 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.819748303 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823939221 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.82216727 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.820160678 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.820745803 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.821057642 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.820033816 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.820147048 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.825381172 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.821909149 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.821540285 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.819329894 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.820857464 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.823023307 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.81946687 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.822615073 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.823378029 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.822577582 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.823405733 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.82393628 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.821873706 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.824022907 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.823742383 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.820693812 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.823485624 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.820277712 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.821496666 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.822005095 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.821765644 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.824793181 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.824140311 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.823839784 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825791844 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.823866836 seconds)
  done (took 101.960965227 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824649033 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.824289483 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.821170805 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824205299 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825267811 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.82279203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824835896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821656714 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822242256 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.825151991 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.823927152 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824372457 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821787794 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825109671 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.823132908 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825749429 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.822088003 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.822932202 seconds)
  done (took 34.582895631 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.823496267 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823519584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.825896688 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822706038 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.823099144 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.825958757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82371859 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.825616347 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826232888 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.823226509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823480474 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.827110394 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826747854 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.825841925 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824029752 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823358737 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.82646601 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826292319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823901366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82327412 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826701532 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826817755 seconds)
  done (took 41.905157999 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.826561933 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.827270146 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.843111216 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.847385143 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.847856873 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.861833893 seconds)
  done (took 12.812459321 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824422069 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827092234 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823496216 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827475226 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827318334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825867782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825184922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82524416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827351554 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824627477 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82526949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827384891 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828603309 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825408616 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828682186 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828435633 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825484795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826380316 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82507483 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828687669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824600835 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82874034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826504489 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826058406 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825602639 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827175063 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828129916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826558099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826429674 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829804912 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828796927 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827249079 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829293033 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826917534 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829177363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829112235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826129868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830113102 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828681955 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826785029 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828401198 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829131252 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828375378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826067228 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827973738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826197788 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825379049 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825061686 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825964933 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828625251 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828023992 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824880402 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82777076 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828558292 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828917649 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828220232 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82603305 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825338791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828098292 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825995671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825534301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828985473 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825625287 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825873042 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829218067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826068074 seconds)
  done (took 122.343911054 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825999147 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824809404 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826126552 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826610515 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826244897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826576796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826589206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827683755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827597102 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827704341 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828292943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826061058 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825362066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826130352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82659599 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821538887 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821929753 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821542503 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821395269 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824548761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818660018 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817697927 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817297359 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819028713 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818701167 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82238308 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817320439 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81694269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817205218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816720015 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817440302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817116037 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815861307 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816295455 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817405319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816569528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817006752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816635734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816995026 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818558769 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816279774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818501929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817470486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817221279 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816896649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817199721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81641347 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818264938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81739639 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816254122 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817341153 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81663479 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817256444 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8173076 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817117463 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817440188 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817467854 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817835817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817471514 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820111747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817126756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817925379 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821609615 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818815276 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816912795 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818126964 seconds)
  done (took 121.882886531 seconds)
done (took 2497.771258552 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881851156 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.88838257 seconds)
  done (took 15.522145944 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.981442103 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.935089935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.819573196 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.863360686 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.818562574 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.835227632 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.836158929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.818976517 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.81849042 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.818591747 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.820056412 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.004716418 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.842727783 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.819028189 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.819549414 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.911698037 seconds)
  done (took 51.519260697 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.821673869 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.823873218 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.833824066 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.826360677 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.822876895 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.83497903 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.857483833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.826425817 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.859124468 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.837350601 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.89228683 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.835474461 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.822201084 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.872480957 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.837752612 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.838463313 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.918788217 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.901913726 seconds)
  done (took 35.016219188 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.903298856 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.823707521 seconds)
  done (took 10.488615581 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.819440658 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.83865973 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.834095974 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.808735977 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.826916793 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.825370937 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.842253847 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.842442094 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.821941354 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.83176587 seconds)
  done (took 70.047131112 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.820759095 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.815391049 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.815205071 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.812809568 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.80672044 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.811412521 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.813428315 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.808145605 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.514429668 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.851664374 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.821352167 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.820749065 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.815329606 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.818058383 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.813146658 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.839436977 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.955600466 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.813243749 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.812632504 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.821037129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.816183753 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.883730768 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.828807023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.815806832 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.846981798 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.514441472 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.822719321 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.820463296 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.926918683 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.812571523 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.812959372 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.81377829 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.816163941 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.206761961 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.113987433 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.81286752 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.821933688 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.821348182 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.809257181 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.944886118 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.812716066 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.817176715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.742263371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.094224641 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.92228266 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.857718322 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.183353291 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.815736932 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.81261999 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.843055475 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.813015262 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.810240629 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.823551534 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.321137738 seconds)
  done (took 129.681384381 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.806535212 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.068646917 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961483768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.803304131 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093905321 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011493925 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.805543117 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852841175 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.80410451 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036048814 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.969213454 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91274134 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.804428958 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.799835492 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800474682 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.798492117 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.962523709 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.876614184 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801794901 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.798944698 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833656536 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048217014 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.929616632 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.802528361 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.823075895 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013423456 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.928105241 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909134036 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.083354403 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.79835774 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86678035 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.800907816 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.797137791 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797991923 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.957970317 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.897543425 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889789899 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.800006575 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.798572794 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.797864498 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.472757649 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99521208 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898232304 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.943827925 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046753491 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004833331 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.589992326 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.797812214 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.536142138 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.959699433 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.031845793 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.03039612 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.924678549 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.80114404 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.053194675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.795860444 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795548652 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033062194 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029625573 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.902045642 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800317777 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.798790793 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.79529944 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044264701 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.799178046 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.893095497 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798971295 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.795490441 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.895480632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903919404 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.031272262 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012756017 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.832422975 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.096263598 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.278456953 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045969394 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.867764804 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035286661 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.797474818 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.795187255 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882010183 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.641106221 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.957281681 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046948904 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.053524915 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836197085 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.527396504 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.794995437 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.026332362 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022225274 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.098760643 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0402241 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.949913731 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.986232097 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.79513265 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.796405365 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.047019562 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935428892 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.798401449 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.157463378 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031654757 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.367077886 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.829353986 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112135653 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934171696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.802230952 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.438853629 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.796576696 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026105486 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.841119728 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.798312336 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797064852 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.019393679 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.878105565 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797309256 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.431821085 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.860783083 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.800516967 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033392808 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.799992187 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064874548 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79824721 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.035862648 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.953904169 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83335465 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.969615221 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.041958297 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.79970646 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063185973 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046689358 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.916389075 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020418222 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.424573348 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.799136094 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089538755 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799819535 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.797168652 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.970530042 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.799697568 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945962095 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.801531531 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131665747 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825558604 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954565724 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800621294 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.060362944 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837957238 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852838485 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.800970442 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926722309 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799203579 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.709176559 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.9534757 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799656586 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.798317788 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.344828965 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.799817805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956593182 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.035087286 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825180873 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8727894 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.474394989 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799387539 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887745926 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.827524788 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.156786218 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.798931181 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.958454873 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.801679999 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.340141019 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.798315223 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.042089464 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.984070576 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.803053868 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.798884524 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.707750451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.799073828 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801159778 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962800178 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.801076566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799670865 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003934745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804287437 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932857244 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.801916579 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.88006219 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153324805 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.799592688 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.799967412 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.800089178 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.799097696 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80209753 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010231169 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.831834864 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.325515572 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938872895 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07421796 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.120240921 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.051192426 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.847893796 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801487039 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051297697 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.804463558 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.866583481 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.803103789 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825291679 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034834861 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.801925377 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.012257924 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083392083 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.729020812 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853016654 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.803063675 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802621669 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.760226604 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952921856 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894309357 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.803328572 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.802208425 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.920281635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928143536 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017478727 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.802242586 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.93079802 seconds)
  done (took 887.108336472 seconds)
done (took 1201.135432021 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.800522539 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.801360001 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.790106659 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.802356288 seconds)
  done (took 28.935364178 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.810181679 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.807707551 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.808108156 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.807553567 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.808777886 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.808403729 seconds)
  done (took 12.589486778 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.818898767 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.802450423 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.802833714 seconds)
  done (took 21.163774602 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.879745612 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219835431 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919884612 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.254592295 seconds)
  done (took 10.018194505 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.81197133 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.809130453 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.809014986 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.810543815 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.809927474 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.812910285 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.810195147 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.81103958 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.812070938 seconds)
  done (took 18.04188167 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.253791008 seconds)
done (took 96.742291073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.079441871 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.918343749 seconds)
    (3/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.266220396 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.731924418 seconds)
    (5/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.821652113 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.284787377 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.056683274 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.177514829 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.939895235 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.368106571 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.844247734 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.801922476 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.136902381 seconds)
    (14/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.885673776 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.828222763 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.121641036 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.915633741 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.974713503 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.792436494 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057280766 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.992210523 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.087054932 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.297566322 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.998920374 seconds)
    (25/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.831346152 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.886984907 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.787708032 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.700385674 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.91626413 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.787969434 seconds)
    (31/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.698205224 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.498460945 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.717486391 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.028846885 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.300973248 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.272559414 seconds)
    (37/309) benchmarking ("sort", Float32, false)...
    done (took 5.569230539 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.870340209 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.791312416 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.154323521 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.022869856 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.533834217 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.885342923 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.004668975 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.851822169 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.9572759 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.91704928 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.057155434 seconds)
    (49/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.979041973 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.748970476 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.901145573 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.830616814 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.401621619 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.865472994 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.091746715 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.976284798 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.979202383 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.825595294 seconds)
    (59/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.79054335 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.851504901 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.232544954 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.640086976 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.284559852 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.837404517 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.790853728 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.809756016 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.880886261 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.445903171 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.044180058 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.360568138 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.903571955 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.268261035 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.905871859 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.258619417 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.921329327 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.907865104 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.791322963 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.467781162 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.463243538 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.142403204 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.136708161 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.988886832 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.495333034 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.440679167 seconds)
    (85/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.058059704 seconds)
    (86/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.856299039 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.735548564 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.885991587 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.356968612 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.252326359 seconds)
    (91/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.007265428 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.837959478 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.318205532 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.051704452 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.287118571 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.910496763 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.17942851 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.831752621 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.893328403 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.80624382 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.996039218 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.812510726 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.858769132 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.946968764 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.085516675 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.893539029 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.890187578 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.022254059 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.089837325 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.111781535 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.739475086 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.27877488 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.79676752 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.812509374 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.736890173 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.610486048 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.882723203 seconds)
    (118/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.809266146 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.999310983 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.807671995 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.811058954 seconds)
    (122/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.980310397 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.127286469 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.894949937 seconds)
    (125/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.837811203 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.161512301 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.046716817 seconds)
    (128/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.501852435 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.262127947 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.991701062 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.833558118 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.872248892 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.703058443 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.769464322 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.159038186 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.174495454 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.820154922 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.82436874 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.729719293 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.119174283 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.990733021 seconds)
    (142/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.93427831 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.025877109 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.064998708 seconds)
    (145/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.83462857 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.97150847 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.201355959 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.142409587 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.919310324 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.451515158 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.010474873 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.168242566 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.903553258 seconds)
    (154/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.375273929 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.051866593 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.838652581 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.957994508 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.029352923 seconds)
    (159/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.945890401 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.009927897 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.444764732 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.830373985 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.914645484 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.828876143 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.321265281 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.845124315 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.150057415 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.498536945 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 4.833593942 seconds)
    (170/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.920017302 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.79311588 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.89618912 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.085468558 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.815257129 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.909703195 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.007235027 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.944000417 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.02925855 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 5.583198769 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.9146774 seconds)
    (181/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.9397381 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.141549164 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.005912314 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.101452195 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.838773266 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.96532568 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.831086573 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.842792974 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.797125005 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.203298837 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.961204333 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.152081584 seconds)
    (193/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.0197218 seconds)
    (194/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.802212168 seconds)
    (195/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 8.269275003 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.872337545 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.047152916 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.919343936 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.94153518 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.872675423 seconds)
    (201/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.729488634 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.127467642 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.107126969 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.834560853 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.236691273 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.070608732 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.911673075 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98400307 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.877146255 seconds)
    (210/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.820733624 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.797502604 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.793662976 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.614272475 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.151167308 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.038056952 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.812573688 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.819391289 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.933684786 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.620656195 seconds)
    (220/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.894515453 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.323791341 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.958832861 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.929370171 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.143735803 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.837352862 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.895318429 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.248841499 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.769329443 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.910129002 seconds)
    (230/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.707506963 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403531662 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.814303795 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.857752334 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.00202455 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.901570627 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.899140479 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.940484505 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.998748902 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.817936218 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.867971138 seconds)
    (241/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.956111994 seconds)
    (242/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.176274759 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.741574455 seconds)
    (244/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.66774775 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.821186699 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.221734055 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.962361331 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.80301575 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.466007307 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.152879554 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.820246248 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.82865358 seconds)
    (253/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.317835863 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.206563025 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.437071297 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.954266598 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.435778016 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.202838166 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.18398978 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.856113334 seconds)
    (261/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.818223449 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.816854499 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.619643029 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.200042347 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.81905028 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.062093176 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.844917748 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.176264029 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.840519694 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.968680846 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.804553933 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.963479654 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.825206979 seconds)
    (274/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.913769899 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.903454862 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.90535739 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.31353514 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.817219836 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.965573585 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.846503224 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.249490184 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.09457812 seconds)
    (283/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.806928332 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.223156332 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.899991055 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.89240875 seconds)
    (287/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.818523168 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.935492882 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.816906517 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964627775 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.129231886 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.521489039 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.545853727 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.9216911 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.906515854 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.192971885 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.06377044 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.850820798 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.105323711 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.849543993 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.833421346 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.893871739 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.386302122 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.856071499 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.930313366 seconds)
    (306/309) benchmarking ("sort", BigInt, false)...
    done (took 6.818480542 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.02224677 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.901369957 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.119734627 seconds)
  done (took 999.431793972 seconds)
done (took 1001.248971936 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.852909129 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845399973 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.828824699 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.85196051 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.941519755 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.861389486 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.839748943 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.831877605 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.879109568 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.878785063 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.828907753 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.860661483 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.83227688 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.831398861 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.828917629 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843862015 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.134192352 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.854890894 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.847278943 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.8391884 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.845931236 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.829077725 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.879907987 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.860537342 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.834513252 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.832436301 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.834572871 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.850350314 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.941598262 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.834974426 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.833141574 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.8407171 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.135436319 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.852765114 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.824756584 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.851753443 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.841168691 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.841140191 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.834331628 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.863256174 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.273159513 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.83580562 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.833200249 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.831150896 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.831430722 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.834337328 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.832514824 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.838059919 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844204872 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846080919 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.267614367 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.850906601 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.835221069 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.83181662 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.842131665 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.831816648 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.838758342 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848199837 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.852231929 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8487608 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.126346351 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.859056004 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.834636471 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.849366793 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.839829559 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.306948357 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.831859334 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.835838915 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.272253423 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.841267876 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.306800192 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.84597644 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.834545387 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.846772095 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.865323075 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.138256746 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.850927005 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.832059936 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.840045024 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.831743502 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.842791753 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846739523 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.837437013 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.833972713 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847519439 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.865187817 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.843947078 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.835145818 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.843364049 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.85374565 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.841185458 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.843789103 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.836506155 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.830214119 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.844616925 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.841737533 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.83742604 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.836732891 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.838520933 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.843051068 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.270787032 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857084712 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.831152598 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.830776858 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.834176363 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.848617166 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.268743508 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.839383813 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.856008955 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.881670901 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.837954621 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.129642496 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.861931802 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852560569 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.844774897 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.839343662 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.832030061 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.129028431 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.295471663 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.855158616 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.8376556 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.834639604 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851585 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.839365545 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.832082144 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.140206844 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.861222324 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849412688 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.957517053 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.845821975 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.867228071 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.833923496 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.838103762 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.867879306 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851332526 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.868023599 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.840048566 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85194896 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.852264861 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.833021154 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.847183894 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.846355039 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.83776014 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.843489378 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.830917956 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.869225475 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.849478847 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850001353 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.857656142 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.957959674 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.833913332 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.131369197 seconds)
done (took 288.326886593 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.915445608 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.831316396 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.9372375 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.832902408 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.92870713 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.919571615 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.830012492 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.830650109 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.829828097 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.243967135 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.829841048 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.831929992 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.828475312 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.830446383 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.934139962 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.833424256 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.830302749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.169792845 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.834688546 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.916130207 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.826120351 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.830690786 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.833835021 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.216540373 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.826485947 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.826127431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.906882334 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.833601484 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.207188707 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.827951194 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.8318233 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.171132463 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.926306952 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.852834304 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.844013081 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.841007286 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.917420779 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.837594142 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.916069241 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.930001154 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.933556116 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.87522129 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.831647223 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.831023046 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.837406299 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.836209318 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.832447717 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.86249508 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.834100521 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.833373245 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205790767 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.845793097 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.833098861 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.833966493 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.832329731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.866369654 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.833574844 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.836719013 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.940498882 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.837094626 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.898727317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.24660145 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.209596192 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.836079738 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.836136777 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.833894188 seconds)
  done (took 182.141716068 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.902188172 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.908588534 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.902592476 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.83821876 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.885667216 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.90349203 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.838244431 seconds)
  done (took 14.944809466 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.843847646 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.836473615 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.889975459 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88991009 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.835614712 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.997217035 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836100631 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.848135647 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.83399396 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.903011355 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.838076381 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83752251 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.844562134 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.838302174 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.889751666 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.848594432 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.953834383 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.838559362 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.838376254 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.98952149 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835711819 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.844681211 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.891783395 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.84899032 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.838643275 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.84308103 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.440257385 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838197178 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835143934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.837569922 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835663692 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.880068268 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.838450239 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.838417741 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835821552 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980727007 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.838156097 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835306976 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.838365027 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.835517995 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.838902389 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.83740013 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.838404839 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.836234053 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.838063045 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.862552262 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.838843291 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.838454898 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.838052777 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.838846036 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.903069819 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.840200996 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.835870346 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.836010002 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.907600457 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846207229 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.839722069 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.836642629 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.839658309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836144955 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.990922449 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.891881291 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.839612624 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892025421 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.840064353 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.839447242 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.83911806 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.840201588 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.936094378 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.839654881 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.892151148 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.837556905 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.042319151 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.864774718 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841346851 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.843957754 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.843412733 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841364909 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.842471836 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.848240476 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.838316293 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.8464822 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.849301889 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83944921 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838494426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.981584687 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.976419459 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.840170688 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.855407315 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.84977611 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.83768612 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.905812034 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.84011745 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.839408795 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906127367 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.956051019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.897736524 seconds)
  done (took 203.083501939 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.846974325 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.851157641 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.842247032 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.859562794 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.842019431 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.840737581 seconds)
  done (took 12.85424909 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.842339481 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.841798806 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.842193277 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.842466254 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.842531896 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.842885713 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.842555568 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84345685 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.845147513 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.842427999 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.843761411 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.843744766 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.844061297 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.842092974 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.843369099 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.84187697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.843419174 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.83957504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.842077212 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84298893 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.992435898 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.843637281 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.842894366 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.843475587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.847014952 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.84343994 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.850322442 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.842085294 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.84248152 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.851602971 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.846108653 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.844503145 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.843674859 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.847561996 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.846474654 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.844237576 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846103044 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.845275684 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.840514348 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.843501664 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.84457599 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844496806 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.84334411 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.845846045 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.844865136 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.847523726 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.847863769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852911189 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.844309444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.844193752 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.844778533 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.845227915 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.84464602 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.845518991 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.845968365 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848572132 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.84820809 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.845740187 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.845222269 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.844475647 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.844351158 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.845862572 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.84614964 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.848178613 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.851432305 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.845036392 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.845734949 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.847784309 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844807464 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.8455752 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.846270262 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.841718605 seconds)
  done (took 135.747083929 seconds)
done (took 550.547887013 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.956448366 seconds)
  done (took 8.731675181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.003593756 seconds)
  done (took 8.878646332 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.142305787 seconds)
  done (took 9.916404181 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.850344714 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.867773233 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.839500638 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.843591613 seconds)
  done (took 29.184061006 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.917610549 seconds)
  done (took 8.69204116 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.849167736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.837192402 seconds)
  done (took 15.496160834 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.854769108 seconds)
  done (took 8.629917823 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.915077364 seconds)
  done (took 8.692136964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.851294252 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.87570144 seconds)
  done (took 15.515499113 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.823693386 seconds)
  done (took 8.598274968 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.55192841 seconds)
  done (took 11.332911945 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.844251212 seconds)
  done (took 8.632570482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.889046649 seconds)
  done (took 8.664111525 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.956828824 seconds)
  done (took 9.732414826 seconds)
done (took 162.472144386 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.840987063 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.840369252 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.837735642 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.838168027 seconds)
  done (took 29.131895642 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.877612686 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.882709444 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.87999062 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.889774547 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.882598749 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.877935506 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.871357244 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.873946718 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.889467425 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.881777936 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.879546564 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.881630293 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.881725306 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.871150919 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.880498034 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.880894215 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.889923929 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.88195448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.870594562 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.882098835 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.846846286 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.890944608 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.882930049 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.848846754 seconds)
  done (took 46.852745964 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.046922299 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.916777508 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.000773418 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.899677214 seconds)
  done (took 9.639765188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.898584441 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.89903205 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.912088621 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.95149801 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.973706831 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.909737849 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.874267891 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.867681567 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.855744498 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.90008217 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.974704877 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.895347857 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.985909641 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.84690454 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.02898877 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.846416348 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.846465957 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.89909401 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.950535125 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.971769922 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.847673559 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.899496784 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.90270383 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.895381683 seconds)
  done (took 47.610457031 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.845069821 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.853866519 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.853363467 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.846739943 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.846384119 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.849075937 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.85309677 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.847157216 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.868911633 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.848098197 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.848288957 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.846319332 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.846232315 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.847531647 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.846733691 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.860172088 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.860076008 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.846750929 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.850604364 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.853911763 seconds)
  done (took 38.797752848 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.841788761 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.696288975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.192836705 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.098703333 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.842452837 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.84186752 seconds)
  done (took 31.291712354 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.860157848 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.852222066 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.847994225 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.903610948 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.985555618 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.853074725 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.849316609 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.859765966 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.892015039 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.911318781 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.867059535 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.873609398 seconds)
  done (took 24.334974475 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.847381994 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.844929294 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.856567967 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.85941948 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.858871105 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.855567996 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.854923608 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.842759306 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.861885388 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.865545293 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.853839826 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861026049 seconds)
  done (took 44.045012507 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93460142 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.733447967 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.911398311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567996271 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.31603291 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058508975 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375310064 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185158129 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.848714867 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118442632 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950612444 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950488998 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09945519 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845749398 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.866714875 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.330016911 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140493641 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08032306 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875185449 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620555282 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896164697 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298369643 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.694130465 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902833554 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056498687 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.98008858 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.107024718 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.806152239 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982808769 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885384134 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856835344 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847433706 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120390851 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231054819 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946345552 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856910403 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.501948716 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.569020389 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.833287965 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.629683137 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.678478301 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973803303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855966696 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847405079 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783225839 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300733407 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220095787 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.85293061 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.557494003 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847442205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858741586 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936008981 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.852574223 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.662609027 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834776555 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.128073286 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.844142363 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854249317 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41962455 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983930992 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334742929 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.816471354 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.040424692 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62777394 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25017197 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.996584142 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.852064269 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851522569 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784466652 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.628941868 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899001264 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409438055 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.867428738 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497896087 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155746461 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.001293516 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790083183 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140359801 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.583785504 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.815834292 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078338701 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.805551602 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782677063 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.70659644 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78314276 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134404187 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887557891 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.494426272 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891320597 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187583922 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.861564337 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865882778 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857115978 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073800988 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.733657116 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84895339 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.709296881 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000552742 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871201819 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186202175 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784400198 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.854487518 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10625683 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.062082754 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.022803411 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363797682 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00524349 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912777465 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.864293335 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.708130347 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893139285 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.126360659 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907700395 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970767662 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908908128 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.807595426 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157889036 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942659465 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.954164513 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.994913462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97596052 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.182428154 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146173971 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915900911 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852438667 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.851565703 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636248906 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40327077 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.119179856 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.853545746 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291122944 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893803131 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.852993096 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786829032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.470425679 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990203845 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.833324969 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076672819 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755560617 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161069702 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789891475 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999555159 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.968186692 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.075541061 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.501830154 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.932406924 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109627798 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320568422 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.052293521 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89499992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87257875 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942102806 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875284363 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.22238312 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138586236 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.856835559 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.856999292 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648615064 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.850741395 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853355643 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.858351865 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651797744 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138347952 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.878189831 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.857328587 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.745289827 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.868474214 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920931712 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859284892 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865248943 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.398912476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600275842 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.864661337 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.473717359 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07969989 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865476831 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.64513367 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96660511 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.936661317 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129558619 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912643713 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.788855793 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.565276314 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.548966057 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854477221 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791276909 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.855634291 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865396153 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866076824 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.235477156 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136334337 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899410221 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.641382467 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.898658277 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867695987 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.86079955 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856417154 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393439121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979330191 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343151974 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896190227 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993028264 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.870355171 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790529161 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.859540113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860996169 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856851368 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.81223449 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90974861 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.722437343 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23318743 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115050229 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.505720858 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872922203 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.673142065 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.915262049 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.878706371 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.733011525 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.723457466 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.964712969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869733794 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.867581135 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.645044795 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.553466265 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425688894 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171613075 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171139154 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298549368 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.270576233 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.155081592 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195999371 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094240412 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387473747 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916833932 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203757154 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803178166 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94570869 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507711877 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214166943 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872608352 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086253524 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246045205 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.646058708 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024169589 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073380145 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892744914 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.711657409 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81668406 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.064715099 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001874714 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.65372365 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059487846 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196726104 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.586921125 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.947209594 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.861628187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.560185256 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947608685 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.568575267 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220471708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.31193689 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853900057 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329454956 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86211657 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.303847835 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217813978 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.105041997 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.974680273 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796920275 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87062682 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871048661 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.860388223 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.851776665 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.728049366 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.113092936 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870860479 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096253009 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.054608153 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154166188 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.764268234 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.866891573 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859812481 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163969685 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.597368222 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023303988 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.249918033 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.381195148 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863850884 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794443271 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795661894 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.552482016 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868199576 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.836424197 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089779057 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.04791462 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811707531 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301119553 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099004865 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11602122 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.873946734 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139314102 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135910976 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.59656985 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889473958 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.963052893 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593933979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.971658587 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.130099596 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097161972 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659363503 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091093639 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.916211479 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.679803077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.861364545 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075581988 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.131464328 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.860745695 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094037064 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.584518573 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.962012861 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181038379 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918156903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.867972226 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012058129 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.054997868 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872825278 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946710506 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872439424 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.873802646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873583272 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909190881 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876117667 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986783853 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.876628411 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951355201 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987117491 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394442476 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.868686093 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144732636 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229620298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193104201 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921650227 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864054805 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862063261 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797873574 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000336744 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.310190103 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138119243 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995130493 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.162922703 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887278871 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.586997147 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.179942084 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101490728 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139106036 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.761517306 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864257477 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89545127 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.132270908 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873976642 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.077320452 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099514356 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188636062 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33729027 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.047614633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227073145 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1401743 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235614999 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865501071 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457108249 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.968409054 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571779437 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.909148998 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882372796 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132292932 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875927178 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250491536 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888628643 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.062372561 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.383038196 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655360414 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155127008 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.856098778 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929888987 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146657431 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25747573 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177540491 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940504519 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880059979 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.569900625 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003832814 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.732763699 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136729931 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867039378 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078954447 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.576765863 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.877399376 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150429286 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176864091 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.865481569 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.74416671 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876127766 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.87686492 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090868726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142809142 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122985243 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876553264 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876051737 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.68656431 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148405873 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927219208 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802329009 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.871824831 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969123928 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117849252 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903026251 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.386210647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.579046228 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17028271 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.788881974 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890077929 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315388239 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241739957 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200054994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41302601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101927341 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429031983 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.758534053 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16571085 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.873516908 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311760473 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171347784 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.872604177 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426241743 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904226576 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.146726453 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189718927 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.994583747 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.668668131 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.838200998 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093228172 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461401516 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810888443 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872139679 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.93064036 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869969281 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.00089041 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881410963 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.77258488 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.73291599 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.683346943 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364483589 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.876306771 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.863122985 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.641500048 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444837171 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900928282 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013023317 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879882813 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.584629761 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.163697112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125885855 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420398607 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.876667692 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.875451683 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872286971 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798791337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07293833 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.25175705 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176901309 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.263040837 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.904204548 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875555937 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.088345569 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084295336 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.87264142 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010788651 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290947725 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906147922 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.642543141 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552870778 seconds)
  done (took 1680.150489257 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893147558 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.905909279 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.893706471 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.942410722 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935418474 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.98680029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.967107763 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.984597486 seconds)
  done (took 57.317901703 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.871637398 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.065006676 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.881126612 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.872970176 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.881596578 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.872406117 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.04506348 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.881823075 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.88580746 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.883138346 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.873878064 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.873652606 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.19209061 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.894948686 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.872836777 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.860504313 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.884280373 seconds)
  done (took 74.435822708 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.87334483 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.078969337 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.916223868 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.899485361 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.821185996 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.876582638 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.831354086 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.929288505 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.878540001 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.089402231 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.214798234 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.884714986 seconds)
  done (took 90.104408447 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.883458644 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.880437578 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.880534104 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.88144529 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.881639848 seconds)
  done (took 11.221158795 seconds)
done (took 2186.734831444 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.121577795 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.103514525 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.113739169 seconds)
  done (took 6.026307292 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.023931976 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.071451649 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.190473872 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.198533327 seconds)
  done (took 10.296737828 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.168470936 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.272907356 seconds)
  done (took 6.251285504 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.274939717 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.883005356 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.271939139 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.876675188 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.878069046 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.876503374 seconds)
  done (took 22.446072408 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.880421745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.881677552 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.879057338 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.881653359 seconds)
  done (took 9.333295996 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859891251 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.606464044 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.861910848 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.873637775 seconds)
  done (took 21.012898569 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.626490643 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.277631316 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.623093178 seconds)
  done (took 9.337992366 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.41769748 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.779025165 seconds)
  done (took 9.008073463 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.148655243 seconds)
  done (took 3.959504129 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.908226169 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.149966 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.405613558 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.41047053 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.487028416 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.713441463 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.190753639 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.116005673 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.299097719 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.31056309 seconds)
  done (took 24.802974859 seconds)
done (took 137.835920925 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.256969424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.118289888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.079375347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.264557813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.102991114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.090969613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.095955594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.250187792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.722077162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.718573704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.220219098 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.097787088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.03594857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.110499674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.042141404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.239699468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.099309264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.263231945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.917700338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.116938919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.093878454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.849694221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.066350011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.862070069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.102157698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.0298742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.426866549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.241324709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.069147966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.430921639 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.100178735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.266572937 seconds)
  done (took 171.195408452 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.613669683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.878583422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.877817733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87944658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.063312933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878913413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879024421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.880056394 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.0724794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.061867097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.88058431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.084219534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.888273183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.879102163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.882159291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883929467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.217660712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.677985387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.89271774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.897510435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904866644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.994641735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904567216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.055605449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.247999611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905361572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.864508913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.903193361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.885073107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.846246846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.89099449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.881201307 seconds)
  done (took 207.36932057 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879859876 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.8805455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.881426057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.881386878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.88154495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881888744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.880115304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.880213919 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.551433691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.546884532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.889175816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.888296517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.889276598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880466423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.889848227 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.881479738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.886292937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888797732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885402707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.888629795 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89036054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.599085691 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.890279869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.605386587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.888010862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.887415468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882967375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.890136037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.88246823 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.890098619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.891261472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882956348 seconds)
  done (took 220.921437767 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.096802427 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.900009332 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.901075098 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.836849417 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.901052407 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90070365 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.841284453 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.091777749 seconds)
  done (took 19.775938159 seconds)
done (took 621.083658429 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.477079453 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.23446761 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.085753714 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.925346139 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.203886065 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.967260625 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.92102348 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.994005802 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.664377122 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.995511431 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.635855944 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.944480563 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.73009379 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.95098259 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.047917973 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.982601174 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.467722144 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.563565797 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.105316307 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.022204737 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.102950318 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.909007332 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.006221486 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.68258216 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.732339569 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.923536193 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.12694666 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.476704571 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.933288423 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.087706084 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.697606624 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333793298 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.938085476 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.921307113 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.978589683 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.957157443 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.300875959 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.936332612 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.045986686 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.674146131 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.022088302 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.540711477 seconds)
  done (took 105.07683892 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.892895485 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.89072796 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.890129095 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.891496752 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.892911862 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.891415691 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.889805817 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.890204129 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.891181601 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.889841144 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.889637092 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.891723816 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.889716188 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.892029436 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.889997441 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.891449458 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.892504573 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.893405371 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.89152643 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.890433983 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.891766271 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.890914193 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.905292132 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.891559771 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.891225324 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.89245447 seconds)
  done (took 51.030420425 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.904370907 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.07274104 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.168755721 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925637936 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.904940363 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.906583433 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.924031764 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.910133112 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.907479063 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.906467638 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.014320424 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.912019112 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925653521 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166596182 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.92180433 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.905414909 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.904864781 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904990821 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.079748355 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924315022 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926721521 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.910771084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.92649064 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.922405929 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.907543057 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905679472 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.910162523 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.366636735 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.915755709 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.01485744 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.004326275 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.931820794 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.326525548 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.176279016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.975551485 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.914654833 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.906264751 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.015985819 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912698921 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906958897 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.92529474 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.912039996 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.165514843 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.402055655 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.921148103 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.906454421 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.377881611 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.026776202 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.948315816 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.91838533 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.170137941 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.923460046 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.908103851 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.907761834 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.942883451 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.916989603 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.906696158 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.232930652 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.919546009 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.926213574 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.912890103 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.908518075 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.087291029 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.917051812 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.073523289 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917939975 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.914387339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.910105433 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.166843199 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.924715199 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.408172576 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.921990015 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.908077182 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.014472599 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.080588255 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.407204936 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.922125397 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087827708 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.343234478 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.934006057 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.916627203 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.358198613 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.936914215 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.916556549 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.911017078 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.909683814 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.908182548 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.954606102 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.925750278 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.343177632 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.41236352 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250427857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.93726809 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.924448354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.910512179 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.232701313 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.917967836 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.908860792 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.163325498 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.42165892 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.923170334 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.917069867 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.395130554 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.924684576 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.92927834 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.918876376 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173990245 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.926097398 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954430234 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.909340802 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.915834628 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.912537551 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.929012214 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.91761665 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.909973456 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.385398644 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.038875092 seconds)
  done (took 236.965216208 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.905997452 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.913413861 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.902428694 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.914979859 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.903344521 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.909967111 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.902447662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.903813289 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.910011547 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.902791479 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.9048376 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.905360458 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.906668395 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.909997235 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.946812466 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.911864886 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.516880077 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.905598298 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.90390309 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.905089161 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.554843732 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.911306205 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.90417662 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.905489057 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.905430211 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.906553853 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.910915701 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.940207824 seconds)
  done (took 168.565743306 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.911393931 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.029920358 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.932782938 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.939408798 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.920225551 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.908519772 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.935395385 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.927347346 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.916289866 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.909255109 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.909388822 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.971993223 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.922739274 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.017383593 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.946574104 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.941570812 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.023673152 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.92325547 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.910130199 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.911201765 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.941509247 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.907697075 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.974525226 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.040846507 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.930969662 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.028997154 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.920044473 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.914570223 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.912614253 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.031941711 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.928597712 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.972847904 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.941257309 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.931130669 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036401068 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.03484333 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.026660585 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.944414301 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.91738684 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.910679478 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.911984877 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.901116239 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031830445 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.932563562 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.914465416 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.021890538 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.934037482 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.915293794 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.92167305 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.911700687 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.926515494 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.931124173 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.981557412 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.046462798 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.947789956 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.938484168 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.938283562 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.195220236 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.923195307 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.0179138 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.909099561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033703059 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.934242015 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.902142699 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.9134483 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.918018322 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.942942256 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.945541422 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.02332759 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.924280385 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.018089797 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.95171817 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.920742914 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.913286626 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.91627818 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.033223546 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.038955645 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.95213535 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.952810251 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.947118073 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.910485534 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.914553473 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.903908717 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.933169559 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.91809511 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.032275307 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.036679083 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.92538546 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.916632971 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.916040794 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.917203061 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.941784625 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.043061174 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.953379378 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.015878528 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.986379558 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.990195289 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.930117219 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.928342578 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.918627376 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.979715828 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.929760888 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.927602564 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.243318504 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.987125196 seconds)
  done (took 207.332850571 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.406441709 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.970718634 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.975108753 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.224693276 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.347282041 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.776039386 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.962883601 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.964639457 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.988142608 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.154202403 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.039054003 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.983534934 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.951572597 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.938771465 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.965958468 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.985404568 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.981374102 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.308572486 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.092796432 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.045749547 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9502993 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275926896 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.292646198 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.367891353 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.001593513 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.311015798 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.645337306 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.106881829 seconds)
  done (took 62.865800025 seconds)
done (took 833.665107055 seconds)
SAVING RESULT...
DONE!
