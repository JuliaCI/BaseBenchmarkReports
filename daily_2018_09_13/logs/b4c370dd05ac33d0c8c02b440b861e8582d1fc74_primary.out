cset: moving following pidspec: 4835
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.335994233 seconds)
loading group "string"... done (took 0.493587318 seconds)
loading group "linalg"... done (took 7.92632264 seconds)
loading group "parallel"... done (took 0.177632843 seconds)
loading group "find"... done (took 1.197619809 seconds)
loading group "tuple"... done (took 1.89932191 seconds)
loading group "dates"... done (took 1.286306458 seconds)
loading group "micro"... done (took 0.238864556 seconds)
loading group "io"... done (took 0.787756242 seconds)
loading group "scalar"... done (took 42.751722325 seconds)
loading group "sparse"... done (took 13.243155226 seconds)
loading group "broadcast"... done (took 1.061558355 seconds)
loading group "union"... done (took 14.588228886 seconds)
loading group "simd"... done (took 4.980227817 seconds)
loading group "random"... done (took 9.979276794 seconds)
loading group "problem"... done (took 2.032741944 seconds)
loading group "array"... done (took 23.132263701 seconds)
loading group "misc"... done (took 1.486893303 seconds)
loading group "sort"... done (took 3.718170077 seconds)
loading group "collection"... done (took 19.974463323 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546402687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124678319 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149345328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.155818196 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20742084 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140538012 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161580463 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09479797 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009887889 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187445832 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144803241 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496696933 seconds)
done (took 5.226471609 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.247239693 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083493941 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094891011 seconds)
  done (took 0.928470288 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091379062 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145264864 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091802766 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074970187 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091688296 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075785121 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074933537 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092873673 seconds)
  done (took 1.400459754 seconds)
done (took 3.42641628 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738957025 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280616349 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203193016 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510262441 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.178030982 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211829477 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674822623 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342236001 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.246112071 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102126348 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130810193 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.403691861 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133740715 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666144879 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.087618993 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125802391 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169930575 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444392752 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.093022707 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091713071 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11561677 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152315862 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.113304401 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084880303 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.181513111 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078565043 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187321015 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107058287 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076893379 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287407201 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199615676 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682975898 seconds)
  done (took 10.89487488 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115679417 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139038913 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095601038 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137167049 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139466454 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080615773 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099912039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077568702 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122879145 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181659867 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133095285 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140914668 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075972011 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07944744 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118373894 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2476219 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105329537 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121080798 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079879024 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105869061 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135692229 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095160978 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107455849 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08983185 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168335685 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219828519 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110506311 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126068928 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09593752 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096306788 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143530968 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159619666 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077383309 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.096021043 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175951252 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107793103 seconds)
  done (took 5.170598205 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189292741 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099947832 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189475836 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.143257085 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141889117 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168613287 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094545574 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262633537 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187664129 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17811634 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127123606 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114384691 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076737265 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099034817 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075053188 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.751984167 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163702981 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110806227 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115044446 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09579058 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083719405 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369925753 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083245223 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091587117 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080004166 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08724068 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157205405 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079188252 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.204949137 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099564053 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097534094 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113551982 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208863536 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124945095 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117357783 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095582118 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074482699 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176199801 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09923131 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077196342 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123171753 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115782245 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134974931 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0915759 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077264755 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226762864 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.075541972 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090273997 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108288224 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.034793701 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180080585 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09110048 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07344777 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336417522 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114612138 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075378376 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093725069 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.311655126 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112159689 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095262062 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076379973 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096810364 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078441604 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.390125456 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093837771 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.054632714 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078922753 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086215682 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095114286 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094185994 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084933986 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101026462 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095645025 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093357047 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079406283 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075249085 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093564929 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076959073 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091515217 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095007951 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099711244 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07588905 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164037497 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076298947 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114096701 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123689794 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079464556 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074682967 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128482739 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.123633998 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077528474 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095469294 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116770195 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096311754 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112615841 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078482732 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140905448 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093984364 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19561196 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092092464 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076583875 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122733168 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096877219 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111039688 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107222149 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077520821 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09959462 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074060783 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092972327 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145178527 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092348952 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077554277 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.093975368 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090209792 seconds)
  done (took 22.951722656 seconds)
done (took 39.770883673 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.355352036 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109723322 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109592461 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109064561 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10846106 seconds)
  done (took 1.620721113 seconds)
done (took 2.422588304 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291099486 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175489649 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092069465 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170806232 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073770925 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177452698 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180942851 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09275821 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205428966 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.074155943 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165431402 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090736955 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074370606 seconds)
  done (took 2.690653781 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09353363 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114147046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080202556 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090487094 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092360796 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09164959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109385769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097921812 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10874248 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081466201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092503766 seconds)
  done (took 1.851808191 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092068321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11177397 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080605648 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09061334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091562884 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09046503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109155625 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096910264 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108970043 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083222304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091936162 seconds)
  done (took 1.843823933 seconds)
done (took 7.180143223 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093593888 seconds)
  done (took 0.88827557 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.048431485 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.343357907 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117436301 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164690506 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330619766 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.212021552 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.60899326 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131316548 seconds)
  done (took 15.953516606 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.128776249 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100374531 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080871285 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098984419 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0807461 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098038373 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078342615 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097624785 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079214816 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095603095 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079345863 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098825274 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077925299 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097811013 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079315585 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079168357 seconds)
  done (took 2.311158379 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115314062 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114623702 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103524128 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087281662 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.102935221 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081675833 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105559131 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101073611 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082477448 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099641996 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086857038 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103373328 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08523588 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099235302 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084387842 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106338624 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081451067 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102908312 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085233175 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104277539 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104222946 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.083238534 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102039803 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086275092 seconds)
  done (took 3.218280341 seconds)
done (took 23.169902816 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154345055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083496558 seconds)
  done (took 1.032980423 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099349961 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1171234 seconds)
  done (took 1.027881615 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106095289 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096358548 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135716204 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095787265 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098079715 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078894635 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131096419 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097667831 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079683403 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097280095 seconds)
  done (took 1.82679682 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085090089 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099993955 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089286543 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119166953 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.090045304 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100296758 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084359694 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101287153 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084323532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096906684 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086983369 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116162742 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.104195854 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099449661 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102900523 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104217454 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090119663 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102182805 seconds)
  done (took 2.568391886 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080177442 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080998312 seconds)
  done (took 0.974091986 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083216252 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095083165 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08284509 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099333431 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078126642 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094908322 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078706388 seconds)
  done (took 1.42686064 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490748428 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141819441 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267934352 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080995879 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122714954 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.319597231 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09690751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08181846 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101561619 seconds)
  done (took 2.576810404 seconds)
done (took 12.243019476 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091299215 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116084073 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111414963 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472303018 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.117522267 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076305308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162045434 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.263289667 seconds)
done (took 2.224108593 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147187253 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343830818 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125139353 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088176896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078568021 seconds)
  done (took 1.451786472 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077431163 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079907807 seconds)
  done (took 0.975405463 seconds)
done (took 3.391674649 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079018504 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.127548306 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077190574 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097330759 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.075246521 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.075124204 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097632459 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.074406965 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094219299 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077865481 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076694282 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096022782 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.076386114 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.095796893 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077913026 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092210664 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075679583 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076902576 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093274111 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075234363 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092853973 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077820866 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074145123 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093429533 seconds)
  done (took 2.902079615 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107131866 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097924455 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084126523 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102764023 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081968438 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102932151 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083219947 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096841363 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100902256 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081087174 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099577267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082848193 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098892606 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083319631 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097637476 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083281195 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102678331 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078174288 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098551676 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082590707 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101824466 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079072216 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100260454 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083542804 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099543075 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080592304 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099077654 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.077254311 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103793212 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09864644 seconds)
  done (took 3.592005573 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083386496 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074047376 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094575508 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082426133 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092563052 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079887426 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092404277 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07641765 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075487944 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093271445 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076325844 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093071213 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075639387 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094639163 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077516309 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07767274 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106997396 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073828763 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093809948 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076143794 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096370667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075220767 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077160892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094304594 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.073546552 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093494184 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07524652 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0922332 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076666808 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073908194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096509701 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078377227 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092595199 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082039873 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095512442 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.184908273 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078257846 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093537465 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.075400983 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092743142 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075173822 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073750787 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093478794 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081092846 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097272838 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077013892 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093364064 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076801157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074627254 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09705206 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074230825 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093753671 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07689052 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094543297 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07901078 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092230961 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076397216 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073953876 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094473738 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074532432 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092681911 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075314793 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094678753 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.076455253 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090592569 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10052074 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07429293 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095206751 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079471164 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094578739 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077780251 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107162757 seconds)
  done (took 7.038897504 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081915491 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103978621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078496943 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076602849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092793309 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075427505 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099166473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075244973 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095453037 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094087808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094648416 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076627115 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095578062 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08030409 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094489379 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078141429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104612978 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07346076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094182034 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080346027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093456659 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081369524 seconds)
  done (took 2.745406089 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218195119 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104072566 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139660931 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094222577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115838807 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111322924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082340825 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103076443 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082650772 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104647355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085730271 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102010242 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1135767 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085798807 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105024888 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085966603 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101938746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086453148 seconds)
  done (took 2.754968449 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092921066 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09767293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100745462 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097955732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079302573 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099897559 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085367556 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113515771 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079915576 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098070193 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087650161 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100321893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080635595 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098477026 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080632274 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097547936 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080729189 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097192023 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088710495 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103842761 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103315079 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089034354 seconds)
  done (took 2.88549537 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096270847 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098813792 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099368989 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100737285 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076757003 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098942064 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085773047 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097340951 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086983208 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099757802 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07943742 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098422243 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087271819 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097008399 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085273348 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097130385 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080760028 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098156928 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081679841 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095547163 seconds)
  done (took 2.67579199 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119113693 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111905117 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092690279 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123577665 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092943186 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112416525 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122253499 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093702538 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111963473 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106599171 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113023374 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111213649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104818157 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118881137 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092311524 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123003285 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123368818 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103753034 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112375599 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092426311 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126032691 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111821263 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103384839 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113534444 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092485607 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113253043 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092577729 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119151374 seconds)
  done (took 3.888447657 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078772498 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077484574 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094947927 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075575891 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09453799 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075880698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074628623 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09521695 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077293372 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094041174 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078408275 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095133739 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079738896 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077057394 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096835828 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078176308 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096431316 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076351392 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077512425 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094138005 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077694212 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09646905 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078856382 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092898002 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076798149 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.077358439 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094839473 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075618485 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096411237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076070439 seconds)
  done (took 3.369494116 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08936949 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104951945 seconds)
  done (took 1.034108538 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077111003 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113557648 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076128862 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080317853 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104038235 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0779365 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109051187 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103061106 seconds)
  done (took 1.578697022 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097148018 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116229393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084221849 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108772173 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096905275 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113655907 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157149986 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084819923 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083432332 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095941005 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094175339 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097188759 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083600634 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098834171 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083896923 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103670521 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079706042 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10749241 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085933833 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098807688 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085336237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109336617 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081456275 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.093966233 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080956385 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108378566 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089562661 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099341758 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082499745 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107251611 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085057074 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071517847 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103058455 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083402202 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099708429 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096100385 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110752791 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080420221 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106874143 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083285296 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107395562 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076321815 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104247851 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084206199 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109149205 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0866624 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103928846 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076735436 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095281023 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081515546 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096660178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080269024 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072473549 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106068415 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082405046 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112320426 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080637376 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099397188 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080647501 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101441141 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084510561 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100167491 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080781084 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101777335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086782576 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101389327 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086974376 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096030577 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072845275 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078394571 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107089538 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120265832 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088665852 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102967259 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084451589 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098294848 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082711802 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10340069 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087015158 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105705713 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083748068 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104760062 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087025778 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096968274 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082315782 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104014734 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082565909 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081599544 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096097096 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09468116 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101045682 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079123547 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095296951 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08819857 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100980996 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082794476 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094678747 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086951634 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072018454 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103803764 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083868666 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098979126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087529939 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104418193 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084192004 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106734281 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08870332 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098116342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081179383 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094454077 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084976175 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100083727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086543554 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091018656 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082445736 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098350992 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085067595 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104560382 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081515726 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082173504 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106139995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.085353623 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100799224 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074780546 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101523514 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083239708 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108308423 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086707357 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101467443 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078030348 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096314275 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084508602 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101322512 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085269613 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103932644 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083615431 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072396641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099974438 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083275946 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107330217 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078873446 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099614643 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.084127734 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099233615 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082303636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104437102 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081189213 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096732513 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08377223 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099171085 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078557903 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107207856 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083303844 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080986682 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102024928 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087747083 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10186119 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083824372 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101235442 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084335764 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104151743 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078396472 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097559804 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082230566 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108071171 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082253234 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095870007 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077395267 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.084039475 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096293191 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081882632 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098459033 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082316041 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104133711 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080685241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101099209 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.081294496 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113423839 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092438431 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103458946 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08574661 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107744451 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083292417 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099750524 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084056411 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103794763 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085218928 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105790327 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0857199 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084853609 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101263867 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07559842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106074306 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086613652 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09877888 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080167932 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09815176 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084515572 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10597979 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08415818 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102644719 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081762358 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079100648 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108672078 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081568989 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103955167 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077434711 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103614909 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.078993492 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105546837 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086019222 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108425468 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082290958 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09846046 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08805688 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099943265 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085940252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097309253 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077446369 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076861366 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105606284 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081544397 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10254482 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073264003 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106666866 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087279976 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098218909 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078455326 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102553703 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089087081 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09960215 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083365147 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082312348 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105362301 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112776902 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078746319 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082193377 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110044831 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083810875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093415881 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084464231 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102031273 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07929101 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101544266 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081317086 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10172376 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0865859 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103901299 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073040321 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100984038 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082984758 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077215141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09758419 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085305434 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102783846 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080952709 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108703456 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084851658 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10491048 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083086196 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103000779 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084470956 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10448564 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082560063 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104621945 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082238368 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097223412 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081941247 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077204361 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.10071947 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080601597 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103653869 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079282244 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105500724 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082335701 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099676023 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084874915 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104207716 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081317264 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099819484 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079623113 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082125983 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101228414 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.079306812 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102145617 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07718222 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107013182 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084235181 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107790063 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080538533 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095441462 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085306092 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101171672 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085791608 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08382451 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106438078 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080165424 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104193456 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082350179 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110070657 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077457653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110364541 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085490933 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100841317 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082470893 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100429608 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081909954 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098130739 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08251085 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104088062 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.080776996 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082266689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104397158 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081871665 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100073528 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080993735 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105718165 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079865324 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104904829 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074066587 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09809471 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080361386 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083688037 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108377881 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084430993 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103196451 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081596138 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106470996 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081694804 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096210948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087902295 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106474513 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084842049 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108695027 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079168834 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100613013 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090863142 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092893917 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082902688 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080615268 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097980754 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095142709 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105449333 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08790758 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099634118 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079186209 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096521217 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085753651 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101578744 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07481352 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080275361 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103693383 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081625877 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10298051 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085088895 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102786303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084868152 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107965353 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083494762 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101494012 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08498231 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096467693 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079383924 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078070257 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103461329 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084569302 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097882604 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077198453 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103201217 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081943478 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099435811 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085273221 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100020407 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087896907 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082966434 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103571657 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087779942 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095436118 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.081763078 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104109819 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082779353 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099177514 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08419415 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103006873 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086407137 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107276707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084319608 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099348767 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084774073 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100000229 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08578303 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082498825 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105446814 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078385778 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106053002 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088024732 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100948437 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.081324971 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099790595 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08081261 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104486681 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085590711 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.101525874 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088437098 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101607104 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082252599 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085554309 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105085472 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0828839 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105800812 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08082855 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107408082 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078101608 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109200945 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07971797 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105724733 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081910971 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097365415 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084373091 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.1034254 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084099466 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084528921 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105662138 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078543926 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099746419 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080533069 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101973173 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089419952 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108437815 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082353401 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103965572 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079105826 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096900077 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086344914 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09583316 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082542124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.081474943 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106544287 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.081087675 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101174277 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082875758 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107889824 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086672253 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105334112 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077997843 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106009268 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085766508 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102559009 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081724641 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099546873 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086859173 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104623999 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082102778 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078715318 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110165846 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08433145 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106839892 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08137257 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101826196 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07998156 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099302732 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086241942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102648948 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088387246 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102991434 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083816448 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110255734 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079673244 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099088173 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09024175 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103171357 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0883992 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097694315 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082605505 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084763841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107061312 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078635126 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100659976 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077490233 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10276566 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079504197 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097535718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091173088 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107074887 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083119296 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102352166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084114696 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077451452 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099862072 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079452907 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106683441 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081975626 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11012686 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079348214 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099035512 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079387036 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103218119 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08493823 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083024339 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098376832 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.07862183 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100273184 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082810636 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108605879 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082638598 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103934344 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084240999 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102918177 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082432413 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108927897 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077721928 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083208676 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112108139 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10389319 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081673738 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084553311 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109479288 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08482988 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099495369 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084191831 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104461737 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080542247 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106614104 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086296873 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115343768 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083140762 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100559069 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083079277 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103721325 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08009647 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108352114 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086812953 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105752382 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08573633 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102363258 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088492372 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081752361 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106699613 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08158124 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103741713 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082350127 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101612778 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082243923 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098673058 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086382565 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106140703 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08451607 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107468071 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079710097 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110537525 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089655215 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105402095 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078047246 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.078660641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100938843 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078550631 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107260692 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079133109 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10235355 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083236632 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082770352 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102297343 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08537742 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103729196 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085615526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105519921 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07468805 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102860698 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084021721 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101192912 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077833069 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0839633 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10714475 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086437922 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111389782 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080585768 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10507002 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081321819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101682705 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079493134 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107678532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083586911 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103202025 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080873278 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083879268 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107415131 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083126589 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106977849 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087058173 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10456202 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089200091 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108969623 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076955285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09939434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085938728 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10262572 seconds)
  done (took 55.948371567 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149289916 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087167845 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075318137 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096777099 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123254901 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080967973 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096995565 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080800787 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099692073 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090759863 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096131555 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07709874 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117870224 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125574117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12085199 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092501958 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095795228 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081455454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095585986 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080919082 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117293074 seconds)
  done (took 2.967343754 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1039517 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116231329 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113122262 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098325346 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108933943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113212038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095107109 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115014385 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118515502 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089439134 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119463355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11432356 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089334805 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11043678 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087985215 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112262937 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117932551 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086607777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116226888 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113419948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091118321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113487343 seconds)
  done (took 3.22957427 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090478231 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082998605 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106393121 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075310407 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104800127 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075317649 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108790184 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07878605 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108634821 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.080052712 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078322492 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100435946 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084817263 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.096154714 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.079605513 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.097798236 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155329093 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089255796 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104853107 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08553352 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098318567 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083154568 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077875185 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.100030557 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.078390139 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114061978 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085050458 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.105875615 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084219035 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.099232241 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085302832 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.076894809 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.102926703 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07967498 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0999971 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.078923812 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103761097 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084871802 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077367846 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102454769 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07986177 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100547667 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084614301 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10268272 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08131971 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097509848 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081752348 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082565771 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097631973 seconds)
  done (took 5.396780841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115319431 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132903219 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105761017 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145427102 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120179914 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093101148 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10697846 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144816122 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078816989 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105298779 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.100296467 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120851666 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107060748 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090670134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.1059955 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085280822 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10847366 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079965706 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112138166 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079713828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112813249 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108643645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100111674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11926461 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110620769 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083662158 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102474705 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090383054 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116860703 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111288105 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091036845 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112484835 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119536463 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083900855 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101244713 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08836353 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12280814 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084786344 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108666626 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0786519 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108588009 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089333826 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110278298 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124075685 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084867506 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107749017 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085000982 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099800361 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117102433 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088009641 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116617806 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119213337 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090312691 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105686744 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090717652 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120369341 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084490572 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105137102 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087183691 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117658867 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100117162 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089728123 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119310151 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085886461 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115408274 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119481552 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085843863 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111260735 seconds)
  done (took 8.10187598 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114460983 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111143254 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100482257 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122747963 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111446722 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089583301 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111445189 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089500928 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111560907 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117093544 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089942576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158091019 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.107379394 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096134202 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111764078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089538168 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111668617 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089507723 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112957142 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088412735 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11137727 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121977982 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089513517 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122280884 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124442166 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086386788 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111848791 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08967042 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122151132 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111357887 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124754284 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091094853 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111086929 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099981825 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125037329 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111528562 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084179612 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112371053 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090142839 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111233913 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086696017 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123367729 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111132885 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087793724 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111247342 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090821173 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123576659 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125187475 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094218772 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119179898 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11102143 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101141112 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112177821 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109243115 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103473428 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129823595 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123304533 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121791974 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091400683 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122370842 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121390483 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107931334 seconds)
  done (took 7.617800434 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11416267 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117882001 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.125076184 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07682769 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101212215 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090462458 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101426565 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080051588 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116991303 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095608901 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120611544 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111661962 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093715227 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120477121 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111499968 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09375892 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111818791 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110410914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096273907 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111332269 seconds)
  done (took 3.007595287 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091699541 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124101451 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082564509 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112109979 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084562088 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111389702 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084071338 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106999471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08347166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107348189 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094461676 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116852572 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103343397 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08922845 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116320666 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0885816 seconds)
  done (took 2.503176307 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094915532 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125129666 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123916008 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082001953 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101301309 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079057153 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083385007 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100474597 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077171114 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120805981 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082106116 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110594523 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083768487 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102964419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.078400204 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109665364 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077657061 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.101694053 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.083653796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12312357 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092815684 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105332031 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084630621 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105939585 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.080996752 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110631381 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.102965036 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079537596 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10196548 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086105419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103068491 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091360098 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099858618 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.081440839 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100628927 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080271625 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.083396354 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107145912 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108057806 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086427234 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079337345 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10383616 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083537787 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105068929 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076939678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107453478 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.078032911 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11023632 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.079647002 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104612798 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084614585 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106752012 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08261898 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115113311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.085475831 seconds)
  done (took 6.148405282 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098019753 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107481758 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077483569 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078984535 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107659685 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083996049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108375422 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083704309 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105852622 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079415655 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105955985 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086071344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105938728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086004345 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106340134 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086149416 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099149953 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083805371 seconds)
  done (took 2.604466991 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088791877 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081154951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.112506396 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081404757 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105068188 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083598089 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100174425 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080979985 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102068585 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082662688 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10396869 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084890813 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101324099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085971362 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081261365 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105555644 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084231343 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102204333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081581886 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100915253 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084487478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101777956 seconds)
  done (took 2.952171646 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121092659 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123799454 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090177521 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.21256683 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.124149294 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107878067 seconds)
  done (took 1.691470338 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107443727 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141507817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083014763 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107125642 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094912059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109845747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086360965 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109576872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120752075 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12119325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08869347 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121797881 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097638103 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120272612 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117201479 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09501357 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109050328 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10778156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085227868 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129929368 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086773927 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121269498 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108227618 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088520968 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108508845 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096805663 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120789454 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123566289 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085645791 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122727601 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116634372 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086794708 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120992258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122887842 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084247255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122725255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108390444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109340456 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116924483 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119727633 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08515533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11766698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099021471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115821486 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121723147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087397226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116500704 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108772979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088266655 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137181358 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11713865 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097699701 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117113011 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120856477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099289223 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136969025 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123660806 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120541911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116380284 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100970899 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120206408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117364743 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098271206 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124330192 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117361161 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120180413 seconds)
  done (took 8.173037416 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122614513 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106371712 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086716985 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12417316 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12080737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08717809 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110108468 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108248732 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088443806 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104926484 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153661118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089234737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120141352 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118489105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088209728 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10841704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087637727 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120354431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084029027 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136698343 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109482774 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119588171 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097905279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12086203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123236406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115775247 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088674722 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108917114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088414017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109651679 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094307161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109333972 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120361971 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084581885 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120304339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086700333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109903924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115951874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088392825 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11688732 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118857695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108551412 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109566134 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087361744 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124977822 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110676501 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08695609 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107173166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087069819 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107529619 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123739929 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100427526 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123094348 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12118502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10856939 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088933673 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109534621 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088390297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109327967 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095277385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121580949 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109283453 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138123129 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088523737 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10933181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098723323 seconds)
  done (took 7.994595832 seconds)
done (took 153.620487102 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099391189 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138359845 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095996416 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167430865 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083354106 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138103172 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116334619 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118723336 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083566181 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082431815 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105923834 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084439622 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17004777 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082692375 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104744766 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085454088 seconds)
  done (took 2.670989775 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179832993 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.295903484 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099759715 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103949011 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087527133 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105145621 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081507826 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089489566 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107066062 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081630854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105262906 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083791326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.103723621 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083695891 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.105076848 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083941297 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081988169 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.105404666 seconds)
  done (took 2.908578389 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113696704 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155379986 seconds)
  done (took 1.193702303 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119041031 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17672018 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273671941 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154704961 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.135445118 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097188368 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155383071 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126242184 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204245398 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128389114 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128057746 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090232251 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138991262 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092556561 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114371237 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087999362 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140233633 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112269238 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092865839 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114051839 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115514658 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104671068 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092334216 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113085466 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188806147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126924065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.082849391 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080728115 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114661295 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113132027 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091139771 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119288124 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10488888 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171840546 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095613317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.150303672 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.113565321 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08852272 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114045482 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088691448 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116496842 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11435162 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.098339033 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112009987 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082594812 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.111484879 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085781387 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081835386 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113665146 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.090671346 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113800259 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110400224 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150933525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091360891 seconds)
  done (took 7.349148686 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.821913995 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152510479 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087226921 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.92179885 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137361876 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100650859 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.806536724 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134507542 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231882553 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.798928656 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128646504 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120245616 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206095808 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248515021 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.897660164 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312812331 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692408745 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.341348921 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139111782 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147629654 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094426963 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135796164 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127511091 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.406564727 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.111129317 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087857358 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115191176 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117617738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158396565 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087912466 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112277637 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176498012 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.240889611 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204567158 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089254387 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107815653 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08734346 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163058576 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266591435 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214269308 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151700802 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106448636 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085789737 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119932845 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128406259 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084977929 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159915948 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.16720252 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188982349 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091011867 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11843949 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096044942 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118293024 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159059734 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083501567 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315586378 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311631005 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108956289 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095753767 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124806028 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239920861 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109344727 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225393893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112743703 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21489986 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085446232 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796556026 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16209793 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108273533 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093095877 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114954707 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09140318 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117735225 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163255197 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387168737 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099642388 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113037575 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085011049 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226668866 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08799213 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107270687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160826017 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088023806 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116483446 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099292748 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119958971 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164839363 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.224448557 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120348319 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116658453 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090638088 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12074571 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088076487 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207858955 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219544777 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156689824 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207766969 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119512948 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159868798 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161003323 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117392422 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166394733 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115411738 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100062392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1198231 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21697768 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138426564 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087074071 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111978729 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093298268 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141328153 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08916263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116971431 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164020697 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479363118 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161687186 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083472067 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112122468 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094258438 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158346964 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115313815 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236444264 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119077615 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161683406 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115688531 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08340067 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116612561 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.15958925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11957953 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094650371 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119658151 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092747561 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248202568 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196197997 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120931892 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21861002 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176983083 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116378405 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167870507 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116564562 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165403618 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095546827 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118178309 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087430077 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786056567 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12071381 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093832545 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114169692 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182271369 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087035564 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085627145 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109581191 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083468263 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775772914 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08840621 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107626882 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087507644 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116734196 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093030231 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115108465 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090161753 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181755146 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207048369 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119777702 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115516023 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087467481 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158340317 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111352487 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.088361921 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109687817 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088706815 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117436813 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091087876 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109627471 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168650824 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157218966 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220538351 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576388977 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109169464 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088626728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230296426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086225936 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285737923 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116939413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204525925 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186284912 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085540775 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308978564 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165318924 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183608366 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089833875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167053918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106874258 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091871193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180944901 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087425459 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115446329 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156915051 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09917091 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122142991 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925551633 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08736999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223010464 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107293198 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165826192 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087913818 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11949385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291071847 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086887785 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127292678 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159616486 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112020699 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0896067 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.71442367 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111944287 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096451995 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117010268 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223386748 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162398285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115596624 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094629724 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119206236 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160594402 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209998627 seconds)
  done (took 42.828582381 seconds)
done (took 57.873035256 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283546394 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213791032 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268822425 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168583146 seconds)
  done (took 1.960901448 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179635998 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123358734 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.14561484 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104732059 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.128873811 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.105506324 seconds)
  done (took 1.737807986 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.376838761 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280752699 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244523205 seconds)
  done (took 1.856884163 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.25388053 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269959786 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327612935 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.428935233 seconds)
  done (took 2.331510465 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206493658 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123269023 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.098611839 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.137462404 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.145053419 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211967623 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142451005 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153080918 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105208892 seconds)
  done (took 2.324863275 seconds)
done (took 11.165472693 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.171835928 seconds)
    (2/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.238102999 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.258124521 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.203537425 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129615746 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.299935921 seconds)
    (7/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.129337949 seconds)
    (8/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103111041 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.128209409 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088377742 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122730641 seconds)
    (12/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090424156 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.158152146 seconds)
    (14/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121656506 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09144281 seconds)
    (16/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.243914495 seconds)
    (17/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.223912195 seconds)
    (18/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.171101241 seconds)
    (19/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083500871 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.178628976 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139866764 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.253220388 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149540147 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.149071569 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.088320323 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.20259283 seconds)
    (27/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18717691 seconds)
    (28/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099208416 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142008804 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.191750353 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.23444282 seconds)
    (32/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160962185 seconds)
    (33/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117705741 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089377701 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120043002 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0843863 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13775029 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.157730176 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18672004 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191504997 seconds)
    (41/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.23193045 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136562866 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112233666 seconds)
    (44/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.175350874 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124757512 seconds)
    (46/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22630094 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109973912 seconds)
    (48/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.177104228 seconds)
    (49/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.106023018 seconds)
    (50/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.139399542 seconds)
    (51/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106370468 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08370199 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.207320095 seconds)
    (54/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.193058652 seconds)
    (55/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093073182 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115018746 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098333493 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131628316 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.141462251 seconds)
    (60/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092240922 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191649356 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089140296 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.188771835 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.080445711 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231610386 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118183033 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110234353 seconds)
    (68/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117578783 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081845065 seconds)
    (70/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.188795734 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16733223 seconds)
    (72/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094948328 seconds)
    (73/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.20225721 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108664249 seconds)
    (75/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086902891 seconds)
    (76/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.1638312 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086969176 seconds)
    (78/286) benchmarking ("sort", Float64, false)...
    done (took 0.176231764 seconds)
    (79/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081090804 seconds)
    (80/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136488468 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175450263 seconds)
    (82/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.085262137 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.082092835 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.166950248 seconds)
    (85/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.089562919 seconds)
    (86/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.195136642 seconds)
    (87/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116622376 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099226295 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.134889999 seconds)
    (90/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082477706 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.095534882 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072349127 seconds)
    (93/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080900766 seconds)
    (94/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107488636 seconds)
    (95/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.090424091 seconds)
    (96/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.093780589 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.071004781 seconds)
    (98/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.185759322 seconds)
    (99/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.090275465 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117128971 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083673283 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177300679 seconds)
    (103/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07115256 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189316294 seconds)
    (105/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090810557 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095827336 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091445252 seconds)
    (108/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.194209103 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082517251 seconds)
    (110/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.209875355 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 0.239826405 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108186753 seconds)
    (113/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.170890672 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.182237728 seconds)
    (115/286) benchmarking ("sort", Int8, true)...
    done (took 0.228482131 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107682716 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094934699 seconds)
    (118/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085215034 seconds)
    (119/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11613854 seconds)
    (120/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071186034 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.098459046 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.187715919 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09352648 seconds)
    (124/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.116869734 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.170749598 seconds)
    (126/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118907204 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.083308959 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.115928045 seconds)
    (129/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177099098 seconds)
    (130/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.12964999 seconds)
    (131/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09867658 seconds)
    (132/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15376841 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128056056 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089127594 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115562116 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175401329 seconds)
    (137/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.140312666 seconds)
    (138/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120138804 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148403614 seconds)
    (140/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.105380653 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.091575999 seconds)
    (142/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109910518 seconds)
    (143/286) benchmarking ("sort", Int8, false)...
    done (took 0.195764667 seconds)
    (144/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.135639408 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.098110009 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.08923914 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107530478 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091224209 seconds)
    (149/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078877604 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.188706083 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11370652 seconds)
    (152/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073839368 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08351599 seconds)
    (154/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121532658 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093967064 seconds)
    (156/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.096035689 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083762083 seconds)
    (158/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07137508 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122880862 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099388456 seconds)
    (161/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117438009 seconds)
    (162/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.085921987 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134694768 seconds)
    (164/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072577361 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110580903 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.190853699 seconds)
    (167/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084008845 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.189399059 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087001816 seconds)
    (170/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108446036 seconds)
    (171/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.085418545 seconds)
    (172/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.120167844 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.095742954 seconds)
    (174/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.080599195 seconds)
    (175/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.09675113 seconds)
    (176/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.138151921 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114963135 seconds)
    (178/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089873665 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.10845739 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074024215 seconds)
    (181/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109669962 seconds)
    (182/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113772206 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11879433 seconds)
    (184/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178934969 seconds)
    (185/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.095646022 seconds)
    (186/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.085549757 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107493301 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.109850645 seconds)
    (189/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094336087 seconds)
    (190/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086989044 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.231315456 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081784284 seconds)
    (193/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110754106 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074185518 seconds)
    (195/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072964862 seconds)
    (196/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.162654147 seconds)
    (197/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.244525821 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11336702 seconds)
    (199/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.13002876 seconds)
    (200/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.109559424 seconds)
    (201/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075212962 seconds)
    (202/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071775211 seconds)
    (203/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.097077943 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074223393 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116703756 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092430198 seconds)
    (207/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071369991 seconds)
    (208/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.105486476 seconds)
    (209/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.071514464 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094336212 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085539231 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076219873 seconds)
    (213/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.164494976 seconds)
    (214/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131602349 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.083632282 seconds)
    (216/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07114595 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107074155 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.107727036 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10835849 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.073155779 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119548022 seconds)
    (222/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071411673 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083264139 seconds)
    (224/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.15434804 seconds)
    (225/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.149741681 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075398728 seconds)
    (227/286) benchmarking ("sort", Float64, true)...
    done (took 0.240176762 seconds)
    (228/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.071663173 seconds)
    (229/286) benchmarking ("sort", BigInt, true)...
    done (took 0.246327747 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121797104 seconds)
    (231/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072474039 seconds)
    (232/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080894589 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.097906141 seconds)
    (234/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070550583 seconds)
    (235/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108087599 seconds)
    (236/286) benchmarking ("sort", Float32, false)...
    done (took 0.155660981 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134576195 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083365735 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.099416063 seconds)
    (240/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071822529 seconds)
    (241/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122063592 seconds)
    (242/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095869978 seconds)
    (243/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080068492 seconds)
    (244/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114444977 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089630892 seconds)
    (246/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.104594019 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.145185124 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109012962 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.091989815 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098994946 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110143932 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111402944 seconds)
    (253/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072394711 seconds)
    (254/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071353296 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.107559083 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072544894 seconds)
    (257/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106326653 seconds)
    (258/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.110680504 seconds)
    (259/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109684363 seconds)
    (260/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076466496 seconds)
    (261/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073491994 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117909554 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097807861 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107928967 seconds)
    (265/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187360462 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.087082434 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.082498629 seconds)
    (268/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.104712576 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093210725 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113253513 seconds)
    (271/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.087436703 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.081584781 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112811631 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071417846 seconds)
    (275/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.096121178 seconds)
    (276/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074476134 seconds)
    (277/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10786402 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112128242 seconds)
    (279/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.07193678 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.107603498 seconds)
    (281/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.085137982 seconds)
    (282/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.097499775 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074289939 seconds)
    (284/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07397304 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.111364195 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083441508 seconds)
  done (took 36.113804626 seconds)
done (took 37.077399275 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098049494 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150264025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094490868 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137443653 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.096775421 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.122886782 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092501483 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.121507232 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.09746448 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123130995 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095713159 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.098016558 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09652685 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119079127 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095616873 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139796196 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097802984 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090557006 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.113415786 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081532367 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112634048 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08265067 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110221346 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07456523 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095072199 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11743734 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089790411 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121042072 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.083452543 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109815235 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083327684 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116443957 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084009685 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096575412 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.115720798 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087373155 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121669383 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093667323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110899039 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084610617 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116686485 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087201836 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09043827 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.117945104 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084864304 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.108542967 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087991354 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123056718 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11662703 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114511867 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092618105 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118711158 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094204751 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.114625749 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.083958632 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.086940516 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.108938759 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115724319 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.113036564 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089115264 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116965687 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092305664 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.10798474 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087706582 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111707523 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095993846 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093874226 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108194717 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093669664 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114276335 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.084501172 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112856241 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083844402 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.083320222 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119181724 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.095237412 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108089604 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085437675 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115524617 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089323399 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10649013 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088224031 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.084601495 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11159421 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086736752 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097603531 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084282499 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090212562 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108938225 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087937685 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115537173 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091140621 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.10999597 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.095932499 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082525936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.109393557 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08416468 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108981093 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085840695 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081804572 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109782751 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086236582 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11864911 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085745322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.110171352 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096914679 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108027636 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.092135579 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08296092 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109112435 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100013447 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11969715 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08397291 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114749733 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084172104 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084835524 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109256393 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083513342 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10837935 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.084629684 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084935643 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109948174 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086317829 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.110871524 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097606287 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108282784 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084074507 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085755038 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109843758 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089472578 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110336387 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08430081 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109905469 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083416205 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086034537 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109912024 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.086052767 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111892962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087659077 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109704521 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088999881 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088272933 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111650255 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.083642623 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107730185 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079200437 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088433786 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112338691 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.085024663 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.109691853 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086087405 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108238541 seconds)
done (took 16.211412186 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085713285 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184328654 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145515476 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.118862989 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132111612 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083746467 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12178535 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.142859613 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.08650362 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143462624 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107628331 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130829718 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148482167 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084210491 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.084261792 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.11427222 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.085636349 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.127160683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147155286 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.107063538 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144509354 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.083206926 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.141271118 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133819446 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095484957 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.137121602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.086170587 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087207791 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113680538 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101504116 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131477847 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087781946 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110293183 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105736155 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127966468 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092197125 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110530735 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.092184392 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110334286 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.084896543 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133125264 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106880061 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.1162831 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090170806 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11446699 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093064049 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110696356 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094310583 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120314977 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089506862 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125335677 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113854659 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113997827 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101066794 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.10861515 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095084306 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126961623 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092011896 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110783198 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093189782 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109613664 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.088527824 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125121938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.109637025 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.114546695 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100177936 seconds)
  done (took 8.362775282 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104507535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14032778 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103043485 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129358499 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.084435164 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110359405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085947986 seconds)
  done (took 1.782280923 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104506465 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110566734 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137688884 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137488537 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109735555 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.138406123 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090738348 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.110656365 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106639333 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111417389 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111584902 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152256628 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086833524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119313399 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114467515 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.111528093 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112984663 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111054021 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089086432 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138813908 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08890086 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129408113 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.088024283 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111368709 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10498755 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.084569775 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160870043 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116248397 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083704868 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.087923386 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110484691 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152211837 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104932641 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12069911 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085956396 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131096814 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.104498979 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108732673 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.103902416 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115878136 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.104797069 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085679099 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114065716 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084054689 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116151449 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099862604 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.115109812 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087763832 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087493019 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136733084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085866066 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130417317 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085747695 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116460873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.087755893 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115127575 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.095832278 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112255236 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110793375 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083349664 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133454398 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131159334 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104484708 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131153978 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088976942 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128202073 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1042365 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08820079 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114500098 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.089298186 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132146191 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.083429591 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114549953 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099965616 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113118802 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114056154 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13907441 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088154135 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122778431 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086972777 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.086065142 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115429302 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11202557 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1189363 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.086238107 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11876058 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089436415 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.109746804 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.085987504 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088897685 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110391469 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.087751475 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11482578 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086866149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11450715 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107362389 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113220304 seconds)
  done (took 11.537034283 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088182294 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086139039 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116623722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087587539 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113595871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087860174 seconds)
  done (took 1.609353244 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117957174 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113450264 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100790096 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116998228 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129661649 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137418201 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110562954 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122732588 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.128845965 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099451982 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138357276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112804621 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143252402 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.091622109 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137055836 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090442871 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.138400209 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092359893 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.123567534 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09224164 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130392187 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09152591 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11845733 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105454041 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122694496 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090595646 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118740688 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.098166956 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.124185709 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095493277 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117975873 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096118081 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118955603 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095471896 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.138695779 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117445915 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092218224 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121894026 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094494208 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120734841 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.115074996 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117052934 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.098998126 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123195607 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.097338542 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118461936 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098329054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118244525 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111246271 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124841635 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097201626 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.1174034 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096252818 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123935056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092415754 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122580683 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098157427 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138711763 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091411766 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119853163 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088826436 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123370581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095685811 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123556633 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095781092 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124869753 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091957125 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119049958 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092435488 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118155908 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0975931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.1151367 seconds)
  done (took 9.091773321 seconds)
done (took 33.393008932 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694135949 seconds)
  done (took 1.722344482 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.824691387 seconds)
  done (took 1.854917958 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.308126133 seconds)
  done (took 18.36838423 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.474142797 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.556834485 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.981017434 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.165460248 seconds)
  done (took 3.206599598 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.981198095 seconds)
  done (took 2.030387931 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284790143 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2348404 seconds)
  done (took 1.555316861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.78555039 seconds)
  done (took 1.83232638 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.466297086 seconds)
  done (took 2.507606828 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332144985 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157372198 seconds)
  done (took 1.545500374 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.572850852 seconds)
  done (took 1.625594796 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.234544291 seconds)
  done (took 12.284885688 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243829404 seconds)
  done (took 1.302379117 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292901914 seconds)
  done (took 1.341877999 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.629757665 seconds)
  done (took 4.679501373 seconds)
done (took 56.894644777 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098190401 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098901142 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125610055 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096357949 seconds)
  done (took 1.463072521 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10380331 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11812008 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103505544 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118190011 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104103138 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118723327 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096775055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129479951 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092767376 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.119972599 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093704027 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091249775 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124153308 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120212771 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091615317 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095649355 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128281532 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092730246 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124771592 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092952106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116866342 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095074908 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124488429 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091005857 seconds)
  done (took 3.645721184 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098446862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090646444 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120920863 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089782328 seconds)
  done (took 1.459643227 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098495685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128789504 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104250289 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123088086 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.105031767 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.128766728 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089259077 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088014862 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118045829 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095593429 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114087619 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.111849131 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130176744 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09584236 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126231735 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.084796024 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114489929 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.103092807 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124210695 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097203696 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115647659 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097078947 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.112019569 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.105541196 seconds)
  done (took 3.672654237 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170767111 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125837134 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.109258256 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.119466242 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.130258049 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139765546 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084048181 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140283778 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084342453 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127614714 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089096575 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159021882 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125570996 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.0857005 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084341064 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.111652485 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097454544 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12577512 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.087862724 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125994356 seconds)
  done (took 3.387869028 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096075492 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088803576 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112270615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088685844 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123267006 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093099923 seconds)
  done (took 1.659385487 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095105203 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086064785 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118431162 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08856712 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11833302 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086271925 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.111665341 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.088592918 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087091409 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112788677 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089631164 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112251609 seconds)
  done (took 2.257701614 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.519824104 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117960743 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089436683 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113418131 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096258495 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.112757403 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102222147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.114372929 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113923363 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.112019705 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086731664 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087618922 seconds)
  done (took 2.723423034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202619075 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097072044 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259966744 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347673683 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158345963 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161739478 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277851722 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166383977 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176109096 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14033492 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193807042 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154868956 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125257606 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173623604 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138732053 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.152985385 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170934025 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18863905 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119340243 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225376792 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158235768 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137493579 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177305444 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150900246 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136987604 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157853437 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092689988 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128384883 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16914327 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166471682 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171441371 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146031235 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113009126 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.460802126 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204110943 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173055986 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28204697 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136233262 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176541672 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139181627 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248119699 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11087377 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215697146 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124822197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130603933 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176585683 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318473574 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173055783 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132300543 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140962987 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177022964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17598712 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174640886 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10857082 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32547077 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122155227 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142960819 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183723646 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178896191 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188287815 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165119019 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118102185 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184703545 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183093359 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177390689 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14122203 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161342012 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098070997 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168494394 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191929247 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172798671 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161178303 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181615387 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137653723 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160384598 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170450793 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152088151 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145703116 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156765346 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120088529 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148420783 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110395305 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130368277 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.165881899 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123925318 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196845177 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133348916 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.170070448 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199321111 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129498213 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158873002 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160805988 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159783614 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145785412 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08834536 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145361212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150153792 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154438829 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103649714 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156774689 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139381767 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099206009 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150728753 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09388783 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156519642 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126793947 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331491531 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160753371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124422075 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133226295 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147462837 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14862264 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166478926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181653369 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13162241 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105428719 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191927039 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156081616 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132202353 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172878186 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179863215 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126367261 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13723914 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163881503 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186065309 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13903635 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185846255 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113141345 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134529239 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139026034 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128447642 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15566289 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15769072 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130199319 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122728299 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216765722 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097015456 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136483835 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171127775 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099338299 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128375984 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113197688 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136614385 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133213284 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111734003 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136064319 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152158133 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154771824 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125855753 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150802281 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139868921 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186264076 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13214759 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.121953266 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145828547 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.090540099 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169305091 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182163472 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13007838 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19240348 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16185001 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198143757 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162798326 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130870063 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175358649 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099988297 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119203845 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161397285 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128180745 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159184678 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177309652 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221533582 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16305976 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120975198 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148149489 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162500169 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164632829 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14931016 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107415277 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160512771 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155338477 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093222781 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124651113 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098142344 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138919496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130262846 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106623744 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174668038 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163177941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213677657 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131444831 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141125888 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180653854 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124829647 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159972332 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.370515226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139476175 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179792303 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179938215 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163133323 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139097616 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168396988 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093118685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094948172 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133443713 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161438261 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133493635 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106797753 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139977717 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180890242 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.328915913 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148499519 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228615467 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164881084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18972304 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093816761 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168060411 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166634363 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128071102 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.176182188 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132086187 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.121247359 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177167662 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144965494 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180381221 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160581075 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164822475 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188375056 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.14683647 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102417062 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147356167 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162163267 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108948646 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165072418 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145644255 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134963013 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314347505 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.097010543 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125504563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17046926 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143067133 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171193906 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14530098 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162500016 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099150953 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139821114 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155427713 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117664072 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114492866 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332100902 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178745388 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144722555 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315310399 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170066015 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130484687 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311881 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188553803 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.362969608 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1086499 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141625447 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158930185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158599349 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320784894 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175559015 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144361673 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174212826 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127293769 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134509618 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134725356 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119545509 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149413195 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140038995 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103767184 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15213391 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134455594 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172600449 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111120368 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155881246 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160930926 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149826214 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.114174484 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144189945 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196466913 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157134407 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172988925 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.14463847 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13491157 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221528805 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096277264 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127297395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098421803 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177356243 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130975005 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127195058 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.211700796 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196967414 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160522613 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162662074 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109859164 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118419991 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129579159 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14698331 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224300862 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112707999 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135977705 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18525448 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142169532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102650837 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159793859 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290334346 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145496011 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171687041 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084388356 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279673511 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126875504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103165411 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160450415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170101742 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13551558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.147399895 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163591605 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14248687 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130600632 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110901911 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188586092 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229977435 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136357945 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168487117 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132566758 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158124631 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318390351 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173509221 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144700953 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104748797 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162489227 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182014246 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.18353403 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133426576 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160950372 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131759347 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157628477 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16422905 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136195175 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195692625 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129179302 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161626503 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110819396 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123315493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155608701 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.184885431 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104258135 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171917245 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156980327 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132852634 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09773407 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149288527 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15687426 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112873111 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126366387 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170588094 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094262135 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160329746 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176002379 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131791392 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125900255 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145922669 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135252009 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112840449 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142886639 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135593917 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136895514 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180101519 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129003955 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175137495 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170126587 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161631684 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316826403 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140314371 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63647439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128523673 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181058322 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145391797 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177675447 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119983979 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164247822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160248636 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148694077 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161415418 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120069381 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230866908 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162584335 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155399531 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103292535 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14288995 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142349134 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.102133452 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150925074 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161565443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139052988 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107953774 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156235102 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142650663 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.104471616 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139347288 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182152773 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118811102 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170649683 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178611956 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138783663 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164646671 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165459956 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099796093 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158091344 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170195439 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142003019 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14794656 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104369125 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134720388 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178278988 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094445023 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158250883 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158650456 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160289536 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13169951 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133288647 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157656375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139621508 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133779414 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130755331 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151558596 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154117101 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105109332 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126522194 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126356075 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153618755 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149053161 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096594928 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166536457 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182177084 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093479824 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132815206 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287274732 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159074144 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185927665 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112179628 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135091354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141786413 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116957569 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15165316 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158543414 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099137392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132384417 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129601421 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136691009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.147768874 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156561606 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18623602 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321710494 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194917911 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135490517 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28181263 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111956663 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154942399 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092792196 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129823669 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140528881 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106483377 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144359636 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190333625 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179934146 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145112961 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105314334 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127087806 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095944971 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131958201 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132266634 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152507051 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157531361 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141480632 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08531524 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143230112 seconds)
  done (took 76.557603839 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151175306 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134176996 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149181988 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202666363 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168982647 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253069957 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21072935 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238941067 seconds)
  done (took 2.654273065 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091899083 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144975084 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.126602349 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134853351 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.117483022 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116733569 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.303777751 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132600201 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115995602 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118183148 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.132262579 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118028214 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.533503678 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117099203 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.089482685 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.114232174 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116849561 seconds)
  done (took 3.764725321 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.205514327 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485438969 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.066475072 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195363692 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.181344022 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.093119928 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.728458701 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093082128 seconds)
  done (took 12.197423544 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.122071054 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.142373411 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.134386972 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16229798 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.118514248 seconds)
  done (took 1.841894226 seconds)
done (took 118.329903097 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095137212 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124267831 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097054812 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127913957 seconds)
  done (took 1.586888763 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102314259 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074542725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108316146 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.079286718 seconds)
  done (took 1.514670802 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.192887101 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168840673 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404782314 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076689942 seconds)
  done (took 1.665933862 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112025522 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130059427 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103276298 seconds)
  done (took 1.507371294 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.104271421 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098416279 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.128314555 seconds)
  done (took 1.489524105 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.102237104 seconds)
  done (took 1.254874382 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109335784 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137577441 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110396039 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136624323 seconds)
  done (took 1.651712032 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096057652 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09657658 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138898606 seconds)
  done (took 1.489224219 seconds)
done (took 13.6792719 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105076841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514517751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387159479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136855413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695001768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.407999608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.008132765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145739677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167793021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088687608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135640399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670217281 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028024795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.434793528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015144722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340148435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697914864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09005567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116794194 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089741157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020208461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090459104 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088260313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119242396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668812479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42286429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089875613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369567003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089603014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125402614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376964307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116449904 seconds)
  done (took 16.999420727 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096165027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177714131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.101072391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121589194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096880338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119414924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.094573608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08984439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182208646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11968381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1067087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119112339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.094051255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118969397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1102324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118409828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090545196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117058045 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091255652 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089149928 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138622675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088945145 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119424114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089206068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118522732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102924825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119503217 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09054007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117788544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099754989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090983516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120023284 seconds)
  done (took 4.70868795 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143699961 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187917704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12953916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126244391 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173087501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091848951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199018337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145722753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185169537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090438354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135944704 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090462878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153769269 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090472452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139637237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.090158923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118980387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090730053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11701253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.091786388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109199159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11975041 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089884947 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120029494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089878643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134218227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091235274 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118683289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090322407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127200419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09353235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117970145 seconds)
  done (took 5.059270112 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095308486 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094191587 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13541801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105451753 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120945748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.093035066 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.123098607 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.092118963 seconds)
  done (took 2.022701247 seconds)
done (took 29.947596861 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.108944127 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.095433304 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.134115918 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102135095 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.130140343 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.10230737 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119086141 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101749208 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132074267 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098944539 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134856085 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.089252275 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090697239 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119721548 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103268409 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124180152 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103459492 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.129491791 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.104102834 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133449037 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.091140174 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130449597 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100866017 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133080823 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105274984 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133054171 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.107689793 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125276764 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.091908841 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090457761 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133537984 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110489423 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123133553 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105590558 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125690044 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093962518 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120913148 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094882232 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132689983 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103079006 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125799962 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103616704 seconds)
  done (took 5.897371662 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11692305 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148482425 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112501018 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.114768351 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092274278 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.112292385 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.11760129 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082571098 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114990611 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114593268 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.108967541 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08124492 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.111818071 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.077208246 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080379729 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.109498649 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083576773 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.107238793 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.082132035 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080073516 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.113559272 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076979021 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08258689 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.11265594 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078573595 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.115279314 seconds)
  done (took 3.804664939 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097471519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104824672 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141107179 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.174972967 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123881489 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.128237723 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098735362 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139109613 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106153967 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119763484 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092123288 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147968486 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108205174 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126962233 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093875052 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104136399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134238393 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090321055 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125100093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109616341 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136502317 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.0998911 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139177853 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100476695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118898633 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092361036 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123090355 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100948473 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096485722 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127999008 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095402916 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122404152 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091253715 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.132618455 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.095778729 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.121216639 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109210165 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129264188 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.09982716 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120020662 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098219106 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093472946 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142425987 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159792403 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090616293 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125743118 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094806837 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099016397 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122068551 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108072677 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130212461 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089724859 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122494009 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091745485 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090283404 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137448448 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.091247614 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122078524 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102036629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126488544 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.102826381 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124535484 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106181741 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120095072 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097290619 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090778737 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121171021 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088019568 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143457319 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096296311 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163449724 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09030772 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121702652 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098650911 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127523884 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095985777 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119537553 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105914722 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129422896 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094676171 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129749142 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092990071 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092206707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138965441 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091394722 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121473352 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090965566 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125678787 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093298439 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090168219 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134962951 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08883154 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123502102 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103210697 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120000214 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090908897 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125681368 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.095682359 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117313314 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104803844 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124790576 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.091057704 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129391933 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092017408 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091936181 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130330041 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094158478 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119911236 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095573186 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126122374 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.091404236 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122911412 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094643092 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091544166 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130476061 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097685571 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124162859 seconds)
  done (took 14.291095082 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232125328 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217642079 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191207422 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301172454 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10320719 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146712687 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214178523 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125362829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121924521 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160398741 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171336867 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.153286468 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171577562 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181920815 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173501915 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119366235 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110767421 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.168206841 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217094447 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.263718068 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143203622 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.097893916 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162486204 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160934746 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134445781 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.100270672 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137824821 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102524671 seconds)
  done (took 5.768962488 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108023538 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154401379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095343164 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142924504 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116603732 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121272071 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094210674 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.123026696 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103501558 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1362281 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089865819 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127086931 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097340203 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130418856 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091146738 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.130499297 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100343446 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.121941611 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.095793113 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093797128 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132123228 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137936761 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09542514 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088853554 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131248221 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.088974493 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.12336064 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14350325 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.09082602 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143093559 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08936846 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098594412 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136084695 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091093047 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121268822 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092570949 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122521481 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093216536 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092253665 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119705596 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.08896329 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.113153945 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.090204479 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137322361 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096873143 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115299655 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.098531743 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126573209 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09210571 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087763157 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.124760364 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093459939 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124497635 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099178012 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122647325 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.093110003 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092962627 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121699928 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097319943 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124004887 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088826168 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.11743751 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096810865 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123681226 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100488668 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094759771 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119975219 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092333449 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125763935 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097658526 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122801116 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098371664 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087439528 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124386388 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.092903874 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127439746 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094082783 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120113695 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092133953 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090609527 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.111400788 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09045036 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.108200216 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094906901 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088135717 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120295761 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093362553 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128484865 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107252084 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.123780585 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09857556 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123065256 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089961093 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12329308 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08863504 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093219181 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138470317 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141427545 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090784285 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118874896 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106284967 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.092103636 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121233616 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079807956 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130006981 seconds)
  done (took 12.656563901 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13081172 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152752417 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092926078 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140020719 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124484034 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158087353 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.097370985 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130721467 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.092400695 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141804116 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091177092 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130671236 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092475158 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136454353 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126584186 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132548057 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.093107684 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.136542971 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095406736 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169519352 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109523616 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141659645 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107899099 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123230642 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096426546 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139481374 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129071666 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.137665379 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103839831 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141707547 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104906931 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161258338 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140848869 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096830401 seconds)
  done (took 5.401006219 seconds)
done (took 48.989519218 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.28534302 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.489658923 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.252055914 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.169151576 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.301348403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.278996781 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.266904189 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.254573622 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.540432956 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.25671691 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.497276005 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.874382889 seconds)
done (took 59.654845984 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.263069623 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.416650695 seconds)
    (2/2) benchmarking "String"...
    done (took 1.564285699 seconds)
  done (took 4.165780959 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.858435801 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.218605392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.516546945 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.252880635 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.254385773 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.546104144 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.072602098 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.64207724 seconds)
  done (took 28.687988409 seconds)
done (took 43.161681336 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.27887683 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.312006745 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.289628206 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.241265621 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.395362044 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.280495226 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.535743584 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.49497838 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.261177081 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.248619385 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.278650486 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.260796161 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.277602395 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.546383962 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.266491143 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.254458651 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.318476551 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.75858826 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.672301248 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.268576904 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.25913968 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.279458679 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.2754276 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.263363546 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.269130141 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.269818973 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.26704272 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.276109133 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.918184949 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.260521117 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.274564859 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.739812111 seconds)
  done (took 193.779252244 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.257307165 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.347656162 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.467009462 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.302225283 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.828588424 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.457217788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.406729628 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.916658872 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.279317921 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.265800235 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.500751025 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.25625853 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.558903625 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.229091253 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.286902672 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.337655242 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.577890576 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.570514231 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.297776398 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.415697659 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.281557744 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.423553817 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.350492554 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.467215853 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.300484303 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.325792387 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.28536371 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.263852064 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.450767512 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.481721251 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.289017928 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.307624145 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.908020462 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.110417869 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.257219654 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.268264516 seconds)
  done (took 152.519421204 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.256942423 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.259456034 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257930752 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.290960702 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.258420305 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859927212 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.844025807 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.781442422 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.653731053 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.698201569 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.538400654 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.259334328 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353830247 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.272031758 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.261363599 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.275061294 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.285455835 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.262301758 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259369592 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84254724 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.272289362 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.313963033 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.439731838 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.279191167 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293944028 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.658816474 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259857012 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293293627 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.595918597 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.31274659 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.260427952 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.675289706 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.649700332 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374488275 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262304392 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293216006 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.26042608 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.543238826 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.261616088 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.261382507 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.264215832 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.973165927 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.263637866 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.864284247 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.263522367 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.230885397 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.261413475 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.260887244 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.262056781 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.397416241 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.003849544 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.281462197 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.260375263 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.262870119 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.26051577 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257908156 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.292867187 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.303443407 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.372853911 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.257321884 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.259929588 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288894206 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.256577323 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.290360884 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.258589872 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.246972149 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.312006787 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.471758348 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819675609 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.25491538 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352496053 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375105879 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.254775901 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.254172325 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.254662195 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.254128817 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.364484899 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.254416274 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.25419483 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.671373615 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.43067108 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.273274413 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.637848685 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.355443711 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.25536999 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.668258095 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.258693933 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.25507828 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.003462273 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.25535198 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.352865068 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.255634427 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.254878249 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255850025 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.674263746 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820043082 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505041488 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.258505746 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.574910433 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.259667944 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.255721292 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.686530215 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.810212558 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.949635691 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.260013551 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367225028 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.433377603 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.274962689 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.255359142 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.639119936 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.260203107 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.310150084 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.256370641 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.654262626 seconds)
  done (took 371.890903038 seconds)
done (took 719.375085681 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.866181393 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.860825041 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.972840815 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850867702 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.806863477 seconds)
  done (took 10.544199055 seconds)
done (took 11.730413005 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.453812214 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.45215921 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321473253 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457339986 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290828484 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.472775766 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433206089 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.276537896 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.362921863 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.341363563 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.364674523 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312359847 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.296123508 seconds)
  done (took 19.023117121 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.592908987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.586539353 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320434857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.589866301 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.297917203 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.583952392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47103148 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.503728858 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486522506 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272117121 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271524906 seconds)
  done (took 17.164715726 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.591606958 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.620768506 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.325942227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.600161099 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300574392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.598955464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482806779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.483669256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.481366525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274086131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271384 seconds)
  done (took 17.21978069 seconds)
done (took 54.594798509 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.269344529 seconds)
  done (took 2.458335965 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.308871362 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.468829454 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.292700057 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.273585236 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.269781861 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.27913407 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.273898996 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.273235585 seconds)
  done (took 11.630621676 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.267316032 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.26943225 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.26705499 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.264047937 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.266042829 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.264559012 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.26510968 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.266416777 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.265206126 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.265126944 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.264923927 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.266877152 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.264862366 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.268803554 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.264903729 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.268069459 seconds)
  done (took 21.449421842 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.267444527 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.265247995 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.266369347 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.264992126 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.265309938 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.265680873 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.265814638 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.265617525 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.265766827 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.26575574 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.266635563 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.266045441 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.26607524 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.265927195 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.265691111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.26609848 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.265784901 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.266722074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.270327564 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.265989294 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.266165589 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.265759517 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.2664259 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.266925963 seconds)
  done (took 31.58141512 seconds)
done (took 68.307748622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.911565309 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.916988275 seconds)
  done (took 7.019722997 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.325389318 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.328186181 seconds)
  done (took 3.845720012 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.268037657 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.267761988 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.268265884 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.267711171 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.266950684 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.26991193 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.267278088 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.267459965 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.267425832 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.268106636 seconds)
  done (took 13.869493975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.26775394 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.267424209 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.265944433 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.267634602 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.267196034 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.265372785 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.267554938 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.267481832 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.267742954 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.265034421 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.26908975 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.265798888 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.266769533 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.264936598 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.267937696 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.265848115 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.265826553 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.265730443 seconds)
  done (took 23.991370698 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.280340409 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.288970946 seconds)
  done (took 3.760939928 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.394620536 seconds)
    (2/7) benchmarking "second"...
    done (took 1.306621647 seconds)
    (3/7) benchmarking "month"...
    done (took 1.374743516 seconds)
    (4/7) benchmarking "year"...
    done (took 1.363952951 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.320745529 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.285260195 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.307323035 seconds)
  done (took 10.54409694 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.271148431 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.474574462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.58040833 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.841724252 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.268973503 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.272263958 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.130580295 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.271911485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.274118787 seconds)
  done (took 14.576473001 seconds)
done (took 78.798156725 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273522289 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.262199473 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.533300618 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.272700604 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.281704924 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.60510686 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.28732109 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.39479032 seconds)
done (took 38.102341565 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.279158066 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.249778159 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.039097262 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.277518244 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.34100732 seconds)
  done (took 19.099368185 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.311146571 seconds)
    (2/2) benchmarking "read"...
    done (took 1.602427033 seconds)
  done (took 5.106224014 seconds)
done (took 31.676463935 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269645632 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.266345709 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.269855774 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.269846097 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.267811895 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.267884822 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.271254262 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.266937174 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.267420675 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.270255891 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.269537244 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.269641277 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.270106288 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.270658066 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270786732 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26854846 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267427428 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270355219 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.267615915 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268230852 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268735298 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270831294 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.267820781 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.268197542 seconds)
  done (took 31.648545102 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.271351738 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.269486265 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.270780949 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.270362503 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.269057457 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.271397378 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.271275372 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.268739266 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.270897571 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.27132213 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268145861 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.268325609 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.271485743 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.269826536 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270206053 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.268345388 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.271173176 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269492556 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272143976 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.268967183 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.270223425 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269461617 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.267999298 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270799088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.267483305 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267941149 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.270694369 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.268990401 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270987843 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.270756211 seconds)
  done (took 39.292858911 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.275508807 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.277289636 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.269621098 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.270711243 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.270292153 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.270292479 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.272184443 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.27031232 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.270310202 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.270750262 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.27012812 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.270311862 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.270633273 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.271046121 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.272416622 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.269820383 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.270466759 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.270768039 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.270373941 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.271409594 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.271221362 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.270040366 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.274378925 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.269369568 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.269832704 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.269889227 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.270334838 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.271254911 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.270684155 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.271555122 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.269939296 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.270720972 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.270674249 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.270453043 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.270002988 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.270632241 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.276224379 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.279304823 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.270541299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.27046057 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.270543648 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.270298344 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.271484889 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.270785431 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.271992211 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.271364951 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.271675438 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.272610924 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.270561542 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.270689438 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.27137115 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.271096533 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.270597316 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.271030363 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.272238158 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.271336697 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.272220777 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.272027825 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.272050129 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.272351547 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.272130092 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.272765796 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.272263846 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.271104328 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.271706021 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.272415432 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.27285544 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.27186799 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.270894489 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.272735061 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.273187398 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.273299591 seconds)
  done (took 92.743379649 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.272686483 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269396958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270045862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.270044083 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270544268 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27606286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.270534218 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273689547 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269704549 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273939525 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272935723 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27164783 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269735457 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273627109 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272702782 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269894626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27329276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27043437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.273190549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273795261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272430727 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270925979 seconds)
  done (took 29.176849428 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274305175 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27610863 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.27015288 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275346834 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273198153 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273993167 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274094123 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27569596 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274864371 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270538355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271831719 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27384389 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273455097 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270695333 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271582553 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272969941 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274302325 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273397839 seconds)
  done (took 24.116424508 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.272637161 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.272452236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.275049274 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.272243514 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.272105486 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.275166518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273046269 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275322889 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.275918531 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.274148866 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.274869992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275189248 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.275513815 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273039021 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275154472 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273162408 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.275705275 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273005243 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275455688 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27357875 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.274071264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276967316 seconds)
  done (took 29.231171919 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276326006 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276008176 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.274274989 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272652032 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.273210973 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.276304787 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.276255019 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.272927162 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.276143351 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.276132664 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273963036 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275513922 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.273869553 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272584504 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.271948802 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272210189 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274585243 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274693025 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275316909 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272479552 seconds)
  done (took 26.686192905 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277640449 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277741158 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277486949 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279160733 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279764288 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277504137 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276929779 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277655425 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277810942 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277821816 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277904193 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277408776 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279095046 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277659309 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277508914 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277970259 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278042179 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277385146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277978284 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277479898 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279367444 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276602086 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277472269 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277503472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277473404 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278300619 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277077871 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278215277 seconds)
  done (took 36.978239221 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276941771 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275472308 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.27267694 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.273665645 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.273557568 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.27298674 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.710565683 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.273291088 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275680694 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273175138 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.276408475 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.276451733 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276535845 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.276442821 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27772064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.276287351 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276500014 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.273223355 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273603599 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27280679 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.276227898 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275572928 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.276950407 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273908447 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272537379 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.275872519 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273887097 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274490877 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276545575 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272861973 seconds)
  done (took 39.883364046 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.294950754 seconds)
    (2/2) benchmarking "in"...
    done (took 1.294408203 seconds)
  done (took 3.787515428 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.273712209 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27623083 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.275871701 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273582756 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.274682591 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276659408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.276066093 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27383409 seconds)
  done (took 11.39905588 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.277241586 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.276869619 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.277455074 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.277648041 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.27880486 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.276376204 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284623396 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.295412546 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.278555556 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.279407107 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.283177736 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.283962274 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.279427563 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278143613 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.277233687 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279667264 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.27784116 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.280245667 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.280124335 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.279168333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28094303 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280512823 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280383412 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.275851801 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.2795016 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.289463058 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.282598806 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.2793044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278464999 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.282491685 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.279607865 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.276551567 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.280749695 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.280133584 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.280102924 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.281050063 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287801101 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301031255 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.285429072 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280767811 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28160109 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.277592573 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.280484894 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.281088738 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281726182 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.282399041 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.281465465 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.279188139 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.279451085 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.283999289 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.285044503 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279219433 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.278468911 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.283821211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.281214616 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288214843 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.30271678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.283587059 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.289450477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.29204316 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.293867006 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.30451797 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282459353 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.28348377 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291099455 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.303130278 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288428607 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.297121566 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.278706603 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.282356526 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.288621113 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293944643 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.306479354 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.283062577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283818194 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.282703075 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283367011 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283028592 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.290041592 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.301965138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.284172229 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284528589 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292317672 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304936991 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.281979763 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.284663905 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.28434078 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.285637631 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.283910268 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292297784 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.303671649 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.283039851 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.28189278 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.283221967 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.282981796 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.284968974 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.282501588 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284127768 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.280838349 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.284621934 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284908803 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28666937 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.291155574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285874556 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285906985 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.290159547 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.284924034 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28328317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.290768226 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.284281518 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286186246 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.285834408 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.28938054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.28325652 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287767697 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.292775802 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.285352957 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.285605 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.286338031 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.286064847 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294432327 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.30918469 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.287009265 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.285749349 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.290161068 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.298170701 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.287343809 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.287965152 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.286251821 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.283422224 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.283810197 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.287673158 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.287305318 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.286645229 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28761509 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286853271 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.284117002 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.287337315 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.287882292 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.287226936 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.287390818 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.286399918 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.286805568 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.288507998 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.288133195 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.287656557 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.292705459 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.286082161 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.287232888 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.287622662 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.284777547 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287863222 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.287724091 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.28864022 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.287226201 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289410296 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.286368441 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.288661076 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287741775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.287806828 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288342881 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.287834869 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291214387 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.289258781 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.291602527 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.287862312 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.286343506 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.287996491 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.288628545 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.287055584 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.28897869 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.287833139 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.291591898 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.297145176 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.28875914 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.289456149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.290902961 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2908616 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290233137 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290270724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.29208728 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.296317391 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2900909 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.295788138 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.290186744 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290878665 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.28949865 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.289560876 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.288574606 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290899388 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.292521611 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.296540334 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301700125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.312619863 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.289874218 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.294332878 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.290480375 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.294604562 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.293617303 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.292562294 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.291298713 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291410171 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290248168 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29139479 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.291791828 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.291430116 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.289650857 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.29046238 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.291330724 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.292449776 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291484572 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.29049886 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290924806 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.288140269 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291289953 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291497932 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.290600763 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.290106251 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.290264985 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.290176893 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.291811796 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.292918689 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.297822286 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.288552202 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292790191 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.29342691 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.290773643 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.291131885 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.292811035 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293266935 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.291837055 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29819436 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.308061002 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.292740564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297956821 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.30973245 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.291710241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.29365261 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.293227681 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.290930595 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.294999125 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.30060526 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.293796885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.294475823 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.294980964 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292653616 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.293449272 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.299054824 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.291368431 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.292094976 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.294376587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.293287115 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.290783446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.2948175 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.293503689 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.293738625 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296388309 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294094508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.294537502 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29469559 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.295581407 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.29538926 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.295259362 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.297452147 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.302330674 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.300315035 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.292964196 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.295594227 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.295261715 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.299103693 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.294866457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.29492162 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.294324906 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307835157 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.318926516 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301209547 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.296195767 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.295468012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29961328 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.296287345 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.299277336 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295033612 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295511232 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.294807377 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.2952186 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.294151365 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295319527 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.297155971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296326146 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.298088534 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.301302567 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.298116268 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.296744631 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.29817496 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.298319471 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.296331456 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.296041773 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.299158806 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.298366277 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29811084 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.296602599 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.296760113 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.304023073 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313815049 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.298669266 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.296453916 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.296147177 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.295761273 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.297070326 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.298075828 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.301813927 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.30530552 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.299710198 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.304659228 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.298915836 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30619137 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.299129106 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.30228095 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.306743167 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.295571744 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.296572565 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.296512927 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.299510276 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304617759 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.316994004 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.298893214 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.303348049 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.299782619 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.299417636 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.299322517 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.299983911 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299109316 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.299549517 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306175146 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.320568297 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.301507005 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300479761 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.296430537 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.300326709 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.298880214 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.297276046 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301292497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.29971355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.299506918 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.298467133 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.299748697 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.299839417 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.300824246 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.300562572 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.29666731 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.299554119 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30558867 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.318653324 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30516758 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.301332373 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.305598373 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303147983 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307189106 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.319092746 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.300557963 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.301248862 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.30041548 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.301792119 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.299538334 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.300916736 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.301761129 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.302114949 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.304224499 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.30224967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.302311919 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.301843185 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.301832803 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.301576091 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310764408 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325008865 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.302323223 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.305146639 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.297765134 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.302127901 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.307140819 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.301778853 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.300239385 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.304378281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.311674124 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309345951 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.301027987 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.302547889 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302669615 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304038667 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.302587169 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.301743205 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.303258037 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.303119458 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.302785663 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.303388436 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304139552 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.302458818 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.301654399 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303168418 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.303458403 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.311681385 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.304451337 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.303332209 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.304636668 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.304018858 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.303062344 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.303054816 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.304194098 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303897762 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303217845 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.305045194 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.311523522 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.309388228 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.304941847 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.302707353 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.305557536 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.303033209 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.30266698 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305773385 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.305723687 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306018259 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.304967673 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.305631993 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.305362205 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.303353928 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.304165157 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.304399221 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304293939 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.308362887 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.311790405 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.305778548 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.302113755 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.304345416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.305897118 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.30415693 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.304682322 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.310538962 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307276392 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.315620602 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.313343385 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.310206986 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.305525248 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30891255 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.312741866 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.303996133 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.306060925 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.307040421 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.307228935 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.30689162 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.309737221 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307438661 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.312509915 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.306170995 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.305666164 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31427183 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.327779552 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.307650789 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.308606 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.310374145 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.306353918 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.304587375 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.306847626 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.305894567 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313770487 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.324848379 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307604401 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308271816 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.306510247 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.308460649 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311962117 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307573475 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.307228084 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.304345141 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.307323606 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309798013 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307852539 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.304620332 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.306212037 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.306691567 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.310854912 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.313544138 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.305470629 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308685698 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.307273682 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.306471106 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309564626 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309161967 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.305800016 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.30565819 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.306898901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.310058607 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.308716291 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.309595641 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.30794007 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.310721059 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.309536212 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310056055 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311974729 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.318202734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.316919216 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.307142732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.308344062 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.308998482 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.310453941 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.309566165 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.311217592 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310413383 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.309971293 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.309381978 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.311136272 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.309452949 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.31266246 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.324420872 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.330636559 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.309780982 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.310297424 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311867432 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.309715144 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.308368484 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.309726167 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.3116166 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.313474509 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.319086297 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.311903162 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314868891 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32971621 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.311557122 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.315052065 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.313314076 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.317097493 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.312553768 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310998462 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.312933358 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.315890269 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.326119473 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311709728 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32098926 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.340774759 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.329031167 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.311225805 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.312686507 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311065991 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.31246092 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.312476564 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.313330464 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.312085215 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312606253 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.313301936 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.312763582 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.316248105 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.312251712 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.31297704 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.312347758 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.312238369 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.313512882 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.310974977 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.314808706 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.31305158 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.314131022 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.315543745 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.31393356 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.314134342 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323936851 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.338764277 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.313596141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.314530603 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.311569693 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.3157423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.316296634 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.323938079 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.320861837 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.315389456 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.315252442 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.3140854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.315105186 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.312744625 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.31567116 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.313851322 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.314183148 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.311597118 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.3257283 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339876297 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.31869016 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.313771172 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316439821 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.31570772 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.314648268 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.316112222 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316044485 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.31607848 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.316745162 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320040923 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.316285042 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.315675835 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.317636984 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.322826299 seconds)
  done (took 775.429097263 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.313075934 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312876353 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313205733 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31312479 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312749719 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312970106 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312983624 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.312820859 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.312624172 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312928908 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312890184 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313238897 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.313641551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313428864 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313075372 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313143294 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31352276 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.313618136 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313099653 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314837885 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314303002 seconds)
  done (took 28.813137453 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.317967719 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.314543368 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314925252 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.318173553 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314135849 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316658928 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.314845046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317003071 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317810186 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314979425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317022374 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318784868 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.315525727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.315615662 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315986147 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318354344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.317326756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.317831273 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316157333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318289075 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.315467618 seconds)
  done (took 30.19815284 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.320230897 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.3205793 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.318467212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.316487321 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.319762227 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.316016891 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.319673857 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.318462212 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.318294448 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.318480798 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.318385663 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.32014914 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.326193266 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.324067096 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.320073182 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.320018762 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.462855574 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.320495461 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.320371278 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.320932276 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.317837712 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.325264592 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.318276828 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.316713271 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.318355264 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.32176555 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.319890013 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.319691599 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.3210109 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.321066241 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.325805092 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.320384063 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.320363246 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.321455884 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.319085486 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.322144536 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.325990721 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.32251568 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.318370383 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.321469174 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.330651671 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.341439005 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.323058981 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.327148259 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.321604228 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.321638381 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.324128805 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.329999365 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.319963834 seconds)
  done (took 66.136235181 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.322218487 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.320849419 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.319176633 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.32150933 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.321694798 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.321390678 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.321727875 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.32171008 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.319662075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.318824745 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.321969923 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.319088499 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.319948363 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.322376071 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.322248076 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.319779201 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.31969756 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.319465987 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.319380426 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.319989591 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.319549207 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.322376513 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.322592009 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.319834803 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.323789933 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.319979254 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.319721771 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.323456551 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.320201138 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.321208428 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.323271095 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.323663072 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.322575866 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.321493077 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.320662634 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.322753805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.323137409 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.320963013 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.323729712 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.32105597 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.323674384 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.323643812 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.32354134 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.324438519 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.321517626 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.321429466 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.321598246 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.32224439 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.32140988 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.323652697 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.324405102 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.322664944 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.324016549 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.322092709 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.32486663 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.325302579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.322488338 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.321989872 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.324759079 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.323304181 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.322336087 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.32466771 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.323441244 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.325167149 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.325543155 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.323474288 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.323303323 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.325399014 seconds)
  done (took 91.147055433 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327140149 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.325891513 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32659352 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326772651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326034739 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.32732654 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327505072 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.327330255 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.326780077 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.328040782 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327428219 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.326123483 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.326153796 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.326480941 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.327109186 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327727201 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328470241 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327359558 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.328089128 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328590176 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.327518271 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.327767963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.328037274 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328210691 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327265164 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.327613544 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.328672863 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.3286743 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328159432 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328124728 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.32885276 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.328150466 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.328072026 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328775216 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.327866593 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.32867512 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329009921 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327782718 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.328724728 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.329155237 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327473291 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329640924 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328558915 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.328730306 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330345815 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.330219528 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.328931582 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.329113756 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.329219529 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.328789372 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.329054468 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330192437 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329713868 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331378681 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.330528236 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.329080793 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330113317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329783942 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329204398 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.32979256 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330309549 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.32961461 seconds)
  done (took 83.604581811 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329196067 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.329308156 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.327301348 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.326623705 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.329573596 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.327905065 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32927157 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.329258503 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.331179487 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.329753062 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330405328 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327473488 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328869444 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331569143 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328434753 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329623333 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327878212 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328330626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330214461 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.328373047 seconds)
  done (took 27.828687018 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.326717944 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.33037796 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.327537526 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327755259 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.330698567 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.328887 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.331116078 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330850556 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328046612 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330459556 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330838622 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330540311 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328594368 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32899653 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.331581936 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328102778 seconds)
  done (took 22.519784568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.32869728 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.33083776 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.331893432 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.333072693 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.330132386 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.328144621 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.331207326 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.329348907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.328774355 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.331793778 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.331462623 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.332465425 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.331654799 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.332163087 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.329613981 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.332158046 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.328926591 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.329224256 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.333002736 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.333228951 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.331432802 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.330081791 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.332750857 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.33314813 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.329809816 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.331295622 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.330308402 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.331302397 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.330564208 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.333939328 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.331268967 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.332127654 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.331732676 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.331805701 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.335862065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.331083435 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.333715336 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.334165911 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.33410216 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.335611847 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.334473983 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.332889917 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.33581016 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.335107719 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.332391396 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.335598021 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.332671163 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.332293804 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.333218552 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.332619923 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.336560124 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.336943445 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.335606809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.336109115 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.335510581 seconds)
  done (took 74.532153382 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336482668 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.335628182 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.332546775 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.335463924 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.336027958 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.332470701 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.335239333 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.334326818 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331929158 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.33537046 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334152394 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.337920648 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332929986 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.335821077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333876306 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33575623 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.333132927 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.332810145 seconds)
  done (took 25.274520959 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.333587318 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334157402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.336386853 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.333816438 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.333996795 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337022671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334033812 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.336710113 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336131876 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.334697912 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333511895 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.337007055 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337454846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.337027388 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334473765 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334150608 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.337000419 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337089402 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.333969518 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333785024 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338606628 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336821901 seconds)
  done (took 30.634592984 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.336828357 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.337015649 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.336013172 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.352992524 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.354685414 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.358951636 seconds)
  done (took 9.330771838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344703223 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336876982 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.335598126 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340445551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337545504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335721185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335861437 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33663255 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338457802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336522314 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336253044 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338165721 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339522994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335870527 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339143514 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338874236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337240739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336512088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337213909 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338813078 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335707732 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339410853 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337135289 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336594159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336970333 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336035958 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339144479 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337998073 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33625535 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338838289 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339361347 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33689962 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338555107 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337500036 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339667047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340331699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33839537 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339822739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339695965 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337893157 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.339583598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339645836 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340337018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337053049 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340447452 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338132218 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338105929 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33803186 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33830276 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340973416 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34067908 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337728166 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339981552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341502883 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341950356 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342576212 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338406276 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339555593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340839681 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338579255 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339927265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341017246 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33951595 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338742692 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341786192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340482161 seconds)
  done (took 89.632956629 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339256419 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339609323 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340371541 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339824718 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339069621 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339561148 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340062594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339228167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340093443 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340066617 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342840098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339785539 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339886698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339541558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339731635 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339514597 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341063339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340991976 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340571719 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342793498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339988031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340051862 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341059957 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3409664 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340210472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343807529 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341717872 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341196992 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342196561 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341214446 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340848657 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340751021 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341709363 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340998059 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341993679 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340780159 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340762868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340970491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341205584 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343367556 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340722196 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345083203 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342285197 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34170787 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342665761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343024133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34262436 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342029148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342275173 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342555017 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342302641 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343340464 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341449082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342654638 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342161053 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343145814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343329467 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343622022 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342476698 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345612716 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343577911 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342474176 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346503365 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34281222 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343833495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344217184 seconds)
  done (took 89.809751536 seconds)
done (took 1811.027488877 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.509159293 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.461447278 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.343623356 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.348543907 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.344929571 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.343147972 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.344392717 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.3441851 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.343996675 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.344481556 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.344393921 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.531391137 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.384744951 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.344386971 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.345432045 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.437955511 seconds)
  done (took 43.379723906 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.370411758 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.350339604 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.461592337 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.366971315 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.371401838 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.534586465 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.404772201 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.349902543 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.517465069 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.389413476 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.879083271 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.36998653 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.348186092 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.441028376 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.369123403 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.53254742 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.592362858 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.886685241 seconds)
  done (took 30.79958516 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.790936131 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.361283979 seconds)
  done (took 9.416033537 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.369084936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.350260917 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.350614356 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.34884564 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.341909311 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.342542531 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.350325039 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.346223876 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.935783423 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.47914183 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.35206569 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.358667576 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.368528744 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.351816407 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.348206561 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.388029211 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.500016538 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.348558925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.347052134 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.355563302 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.349536997 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.43434579 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.391774909 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.348731906 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.47408323 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.921054673 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.358081166 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.355967422 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.481510353 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.348168052 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.35063797 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.349178972 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.351228719 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.227259821 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.856488041 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.342790725 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.390704376 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.357595039 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.346056477 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.497503802 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.353661163 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.35329914 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.343401791 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.832827177 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.490191468 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.459912705 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.504268687 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.34951816 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.350749344 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.409578424 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.349270985 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.350732921 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.389105466 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.149680699 seconds)
  done (took 112.428470872 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.371207867 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.735462864 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509961854 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36485835 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.080786786 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016943335 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.363068031 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.621824751 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.38290506 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344517838 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.633679669 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840511894 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.372498482 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.342836416 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.547840715 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.358218697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341518177 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.098519427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.364066541 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.345560478 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836125614 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.353037776 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.340984101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.513730736 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.379521378 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786837215 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.66528806 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.750190447 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.359960819 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.34174981 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.795890938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.360436234 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.41679434 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.343372941 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600840268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689438546 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665271055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.348509303 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357111577 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.342720957 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.372521608 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.779509556 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.671573837 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.343664202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.358239323 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798356722 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.343496075 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.344288564 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.349137564 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542984005 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.94650307 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.345159277 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.649627045 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.343841898 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.616332254 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.41790734 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372108346 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813204233 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343797146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.391710536 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361608667 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.343520667 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345611447 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.350552278 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.347842686 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677069846 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.684687432 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.351018041 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676450204 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.791560798 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.3600061 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865216074 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.168952146 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.367034792 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.403469428 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.344606955 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.90922647 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821546114 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.388856508 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345144308 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664222295 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.345839962 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.620437506 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.36011098 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344933564 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86367174 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.349061279 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.377954441 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.345800762 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.345827302 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.00876748 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.350912348 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608328424 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.363941396 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.34746165 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.346413024 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.359423485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.346525505 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.363731182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.345057114 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864984308 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.365295312 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.464322918 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.366101461 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347612113 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.364255932 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.346774877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.347987149 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563439255 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.912518008 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.371899308 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347905504 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.347083998 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.362810047 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.503322073 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.350193293 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.641719076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.349491725 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348451492 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351329063 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017851309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.398973163 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348364812 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.366301788 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.252990008 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.550540258 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.366582084 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.349851678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.360494585 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.348020293 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.542868709 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.368977683 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.398976825 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.353044085 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036534175 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.401803006 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.352742487 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.610302897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.356539665 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.171988187 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.365229035 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349541453 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.633296207 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608707488 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.569577042 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.351169755 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.365030384 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.017790283 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.413763706 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494406688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368715331 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.390769294 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546212717 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.46649517 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.351494301 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.943158132 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.351461494 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562360713 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.350089206 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.661960247 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825605078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.366001078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.350769011 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044238632 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.071707118 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.005415366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.351949553 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.620858977 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.314981727 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.82697201 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.351156527 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.362439375 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.819773492 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.351320894 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.351324177 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.351712071 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.350363825 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.490195374 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.524554069 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.536431819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35597386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788869065 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363459181 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.352650463 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.357664259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.354751505 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.70262738 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.373695409 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.357325462 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.379808336 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.353629961 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.359938219 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807764722 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.199420285 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.353997117 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504538504 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971428137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.369882708 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.352026541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.090380156 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.041104399 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.850241861 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.396903749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.647404142 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.356183106 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.390141017 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.965423475 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.440919213 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811663434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356175839 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.352792037 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.937590934 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.369291366 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.431128915 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.353479422 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.355571739 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881149177 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.369452579 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.354369376 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.585896699 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.373774049 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.61725433 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.353710807 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.3871018 seconds)
  done (took 1112.693109521 seconds)
done (took 1309.979184484 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.356821591 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.359037032 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.346561183 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.361226801 seconds)
  done (took 26.701791952 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.365785875 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.362311802 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.366111742 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.361656003 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.367308246 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.362174981 seconds)
  done (took 9.462318663 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.41487869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.357157857 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.361299072 seconds)
  done (took 19.41013758 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.566828834 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.621049644 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.677795598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.465186944 seconds)
  done (took 10.609098694 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.368060052 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.367962044 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.367037686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.370996 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.370191231 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.371112497 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.371658665 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.371389352 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.369701272 seconds)
  done (took 13.608138302 seconds)
done (took 81.067449042 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.369668777 seconds)
    (2/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.307427722 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.120680678 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.326883663 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.18304525 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.869921461 seconds)
    (7/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.567331169 seconds)
    (8/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.735090947 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.091303461 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.601995093 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.416821468 seconds)
    (12/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.480155824 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.065681704 seconds)
    (14/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.432107892 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.38883816 seconds)
    (16/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.847766167 seconds)
    (17/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.780177326 seconds)
    (18/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.464179489 seconds)
    (19/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.416071106 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.715439996 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.415574363 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.719067313 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.999694841 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.262138305 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.348987524 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.348261201 seconds)
    (27/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.34742293 seconds)
    (28/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.463890726 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.363450386 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.348666942 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.379518444 seconds)
    (32/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.403026656 seconds)
    (33/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.400624614 seconds)
    (34/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.186103072 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.492916424 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.363923583 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.693066034 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.579301473 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.353001829 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.349211913 seconds)
    (41/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.143565502 seconds)
    (42/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.372374469 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.919941904 seconds)
    (44/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.352837326 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.764831122 seconds)
    (46/286) benchmarking ("sort", BigInt, false)...
    done (took 6.368148929 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.387036312 seconds)
    (48/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.406842164 seconds)
    (49/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.44757576 seconds)
    (50/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.357524482 seconds)
    (51/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.726304853 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.994047215 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.349665289 seconds)
    (54/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.382766294 seconds)
    (55/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.465795496 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.475819796 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.566343064 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.630809309 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.756120929 seconds)
    (60/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.395952738 seconds)
    (61/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.350072987 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.821158649 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.350405363 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.42222094 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.894569802 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.466198252 seconds)
    (67/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.392145027 seconds)
    (68/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.368539636 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105662704 seconds)
    (70/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.576645096 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.351185912 seconds)
    (72/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.373391402 seconds)
    (73/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.913639196 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.354471819 seconds)
    (75/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.429379511 seconds)
    (76/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.370079695 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.123462523 seconds)
    (78/286) benchmarking ("sort", Float64, false)...
    done (took 5.627007994 seconds)
    (79/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.571764658 seconds)
    (80/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.07245449 seconds)
    (81/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.366816035 seconds)
    (82/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.491935134 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.543368274 seconds)
    (84/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.762213971 seconds)
    (85/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.407035711 seconds)
    (86/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.352118312 seconds)
    (87/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.463579938 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.47542156 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.220401693 seconds)
    (90/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.611786462 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.896121708 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.370226559 seconds)
    (93/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.453114554 seconds)
    (94/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.246330842 seconds)
    (95/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.392239585 seconds)
    (96/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.179535646 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.495718464 seconds)
    (98/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.753958552 seconds)
    (99/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392775253 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.775133043 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.019335435 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.365639109 seconds)
    (103/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.919947677 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.601795219 seconds)
    (105/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.392205184 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.366437978 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.580967732 seconds)
    (108/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.353028924 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.123839431 seconds)
    (110/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.352762194 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 6.371203947 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.216361291 seconds)
    (113/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.468326017 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.392372802 seconds)
    (115/286) benchmarking ("sort", Int8, true)...
    done (took 6.366988625 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.288861306 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.417569266 seconds)
    (118/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.453147663 seconds)
    (119/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.448722666 seconds)
    (120/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.271073536 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.360461621 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.880741221 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.391041025 seconds)
    (124/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.452767969 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.355652305 seconds)
    (126/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.393607065 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.366994849 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.648648488 seconds)
    (129/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.028851945 seconds)
    (130/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.985482726 seconds)
    (131/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.363186779 seconds)
    (132/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.610940962 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.275894188 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.107703384 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.627611492 seconds)
    (136/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.354905997 seconds)
    (137/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.490031255 seconds)
    (138/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.367997512 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.377562871 seconds)
    (140/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.646085856 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.478040934 seconds)
    (142/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.427432569 seconds)
    (143/286) benchmarking ("sort", Int8, false)...
    done (took 4.424257006 seconds)
    (144/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.723995016 seconds)
    (145/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.403285594 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.413687446 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.113173895 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.395172713 seconds)
    (149/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.887891804 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.411146781 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.395741563 seconds)
    (152/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.356332795 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.370527751 seconds)
    (154/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.495271911 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.391630516 seconds)
    (156/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.15313318 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.779384543 seconds)
    (158/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.382149401 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.420403192 seconds)
    (160/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.715978945 seconds)
    (161/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.37443805 seconds)
    (162/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.439388361 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.386098396 seconds)
    (164/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.388490782 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.369610006 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.494604892 seconds)
    (167/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.831691493 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.46765305 seconds)
    (169/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.434899303 seconds)
    (170/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.38119985 seconds)
    (171/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.496103457 seconds)
    (172/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.198166048 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.389372197 seconds)
    (174/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.580201424 seconds)
    (175/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.312274737 seconds)
    (176/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.620664744 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.397025429 seconds)
    (178/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.397632476 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.375500445 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.362787342 seconds)
    (181/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.451413937 seconds)
    (182/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.398965976 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.413533027 seconds)
    (184/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.393194394 seconds)
    (185/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.988805568 seconds)
    (186/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.381056429 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.271457589 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.220337249 seconds)
    (189/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.866194191 seconds)
    (190/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.526800652 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 5.416901733 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.44494055 seconds)
    (193/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.419159871 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.363085323 seconds)
    (195/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.804458379 seconds)
    (196/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.729283557 seconds)
    (197/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.374928451 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.38981773 seconds)
    (199/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.741316759 seconds)
    (200/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.486066541 seconds)
    (201/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.357726247 seconds)
    (202/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.373546198 seconds)
    (203/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.357904919 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.453904105 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.391295221 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.57677464 seconds)
    (207/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.145510411 seconds)
    (208/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.131162614 seconds)
    (209/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.634761762 seconds)
    (210/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.366123712 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.28228838 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.359473338 seconds)
    (213/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.652381869 seconds)
    (214/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.38698091 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.393082981 seconds)
    (216/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.955309888 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.413009367 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.833081222 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.948380546 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.363993171 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.493707387 seconds)
    (222/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.559360853 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.721934251 seconds)
    (224/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.994438177 seconds)
    (225/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.564417922 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.358942834 seconds)
    (227/286) benchmarking ("sort", Float64, true)...
    done (took 6.392609386 seconds)
    (228/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.626273299 seconds)
    (229/286) benchmarking ("sort", BigInt, true)...
    done (took 6.371463877 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.506060712 seconds)
    (231/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.932511448 seconds)
    (232/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.663098737 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.155565373 seconds)
    (234/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.00347249 seconds)
    (235/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.385868404 seconds)
    (236/286) benchmarking ("sort", Float32, false)...
    done (took 5.377742388 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.83352981 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.587002677 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.452920408 seconds)
    (240/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.596343398 seconds)
    (241/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.388152107 seconds)
    (242/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.438129283 seconds)
    (243/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.126888907 seconds)
    (244/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.459819767 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.397435407 seconds)
    (246/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.761472174 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.36313563 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.015871945 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.757437507 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.382683396 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.862752861 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.479911293 seconds)
    (253/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.75513707 seconds)
    (254/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.564996387 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.406023902 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.36039325 seconds)
    (257/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.476683305 seconds)
    (258/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.217075962 seconds)
    (259/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.407466968 seconds)
    (260/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.360541626 seconds)
    (261/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.373446092 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.457173235 seconds)
    (263/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.598273548 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.463100803 seconds)
    (265/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.203435729 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.418783129 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.483835391 seconds)
    (268/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.738823353 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.176437377 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.390372711 seconds)
    (271/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375149184 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.526623358 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.78121429 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.244059107 seconds)
    (275/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40598816 seconds)
    (276/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.388612192 seconds)
    (277/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.395298831 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.724494196 seconds)
    (279/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.36775617 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.399422865 seconds)
    (281/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.429268793 seconds)
    (282/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.102321782 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.867638429 seconds)
    (284/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.36746809 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.463610434 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.782370176 seconds)
  done (took 948.790910161 seconds)
done (took 950.071566454 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.406898826 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404636369 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.385373268 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.40728753 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.498405418 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.562900137 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.396850955 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.388636304 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.434297074 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.435745179 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.3886256 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.56487847 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.389837137 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.389774108 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.38918123 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406608968 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.433104784 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.396218206 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.407259855 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.397447872 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.406079092 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.385143448 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.43613457 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.56225269 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.390630393 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.39003634 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.390250992 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.407503559 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.499928486 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.392006131 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.389926264 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.398977293 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.413319752 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.386250073 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.382988902 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.408102432 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.399313165 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.396493549 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.391371018 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.420502567 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.824545531 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.392348098 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.390016376 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.389902442 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.389440316 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.392141265 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.390242312 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.394721517 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403642918 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404957775 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.796185751 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.404495015 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.393019777 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.390611546 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.399860122 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.389869307 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.393468625 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407649526 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.409129075 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406685751 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.400999894 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.395916623 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.392420026 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.406533423 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.397268322 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.838216779 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.386094884 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.395722792 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.838310195 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.399073795 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.837146788 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.399497614 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.393318025 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.405419152 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.422108191 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.415796123 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.386617564 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.39129048 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.398667785 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.389755195 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.401310893 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404257218 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.396805506 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.392704586 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406516864 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.567083739 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.402225932 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.392732805 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.400499678 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.410977378 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.399705623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.404009745 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.395066704 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.387130125 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.403066641 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.396207107 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.394534061 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.394322992 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.39705068 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.401668664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.833871898 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417480604 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.388775757 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.388421191 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.391313875 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.405258168 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.814959012 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.394723238 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.414185984 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.43896115 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.394523528 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.408093361 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.395178096 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411270672 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.401397543 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.395495357 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.387991696 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.409549893 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.808293906 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.408475819 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.394971361 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.391658879 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411210878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.395061854 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.389893739 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.423082837 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.395232037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.408416752 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.515275247 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.40454084 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.425249865 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.393896684 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.396572154 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.425358284 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.411728271 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.425760969 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.397528114 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41220004 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.411148067 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.390910052 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.405546281 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.404986542 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.396015715 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.398982763 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.388744212 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.424138168 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40842497 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409356965 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.416089204 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51581751 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.393377387 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.429049873 seconds)
done (took 234.753026963 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.454871776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.393504507 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4761977 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.392322881 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.494051897 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.492353563 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.390222965 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.389947106 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.389479756 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.769338825 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.390016119 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.38985169 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.392130327 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.390697065 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.47596644 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.393020605 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.390896044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.734181592 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.394395347 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.462489608 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.390234357 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.390819688 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.393663255 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.778679837 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.392018592 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.388454161 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.464793491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.394051765 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.74024266 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.392389291 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.390993092 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.742229156 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.483547394 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.410986996 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.402925616 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.40068819 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.496226989 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.413434829 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.475942992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.476233389 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.477937334 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.433891455 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.394081112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.394693643 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.397687564 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.397585132 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.393286567 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.421399495 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.396056791 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.392224243 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.734825119 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.404786224 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.393881424 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.392826395 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.393847941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.425519025 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.393740974 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.395871961 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.484912471 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.397492537 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.457888728 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.779090509 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.774603607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.396624161 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.390197056 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.393438014 seconds)
  done (took 152.489058508 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.464000404 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.46897661 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.50868621 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.397849956 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.447171238 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.511153622 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39861502 seconds)
  done (took 11.504502365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.403209009 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.397144263 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.44537341 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.446357435 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.398741614 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576797484 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397909251 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.409792453 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.394662997 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.448642217 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.402590128 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.399180572 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.403864085 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.397912852 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.445223744 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.409455358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.512919102 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.399678658 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.399170545 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.549382189 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395811177 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.404725219 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.450714568 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.409071056 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.402900479 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.403607366 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.217592367 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400499728 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396539328 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.398255834 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396223163 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.473547998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398763499 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.396075504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396650122 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.513651485 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.399674703 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.397915755 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.399057401 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.39467005 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.399684702 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.399512654 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.400023359 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.396716002 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.399471129 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.422606277 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.399783855 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.400627293 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.400438155 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401869796 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.449792529 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40050405 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.398391064 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.396994122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.453548329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407845974 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.402947964 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.397288517 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402679713 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.400007383 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.551111221 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.448315618 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.401339849 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.447852145 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401673754 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401731441 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.401414501 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.400889453 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455955642 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.401236166 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.449428948 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.3989526 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.580772651 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.425194025 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401429125 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.404634613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.404028307 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403601061 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.394479792 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.407278157 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.398498967 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.402812677 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.408085297 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398432292 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.400030507 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.567011714 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.508237964 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.399735424 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.414195964 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.410059067 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.399105079 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.454796099 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.401614887 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.400956993 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453168373 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.517406453 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.455622894 seconds)
  done (took 160.096850702 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.406693898 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.411173975 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.405526239 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.424716103 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.403076819 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.402944505 seconds)
  done (took 9.767602156 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.404914925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.404280516 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.402681092 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.403184963 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.404599728 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.40584869 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.405118378 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.404828648 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.40801008 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.404413972 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.407138828 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.405906276 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.408004554 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.404989919 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.406415982 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.403520502 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.405476005 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.401097625 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.403967393 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404755368 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.499236878 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.40560833 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.406202189 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.405420744 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.411316787 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.40469962 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.413117535 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.404254226 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.404980685 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.411742011 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.425187089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.407718256 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.406920876 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.410795316 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.409716853 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.405411609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407633666 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.406514894 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402604791 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.408213752 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.406204607 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405736378 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.404818745 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.407537573 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.406618229 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.409979339 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.410341112 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.412874961 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.406890126 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.407964413 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407281773 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.404615404 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.409989293 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.408111738 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.407206964 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427811489 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.410875243 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.407563162 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.406756115 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.408254428 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.408461379 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.410013239 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.410078824 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.412740862 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.415207024 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.409610705 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.408091162 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.411604588 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408632401 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.40853756 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.409913938 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.40899635 seconds)
  done (took 103.772389019 seconds)
done (took 438.934009884 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.808857786 seconds)
  done (took 8.131989648 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.534228528 seconds)
  done (took 7.853583645 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.989732335 seconds)
  done (took 22.316361962 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.433287393 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.422955056 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.4090043 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.416383265 seconds)
  done (took 27.001251024 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.969111264 seconds)
  done (took 8.289021133 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.400512936 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.424857419 seconds)
  done (took 14.14652105 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.512271321 seconds)
  done (took 7.832807469 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.51286512 seconds)
  done (took 7.83876737 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.420350294 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.420937151 seconds)
  done (took 14.172921524 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.389476466 seconds)
  done (took 7.709814866 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.133758373 seconds)
  done (took 12.452892294 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.411278414 seconds)
  done (took 7.731604485 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.464249849 seconds)
  done (took 7.782884742 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.435095555 seconds)
  done (took 9.753681739 seconds)
done (took 164.336475869 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.401162913 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.402329843 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.404575618 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.405215117 seconds)
  done (took 26.931917922 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.441890698 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442435123 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442631748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452788785 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.444433362 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.44184161 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.433681697 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.43379185 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.452506799 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.445777422 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.444092164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.444174974 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.443008873 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.434178242 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.443966259 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.44467534 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453835279 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.444762328 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.435710572 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.445740911 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.409555078 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.453801387 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.447741219 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.410801194 seconds)
  done (took 35.907442048 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.933429346 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.481798783 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.563345892 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.462377644 seconds)
  done (took 7.762136536 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.461686993 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.463278463 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.476631993 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.513482897 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.539669137 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.472117524 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.437167071 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.432176309 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.418907394 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.463953433 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.540347354 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.479564059 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.54877549 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.410343303 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.59649432 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.411346956 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.412117953 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.465317219 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.514189724 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.528478101 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.412512266 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462671239 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.466945414 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.480858228 seconds)
  done (took 36.730922125 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.410973381 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.430445768 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.413913106 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.411259537 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.417814516 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.41102117 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.410745563 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.414404489 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.412007371 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.417736514 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.40927618 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.42381618 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.411016184 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.41106298 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.416437991 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.41102732 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.416801007 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.409474153 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.41010992 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.41691669 seconds)
  done (took 29.608917657 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.40461192 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.259383273 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.757859056 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.660830132 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.40554518 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.406379626 seconds)
  done (took 28.217938302 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.483258453 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.624714087 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.417773407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.767211167 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.844382528 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.414276494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.415074506 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.658019875 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.981447946 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.968933007 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.471277769 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.484815713 seconds)
  done (took 20.855202421 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.414518448 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.412528282 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.415740406 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.42553787 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.468664383 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.419324697 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.419644327 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.406111861 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.471717851 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.473220451 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.419382434 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.470722951 seconds)
  done (took 38.542579633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496562589 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452084149 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.356074388 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436727453 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125059607 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620408988 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.466190378 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147875326 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.436696853 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682187275 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424465533 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501079171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664927696 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409029626 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.43230709 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.403451165 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637729306 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89553328 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415527089 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492718301 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439766972 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410549917 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.572156521 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654265316 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621089015 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387347506 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.670661139 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.186345535 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699901374 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429314959 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421040937 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409257731 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68400832 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.340333648 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506759931 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630115656 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426167309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.956453669 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.409605357 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.505444974 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419298278 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420431132 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421606841 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412381271 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346827264 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420113446 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434850575 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416803653 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.121800188 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412351961 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673928746 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512487101 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.415239542 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.981837289 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444188267 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416320419 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.414736848 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507737669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984539 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.762510282 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420575987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.35123734 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419269001 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.500047385 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031496407 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.419394874 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.416288627 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417381706 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347398155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.496697084 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435802717 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560175673 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.439298223 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062760097 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089592278 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417958281 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.34744222 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958266534 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414002123 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.368530308 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641713761 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.192208195 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34896069 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.359991462 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347010669 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116594659 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425202527 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.836038811 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436653374 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15610041 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658379678 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431304505 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438568634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637522911 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.300057707 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414117173 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.418798644 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546137027 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437357355 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159474407 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37063027 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.41816624 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670895313 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.627020278 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422758606 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410372936 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145101637 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420100975 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.434965001 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.425413486 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640343747 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.98985332 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432784042 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.794329147 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436601076 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.193056139 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156438338 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424816304 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.426278954 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419569487 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692026866 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.211468109 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301726677 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484544246 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4206432 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417071439 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.528674373 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269479017 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.575872467 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.628779248 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448871406 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.430964592 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.418544768 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367014738 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.423694678 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425780928 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.199807927 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640732915 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425205944 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696595691 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351556861 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564622431 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426659063 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.640471124 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.620007393 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.421943506 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677559816 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421468872 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424696398 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433979938 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438399399 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518019321 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440210317 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.419128332 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681487368 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.423068575 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.422400832 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.529364324 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.20226318 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419434954 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.425511571 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437218638 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996903212 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399201586 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426654928 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309742922 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.432747973 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487282615 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425274472 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642258751 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.663679486 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434453593 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.425042896 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.417939751 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659097569 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429923791 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.52103675 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505111006 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.923848632 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020198374 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438661422 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.355220775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.131629616 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.113431455 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421912818 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.618781487 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422854484 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64252115 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434856635 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440430051 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006603926 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426141439 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.529843121 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.430820112 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434082043 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.694243204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420862081 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.668927813 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.794071847 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436174577 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.438521505 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565345038 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.436598465 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.356427235 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938550351 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427839514 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422724202 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.19728611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45677595 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.539274067 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623623724 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703982153 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420618349 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685751421 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.621646906 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.459616542 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.422052621 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435082216 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428879652 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.446217683 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431535967 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.433808387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.524110099 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.864306817 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991831566 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158888934 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948623057 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728007659 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.427548523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.310317336 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16962359 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383103613 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080375154 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667357761 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180394146 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391619197 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.185219177 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.643581139 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194639893 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690174082 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658623197 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718741808 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.438130224 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698092009 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645201903 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4588837 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.42516724 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360882088 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.73014967 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448067399 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425396124 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528827729 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.485450552 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424409563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.21017734 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.489172955 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.086030517 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.084610006 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.969536387 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.811884106 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438135319 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44211348 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.668054098 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.460534607 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955666029 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045970049 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432711698 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.941582331 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388895774 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652123971 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.441686583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.434531893 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.987085279 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.439746502 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.685109124 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69557545 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37122333 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432999067 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962226777 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.300038417 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.435967557 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431492531 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176270398 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434990429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72794856 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.442314684 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.681302374 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439832354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.365585221 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364906692 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.124621133 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439332624 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406791554 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919777652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.435204176 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450985347 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456413208 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286923464 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.688110269 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.446042748 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010657258 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66453926 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434413541 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455469803 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.435254533 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445867977 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.426537708 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.324574683 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66783413 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458232864 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675916999 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.359641902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.343768183 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.489274603 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644822081 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.324802428 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445437909 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674768844 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.142386298 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.456121137 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155109209 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463776035 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441298048 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45082763 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453458906 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452764501 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504176631 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657621165 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.443574507 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.444016545 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.104633701 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439232649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44335078 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.44765796 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528620357 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.84768278 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.693133082 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.207036862 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020268546 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182517045 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030729322 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70925239 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442169238 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439460286 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369448582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583756674 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.959813516 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708628943 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565063619 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.436941938 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457715581 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435812454 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442097429 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654175698 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709552758 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.305587334 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446981486 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101054052 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.315975732 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445712449 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.647132911 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926618855 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993375337 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549796406 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435753621 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210560844 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732274428 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.526712784 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436500834 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026927951 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.445583281 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.123160816 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.441046348 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450994376 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591579337 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701136099 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.403656642 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447034994 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.592897412 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.210408631 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567645563 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.700353845 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.924978501 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668847878 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022655867 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147361803 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699559044 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50749738 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661308319 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.541904908 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585393012 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.436493365 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.319776145 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437672628 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282076449 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.14768958 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.448328302 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040178678 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708519632 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.441976259 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.436351423 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461747894 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.446963882 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.661400038 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153703407 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668564438 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448293852 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447972495 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.008534594 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02952517 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715931189 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382782653 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.44274842 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673757132 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.674238784 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464436813 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.892601569 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.149658425 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992132714 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.410127312 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46104932 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439773521 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151095588 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030258636 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.704422047 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930761713 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.100326681 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445407286 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720409225 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.445361256 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445468211 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724945069 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.443962719 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.448288032 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67228808 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.054997237 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227264397 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.471733004 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.618680292 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.385426181 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.666258597 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.523234478 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377594366 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452480801 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.863469597 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.467202417 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572831477 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453824397 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.44160874 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45415963 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.182503177 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725109592 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.448230172 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.452453728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.443472281 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454931472 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542204291 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423509435 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44697405 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.116326877 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.792403916 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698136414 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.451285184 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.436637594 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.446452224 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443523071 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159374654 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41158428 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4469585 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998021771 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.458160075 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.4605581 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446937374 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.659400149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654737359 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.453905795 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67546431 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449536124 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465379268 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.35022221 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.209873446 seconds)
  done (took 1719.372560654 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479627517 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.461904829 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.483943722 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.493371197 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463386223 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.580125578 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.481788 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.567648327 seconds)
  done (took 53.369897244 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.446132843 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.600474027 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.474563559 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.444494282 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.4542373 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.447130884 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.920508278 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.456173937 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.454633208 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.45371096 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.452298389 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.457295272 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.10274122 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.457176273 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.449135379 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.440597253 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.455122124 seconds)
  done (took 67.32994321 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.499593143 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.475142404 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.368272927 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.515610041 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.46099668 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.454123252 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.47674456 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.478179322 seconds)
  done (took 59.09044369 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.457114324 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.457266473 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.455863247 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.456682785 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.455879095 seconds)
  done (took 8.642682309 seconds)
done (took 2133.682709442 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.449725385 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.452858277 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.450037967 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.453195564 seconds)
  done (took 7.165008048 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.432184445 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.174618759 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.435294206 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.453990506 seconds)
  done (took 18.855508374 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.457922113 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.457732292 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.175031756 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098713838 seconds)
  done (took 5.6350278 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.197638502 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.208616045 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.193861512 seconds)
  done (took 7.960749068 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.448109946 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.451405272 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.450036088 seconds)
  done (took 20.711026087 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.749264979 seconds)
  done (took 3.110718221 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.595386162 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.64347431 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.766350864 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.771047139 seconds)
  done (took 8.137660538 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.835267503 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.821733648 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.636254678 seconds)
  done (took 6.654442111 seconds)
done (took 92.505815965 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.28682593 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.820064044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.653988462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.256264959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.681441852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.653026128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.669694209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.222998229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.767457511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.759327482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.300861786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.681189178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.619469493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.819514598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.617787057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.696098812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.681977829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.331507511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.943452416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.145905926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.667799347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.897005641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.135967043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.914909705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.680589696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.601757254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.493081584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.697565183 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.122439838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.511047843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.602808077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.317187532 seconds)
  done (took 196.613351695 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.449476687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.479276768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.450901434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.466611351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.449324177 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.45028486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.467706312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.464378341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449291262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.459185747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450201517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.459603657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451701332 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.449948285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.450038305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.457317682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.455556899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454190789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.463232165 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.449871168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.450245872 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.451054936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.450763617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.463553797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.454179076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.451693897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.450935498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.45047733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.450748129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.450906485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.451509594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.454271939 seconds)
  done (took 207.923295203 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453610233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.451825922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452749968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451757523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.451510808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.453863964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.451578654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.457040032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.451215295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.451426163 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.457729589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.453786039 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.456190032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453240005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.456256331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.455233909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.469246434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.452466594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.465925599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.454249392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.451243915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.46385023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.458129711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.452487772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.452552534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.454305438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.453636224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.455033058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.458380972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.456373927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.454089658 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.452248887 seconds)
  done (took 207.929955872 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.647002362 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.45972291 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.460170204 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.414466285 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.460729783 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.460299372 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.454995424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.657580694 seconds)
  done (took 15.381537758 seconds)
done (took 629.210135806 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.781207594 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.474847883 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.661208816 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.486633202 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.294536959 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.499487942 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.479971107 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.654903246 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.407729235 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663613469 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.708438232 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.484069706 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.827404502 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.47989809 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.737749864 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587311234 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.383067364 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.484347344 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.797728568 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.030023247 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.745613439 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.971570867 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.667261654 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.400611083 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.84620397 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.945854756 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.17973761 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.371923581 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.504091195 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.811259112 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.198636308 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.465826301 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.524875371 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.526586671 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.584615069 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.583969189 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.420841261 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.542027739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.666677004 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.72556936 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.044524549 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.219379134 seconds)
  done (took 97.241654175 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.452526745 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.453427464 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.451342415 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.453208564 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.454246499 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.452757343 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.452281986 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.453205582 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.452868234 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.451765962 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.452207533 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.454224674 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.452662368 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.453331377 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.452132136 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.452830822 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.454070937 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.455496307 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.453018655 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.452437956 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.453712554 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.454013928 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.454614451 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.454133762 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.452919024 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.454433707 seconds)
  done (took 39.154528613 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.465321017 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.715494542 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.881214973 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.477378202 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.467432302 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.469999059 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.546970482 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.472075271 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.470153639 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.469328269 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.633682096 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.469980119 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499294747 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.909615995 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.470938377 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.468192564 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.467085176 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.467080205 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.726579681 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.4753235 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.564832904 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.469852815 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.547342624 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.47979277 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.487702732 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.466957856 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.471406444 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.033532763 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.470443181 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.63477657 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.276400874 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.550604484 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.980444026 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.891107014 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.28398859 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.475787937 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.46793915 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.638496931 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.469337394 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.467817964 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.546753476 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.468768983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.89313986 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.13079348 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.487228375 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.468572229 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.055250359 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.6397788 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.717276532 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.477601392 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.922167348 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.472807363 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.470071812 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.470370615 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.715904327 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.47708532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.468150456 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.042452969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.496728218 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.548527837 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.473459254 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.470981709 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.736031735 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.474309201 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.722751851 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.479547073 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.477356629 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.48952197 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.895744257 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.477814114 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.150199106 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.493633958 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.470305444 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.639011893 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.726384917 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.091435855 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.481350754 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.739471466 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.99788758 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.547737358 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.475074578 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.023367436 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.552941018 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.474282069 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.472436475 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.472497132 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.470892358 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.517253927 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.547817748 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.087444629 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149016012 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.073452768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.5695523 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.479130036 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.473129644 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.040763467 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.490100064 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.472451807 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.889568445 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.15257477 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.490737203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.479797578 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.155192418 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.492381823 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.551677202 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.479217797 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.901523013 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.473539076 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.519463933 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.47250692 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.478866003 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.4948427 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.553599043 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.477850125 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.473938576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.127650093 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.666096677 seconds)
  done (took 192.705745522 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.466856233 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.466559438 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.467488243 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.467461866 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.466184841 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.4752127 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.466608683 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.466870985 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.47173356 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.466865361 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.466011255 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.466862353 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.46960445 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.469546864 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.478256351 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.473768633 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.081878557 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.469150095 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.468550204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.468708316 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.270252534 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.47008026 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.469251096 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.468917338 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.469373591 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.467772806 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.46998925 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.468717755 seconds)
  done (took 155.929177599 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.475362671 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.049626739 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.483808534 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.607975458 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.501225672 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.473397193 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.605754551 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.533286002 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.479219736 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.473173271 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.473197369 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.780966393 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47883825 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.992137355 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.670373273 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.608779551 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.99224541 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.493395273 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.472846548 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.474063525 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.609779403 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.486651011 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.779016711 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.049947047 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.482335378 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.053472348 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.474048906 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.477435796 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.474763568 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.057720948 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.483198005 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.787955641 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.563305806 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.537829718 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059181314 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.001679929 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.012001599 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.626829593 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.477125739 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.47545683 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.474819289 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.467290648 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.058536936 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.483413684 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.477647516 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.055412815 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.499923993 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.478004597 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.483701677 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.47510801 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.537366795 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.539097161 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.792706344 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.068920238 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.564384214 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.489317241 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.609252044 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.884816749 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.48027337 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.994270426 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.466500604 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.061704213 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.503125294 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.467349358 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.478344699 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.482704122 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.629380244 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611589773 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.996921595 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.497221283 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.995837066 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.649189223 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.477536366 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.477899641 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.480347149 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.051419637 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.99791772 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.649227451 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.614259029 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.677580836 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.469600647 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.478350745 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.469133034 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.557921162 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.478972213 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.055620328 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.015413368 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.499361711 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.482183931 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.481568469 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.481338996 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.659249537 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.054914242 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.559755199 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.995049573 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.80627271 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.789290653 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.483065852 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.54065497 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.498425023 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.791152088 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.483391074 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.538431651 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.95659074 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.790791592 seconds)
  done (took 175.071930544 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.726094106 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.671332358 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.57776093 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.628990185 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.075132717 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.043149814 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.779525273 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.625426233 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.593354858 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.745461911 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.647535 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.573477039 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.6967424 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.558690708 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.202790864 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.548857967 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.57628905 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.627517744 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.6229401 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.50328529 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.150458409 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.777095339 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.66604547 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.411080152 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.583068115 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.231623777 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.044067041 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.996049383 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.652681776 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.790512017 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.021882276 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.580300685 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.437425608 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.178663063 seconds)
  done (took 69.932942971 seconds)
done (took 731.402685967 seconds)
SAVING RESULT...
DONE!
