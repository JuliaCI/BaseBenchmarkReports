cset: moving following pidspec: 14867
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.227873738 seconds)
loading group "string"... done (took 0.548853286 seconds)
loading group "linalg"... done (took 7.534235716 seconds)
loading group "parallel"... done (took 0.173267243 seconds)
loading group "find"... done (took 1.165823848 seconds)
loading group "tuple"... done (took 1.861577498 seconds)
loading group "dates"... done (took 1.267904878 seconds)
loading group "micro"... done (took 0.235557016 seconds)
loading group "io"... done (took 0.766709355 seconds)
loading group "scalar"... done (took 42.553312294 seconds)
loading group "sparse"... done (took 13.359734667 seconds)
loading group "broadcast"... done (took 1.161695515 seconds)
loading group "union"... done (took 14.120177942 seconds)
loading group "simd"... done (took 5.163770981 seconds)
loading group "random"... done (took 10.213432813 seconds)
loading group "problem"... done (took 2.160245717 seconds)
loading group "array"... done (took 22.625672876 seconds)
loading group "misc"... done (took 2.111634134 seconds)
loading group "sort"... done (took 3.469452771 seconds)
loading group "collection"... done (took 19.512610222 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.582394968 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143147778 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150108181 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146491529 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191053575 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159271111 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160867503 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09974705 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025622034 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182703355 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15318634 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518783537 seconds)
done (took 5.309065476 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.282792637 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094969875 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104075752 seconds)
  done (took 0.941846748 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076343498 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144996864 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094827074 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077711683 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09493587 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076924232 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095396211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080328286 seconds)
  done (took 1.407732788 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085415386 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098189469 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080856656 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096356281 seconds)
  done (took 1.103031608 seconds)
done (took 4.560751529 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737498437 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28288167 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204190339 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464995459 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19617412 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216534072 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.732013616 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.48460741 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252676717 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099503764 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142151972 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386642768 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137808913 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.721496439 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089995337 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123988534 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187883625 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.597781579 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082262547 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110181302 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117803984 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144211658 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130013068 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092192299 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185360519 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081702601 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195256671 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110209925 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079995016 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28735374 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200689184 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.783811901 seconds)
  done (took 11.439137743 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110448438 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13305042 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097885499 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137709409 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135128178 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09944603 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083284245 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097188901 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121271358 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176211538 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114315978 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13615062 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095847492 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081507655 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115367429 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245325313 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12368828 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103005086 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100575601 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103808153 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121012692 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112198574 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108758223 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091485781 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166696573 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224719184 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111760244 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127145041 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096717999 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111289584 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14370625 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14174049 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096078122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.078946531 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171969698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125102429 seconds)
  done (took 5.194448344 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.084836278 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.111415786 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191838046 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102696659 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189358031 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104507262 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.098869785 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142721465 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093684475 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097889412 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258266251 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.136194107 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182899041 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142287614 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116866593 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082233687 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098587631 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080163525 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628338905 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164267912 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136072612 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113978179 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086657699 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099706586 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.720042628 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107861047 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079559947 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098381313 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065608457 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159100206 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098921903 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.152205861 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121401301 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081671243 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136531125 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213872075 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109384596 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135433368 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096593139 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079836097 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177964093 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105821782 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07993245 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121715154 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134120084 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135496089 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097182634 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081931821 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204700518 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097344189 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113393063 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.96786702 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080782917 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18404013 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106006972 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077869446 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324174599 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122814438 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078202322 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09681646 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07619318 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312365035 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185758425 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099486471 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079829179 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097714491 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080072761 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.74860196 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083689245 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.140141213 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084883063 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10832112 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082930589 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097549523 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104520244 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086685049 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116199927 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08034073 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100132508 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078978078 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097519595 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080749858 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111642582 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102409662 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080022771 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166780473 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079130094 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116406974 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126830619 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083677382 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096782648 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129651639 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083624305 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098721887 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133410923 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082075167 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109901759 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100494302 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143656447 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080837169 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.167438107 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081832773 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126396833 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099721036 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114261922 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113248346 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099887785 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083890622 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097080984 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077052983 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166381228 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080026255 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099024523 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080890672 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111738151 seconds)
  done (took 23.763486866 seconds)
done (took 42.222923269 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318009118 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103950761 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104169496 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104396928 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101255326 seconds)
  done (took 1.549597101 seconds)
done (took 2.341565201 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290781482 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172917111 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096951431 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168039764 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095218453 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17413666 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160557519 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112593696 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202058945 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096933262 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163555417 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095568815 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077595777 seconds)
  done (took 2.723219608 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096062668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116903838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082368811 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113540201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076424125 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113510878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091911117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118570916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111886713 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087385752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094636732 seconds)
  done (took 1.89254882 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095409697 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11467636 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082770639 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111694768 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076832059 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112599207 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093173923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117508325 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110871463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085912685 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094580887 seconds)
  done (took 1.883710711 seconds)
done (took 7.278698511 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091370851 seconds)
  done (took 0.875409205 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.935287518 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.983303479 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114536848 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152234754 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301590794 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193810732 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.482675278 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125555979 seconds)
  done (took 11.27966995 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115804042 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104088789 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102809385 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097490161 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104046155 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082009297 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102456381 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099614766 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083709995 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10364031 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085469188 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103900375 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103130749 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085970871 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104966469 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086849833 seconds)
  done (took 2.414541686 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119120415 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117797073 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108608864 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109917759 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086517274 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107549529 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108131358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088324216 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103770137 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105238168 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090929791 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107378893 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105583207 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079949073 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108642531 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109902128 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085715864 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108575482 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107508562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090179485 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108887782 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097096749 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087802127 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108458858 seconds)
  done (took 3.351692844 seconds)
done (took 18.709801448 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162993522 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110019449 seconds)
  done (took 1.065332649 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097490298 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114154816 seconds)
  done (took 1.003611784 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098519841 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097637411 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123073189 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111425973 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080029964 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098503364 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121075995 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079620933 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09884942 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079974769 seconds)
  done (took 1.784191298 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083004561 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111571656 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103319708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096149028 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10644351 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096032375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088997571 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101416652 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110499986 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07809745 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104620883 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115880054 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08596375 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117760563 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105788128 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082294254 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105195633 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100347234 seconds)
  done (took 2.59096176 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081426859 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098299835 seconds)
  done (took 0.975744947 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082424935 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095860282 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080324288 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099011968 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094634714 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077763578 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096038883 seconds)
  done (took 1.421372846 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.499109943 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138449764 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264992022 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102651443 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121839341 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305840258 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100702879 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083842906 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105484054 seconds)
  done (took 2.559901498 seconds)
done (took 12.197796874 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095093069 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119023156 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111786353 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.47305648 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108178908 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100689453 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148178686 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252422778 seconds)
done (took 2.213097606 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143754719 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332777428 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119049648 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068427092 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.100131663 seconds)
  done (took 1.42500657 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081022743 seconds)
    (2/2) benchmarking "read"...
    done (took 0.1009913 seconds)
  done (took 0.985308186 seconds)
done (took 3.36613451 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081616959 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09867295 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114435317 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098931208 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079623459 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098468421 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077596717 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101945548 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07965985 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09920717 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096743084 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08201842 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098069749 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078548019 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095310168 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081532132 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095445728 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078809772 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096142999 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078564818 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098433142 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078152942 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095545384 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078409899 seconds)
  done (took 3.002290078 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101052931 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100399173 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103695441 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087113762 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104167663 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087405212 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105236143 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09881285 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086786774 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10175866 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101597419 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085909463 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101149046 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083608593 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102367931 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102088648 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087469396 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099368462 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082425226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102977455 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103652605 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082131707 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102578163 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103391513 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085909674 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102019932 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08212388 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100230519 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10361523 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085544771 seconds)
  done (took 3.684851672 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086621135 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095060966 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079220697 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103398133 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078355372 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098823776 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078364671 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098082895 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078747364 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096572466 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07964492 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097213786 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077438025 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09871791 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078421525 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10229995 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108887678 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079890082 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096651445 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079081533 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099687302 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078171488 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096904044 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078146198 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096560078 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078547432 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096832532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078297631 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097997479 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078700749 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101081263 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08148706 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098019792 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084534022 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101447303 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077741524 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101591393 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076402617 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099051537 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095276249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079375972 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095849549 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078468819 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102989465 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078861122 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097992889 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078825914 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099081238 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07900182 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100592174 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078115806 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097092535 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079548067 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099190371 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081924418 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097205039 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097137394 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079489195 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097944843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079174651 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095468497 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077989671 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098562325 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078699432 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112548699 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084319054 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096663279 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079284615 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098309015 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079684486 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099422042 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109240141 seconds)
  done (took 7.288437653 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083693588 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107525333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080650782 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1000702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076536939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098754369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099960085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080489835 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098466166 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085572994 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097923705 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079125576 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099592016 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109127344 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080810408 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098971906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085594363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095576287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078796204 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101894714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078219277 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101697169 seconds)
  done (took 2.835714282 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212628403 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108095194 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144407419 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10865721 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083218404 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108302573 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102880476 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087907968 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104365341 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083323444 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102907183 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104641672 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083477931 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103080818 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102220496 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086576266 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103895457 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084991896 seconds)
  done (took 2.736686494 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094446273 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10129848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102540283 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101353366 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100285885 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084893852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106422527 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108487084 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085331454 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100658705 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090397002 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103437181 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102087894 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083213186 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10236959 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08218771 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103267648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080682417 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109848746 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106251435 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104400681 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091509748 seconds)
  done (took 2.968432122 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097697196 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10245387 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118520892 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085927979 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096023354 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080268024 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108168934 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080432029 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108468247 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102766578 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082158443 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099510727 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087223772 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101339804 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104456372 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082322854 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102290175 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082068533 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103408873 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07620751 seconds)
  done (took 2.725380945 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103517583 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.215915712 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100539744 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093269319 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102924483 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082006706 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11104128 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102143682 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082286831 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128271024 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10257761 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082569748 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112380809 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108485246 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100665997 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092412248 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112004377 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110772453 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082029729 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102698947 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126536847 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08192948 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111188662 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101290063 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082576176 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102435264 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101082285 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088558366 seconds)
  done (took 3.749440795 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082477246 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099706903 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079787176 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098025139 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079042465 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098224019 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079351265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097574159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08176039 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097374438 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082311309 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099525164 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084169886 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100721853 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081568966 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100209821 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081815666 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098204165 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078802359 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098635646 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080552853 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100935592 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080281238 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09901099 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078816146 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101003743 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078312143 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09865207 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081790677 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098808549 seconds)
  done (took 3.525101989 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091724022 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107532113 seconds)
  done (took 1.025603691 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080190702 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116107994 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078305136 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104854528 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085588364 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102981295 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10952617 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086628822 seconds)
  done (took 1.591982651 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097608988 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111786934 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082754022 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114324634 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110686476 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095617009 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166494411 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102061346 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086568683 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099896062 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113988295 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082327308 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10603676 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082236976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106830149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08832972 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098525553 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086263275 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10405938 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098029052 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08346849 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111901048 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083373582 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098349585 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08301879 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112369441 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110758658 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083758845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10507485 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109051201 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088795326 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094747478 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081977325 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101611131 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079847875 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110866141 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113141044 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086019668 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110610753 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083139375 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112888904 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095873115 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088141889 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106816831 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092223173 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10285945 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082827158 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09790234 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078773341 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105223534 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096671331 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083137584 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095494398 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090310478 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106421547 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113602048 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082246038 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101820908 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085248266 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104769822 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088747525 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104444452 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084765238 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102005684 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108379442 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087643505 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108678791 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077308389 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096020543 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082903376 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110111688 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124447767 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089695002 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103360093 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083289281 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100219486 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1038143 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084990009 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10887816 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089961596 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10268108 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107908685 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090106857 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102746758 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084641991 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110607447 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098969819 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085182979 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098994319 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09690402 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101550857 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079274444 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099917599 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110249613 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086314173 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101735374 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081036156 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109681793 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076449919 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102989974 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083176653 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103529926 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110241521 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088528142 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10834529 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107975394 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090049849 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101648785 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085806484 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098374339 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083189375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10539431 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08838315 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097260214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103228536 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085480082 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102344401 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089728248 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099745411 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081519175 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111247794 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108641431 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081294736 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097912944 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086047473 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102996899 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086432975 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10925924 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099673772 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079312023 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096676176 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086699221 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102263308 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087157326 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108462603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104468736 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077962202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09941388 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087717001 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109789735 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081940157 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103051607 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106211159 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084534913 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101649591 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088513923 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105000705 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081859547 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107051689 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083860399 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.099211733 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104650565 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086163814 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100279451 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085704613 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106408201 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083850027 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103999868 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100476664 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088275053 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104248212 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080972669 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102294755 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080382153 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112063131 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103562851 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078819313 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098421409 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090275477 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10035185 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081548679 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102356314 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084373623 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104089092 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099498421 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08316607 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10277343 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093601634 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107595222 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10283267 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090160134 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113031498 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082016577 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104439771 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082450982 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104338073 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102580549 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091186504 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108514909 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088504444 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10508425 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07753246 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109283037 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109257031 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082350928 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100461063 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081913428 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106848365 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10737729 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086986979 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103655531 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080693745 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102939564 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086771787 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.1064299 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101552321 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083092436 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107098651 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082164321 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10992138 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083685015 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112255831 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106774694 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078459282 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106923405 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080743222 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109536889 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078738506 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101081813 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099952449 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08497081 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101109845 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0859423 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097069757 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090170608 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111487767 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081889468 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103408222 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102288875 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092946531 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104178544 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086668213 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106542218 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087661975 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116232607 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101046488 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087310768 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111905458 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082612805 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097700154 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087072121 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10236681 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10195426 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082862448 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100318653 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086235382 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111736427 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105832812 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078224407 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105159406 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082240325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101486093 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078948195 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108531437 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085815237 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105219008 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111036264 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084921686 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10389855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088070679 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103292956 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08274855 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105130053 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104611926 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084265808 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106230981 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082896279 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105971364 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081691229 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103447113 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084216873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105254604 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081883119 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109253523 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102204977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082996342 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105949343 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083369776 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10420584 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082876083 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102882127 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105780176 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084933024 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10224125 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086707653 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09847355 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090785932 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103635666 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090413766 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104510331 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098356841 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088686425 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105652763 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087889757 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104149209 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103340128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085465247 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102060313 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087019791 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111929247 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080635708 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112232432 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108538968 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084489758 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106019921 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082932429 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104249191 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082526578 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105800386 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083140768 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103875694 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081317334 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109183166 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105303595 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084051772 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105565452 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083780916 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103571668 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083701854 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09814651 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081756627 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10472008 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102607137 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09123332 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104620727 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08635348 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102440573 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083803607 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103307123 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078353337 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112124547 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113239128 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083330846 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113028591 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10244879 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085180623 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113216712 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07678063 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102427457 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080243394 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102097043 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109330622 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085373888 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111714024 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083315248 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10403124 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080639318 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105636902 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080974723 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098839056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079893449 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10688945 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105052965 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082846172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103129767 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086704302 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104771685 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090142492 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.112580051 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084117922 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10516358 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099787636 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083162831 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101571615 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086876931 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104593793 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080842707 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101261152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082461275 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106091006 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082989687 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103803263 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10449342 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091031037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102690807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086193857 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108297877 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077152224 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106762219 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102293837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084022656 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102542938 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087494966 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108053352 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084420913 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111111583 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102606961 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084946782 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103328528 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081001443 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104627808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08325468 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104879686 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081934602 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105169575 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111736966 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081769591 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105855943 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083546303 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104256022 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088263648 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105591888 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085100975 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111642245 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107002535 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085127959 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111138124 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08725148 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107719879 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104377771 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08548763 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110232762 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081952765 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112976235 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082455284 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105632719 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104768937 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082256254 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10320533 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083959006 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10292528 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08779311 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105423858 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082519278 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103470779 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080979584 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10633391 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106720291 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091759062 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106828966 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086187004 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100487423 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080501712 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105488852 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100655576 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086880142 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106092571 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089780376 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106802426 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083374216 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103817256 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090005189 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11145075 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108637705 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081546796 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108566506 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084885546 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10795168 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083626234 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105135501 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105219072 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08864515 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10608685 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083319489 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1128057 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086855112 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106180991 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105139231 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084898919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104719279 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079439019 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105207534 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084772192 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111342985 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105473585 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085498176 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113264882 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083299299 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104404131 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086461686 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104878656 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110320405 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080539188 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10442768 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085451818 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106295596 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078869173 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104525198 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081641468 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107374765 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082138936 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100826409 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112722827 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091591048 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107075753 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082342164 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103486195 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078296505 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099957625 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082286273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105983107 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106100461 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093410512 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103566312 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082567732 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100237504 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083262549 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108996698 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105892211 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082582141 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099049686 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083503525 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106228082 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091640206 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103822613 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082889726 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108928481 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085669204 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103448311 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107976738 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080861651 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10774678 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094536282 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106347524 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084318047 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110544359 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11239502 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0841609 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100654391 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084844279 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106782745 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083759815 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106215867 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104854147 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097651185 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108272594 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082450947 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104384513 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105789726 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084488789 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111567864 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085719085 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106099375 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088097006 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107374653 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112309053 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087049493 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110419748 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085319723 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106994941 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082060869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105748114 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102268634 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083531136 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105500608 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085373639 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109408795 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111271512 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085517239 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114158723 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091449912 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110197211 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079882319 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104318973 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082283531 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101466449 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10438364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083679453 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102156832 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08238453 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10320944 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084422008 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111118485 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086008947 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107334923 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082994251 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099265841 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10767325 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087547228 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106002057 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082000327 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105654156 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084568914 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111053086 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10734028 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086012561 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106046018 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086313807 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105402616 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079948393 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111795565 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082997465 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109096379 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082951189 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106053004 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104554251 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089002421 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110463773 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085539509 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108479798 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117184874 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087829448 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101809093 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081748138 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111004168 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082793443 seconds)
  done (took 58.422399299 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149122059 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081940061 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10029695 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079341483 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115797434 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100282273 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080765004 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101695446 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080996804 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10462668 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079679969 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101363216 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110630082 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126653504 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093394462 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105860281 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078951787 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102741019 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100148921 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081260788 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111272855 seconds)
  done (took 2.96811336 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105121085 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12021769 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116123245 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120863628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090010987 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117003223 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115881565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116995648 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099676915 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112758427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120874605 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117043167 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09282087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112366164 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11258824 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093533361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120959483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111806766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11793575 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095200227 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115060077 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115257554 seconds)
  done (took 3.317696994 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08501867 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103624648 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08604244 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100069295 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083638513 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100492226 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08755863 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103418084 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086846124 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104701286 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08186894 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104481033 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106528673 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079907194 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10437019 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082871927 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152743768 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109489694 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08284323 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107203884 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078279249 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108683914 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099913214 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081041125 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103889341 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087779703 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106423313 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082522874 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10601822 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081690231 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105678788 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080327255 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106730185 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103997294 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084072718 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103318898 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085085491 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104110089 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079487269 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10247141 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08399926 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101429747 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084186679 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108159959 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081435311 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104180593 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084861611 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105354424 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078381167 seconds)
  done (took 5.558031218 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10465155 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162680911 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086307141 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145491113 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123028514 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114742405 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087257951 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14384204 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105099027 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082478302 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125006031 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122027808 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10598975 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08899807 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109528728 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104582646 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086311036 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104920888 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087556114 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105409562 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110288485 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089410612 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121471551 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119669946 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109650831 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084345822 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104773606 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109269669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097985621 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11245551 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110758824 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090337037 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122737511 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107883158 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083721919 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108962984 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123501422 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08432533 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108323155 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102427344 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087990723 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110486764 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111166827 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102907355 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106202527 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109763716 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084556435 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102884898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118431145 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087792681 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11483904 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121853556 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08918353 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107525732 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110803626 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121096817 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085295168 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104056586 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08720641 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119061736 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103343717 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088892532 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120678067 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108566939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091960664 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120951857 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111257662 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10999472 seconds)
  done (took 8.26312629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093734887 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113124864 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122275134 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122556339 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091194279 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112553178 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11317487 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090291425 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113115882 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118537678 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112728424 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135787529 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086956452 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116915515 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1130051 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091708699 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113375062 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112793561 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09045843 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113576209 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112748782 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122151989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091530771 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123422483 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144217072 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108023586 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090180127 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113495782 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123209044 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112844792 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124427875 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092889432 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112569436 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123517177 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126014328 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091340607 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105737465 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111454069 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0912932 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114082271 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10688846 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100660545 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114001526 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108050506 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090259744 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113545365 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122792796 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12535907 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116869088 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096735593 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113734848 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122336206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111816065 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091900949 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121886223 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149556223 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122447993 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12301558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112273239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101224986 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122620964 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130834566 seconds)
  done (took 7.821383478 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107560516 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116975261 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119158404 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101728458 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083838438 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110688808 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082225282 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104570305 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114716996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095288779 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118596868 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110462541 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092078304 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119115425 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110144351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113221494 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089075917 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111327424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116317919 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110233015 seconds)
  done (took 3.021683262 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094971814 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125840594 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085510383 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114397102 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110315585 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089535817 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109885942 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10924404 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086885571 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109878328 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095367294 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118832804 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106456174 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090849862 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118806056 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112993634 seconds)
  done (took 2.573402885 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095944571 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118839417 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122269427 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08431914 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106071359 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081011439 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1076982 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102086444 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081708844 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123161434 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084428597 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113209674 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106615608 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08435483 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103445127 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087353688 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103703995 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081877186 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108224636 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120933592 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094840971 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106146565 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106528158 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087828484 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10678216 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089875473 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108860031 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104031111 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083885715 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107643015 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084468783 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114929318 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102724542 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084761085 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10431131 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083001767 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107398967 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084752994 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110436887 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105819374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084364422 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10570765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085191869 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108327213 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080603017 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108159227 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101661054 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092125966 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104726444 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08559333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107137953 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08615809 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108956817 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118263182 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088759914 seconds)
  done (took 6.360622757 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099662148 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111210814 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079736325 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105897021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087400185 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110656297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10956704 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088311107 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107882535 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083540119 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109613376 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088861931 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109342639 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110330005 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087715628 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111356391 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079995184 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109149078 seconds)
  done (took 2.694493729 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091940509 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106564139 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092721447 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108471049 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084146426 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110718046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079710092 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106864124 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104436883 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085879664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106429151 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087069973 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106289211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087011362 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108315541 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083831145 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110900039 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103812179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08558811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102896727 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087087816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106189476 seconds)
  done (took 3.049758076 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118902698 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127278832 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09206506 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232906754 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104515405 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.1348998 seconds)
  done (took 1.713951482 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109818509 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123399917 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108115247 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107592825 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117939645 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085207955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110047354 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109388884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118115712 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101187513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109870053 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119020476 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118238853 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095537516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116239105 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116449411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108231381 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089105939 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108380182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129937382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08796754 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119474258 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110250295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086612212 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110971438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11933202 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118310069 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123303452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089061731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119118746 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115922373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087367238 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119784566 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123849608 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110368526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0990034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110219894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130261857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115871568 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097427942 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11098886 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117160905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097817425 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115545447 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119629114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109429096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092776559 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111109988 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109979608 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137452479 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094757743 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118918635 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11702626 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119487585 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097416773 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157921068 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101464365 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118929877 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117302527 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124346159 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118403974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093363515 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118871303 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12443407 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116565581 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118841584 seconds)
  done (took 8.284514602 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102140922 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127759499 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109645228 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124866476 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09672972 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110928175 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109269204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088445587 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11014444 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107770894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154296285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089017192 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12038336 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120106399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08717019 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110690462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110967003 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118740301 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087233314 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136930767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110171335 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119704895 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118581891 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097869576 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124450645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116822389 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109480538 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087530111 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110316505 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109026914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094771407 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110722094 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11919099 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086040632 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119610442 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109618949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08669566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116290391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109311991 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115970493 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098003839 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130608849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110513197 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109635301 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102432157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110825503 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110118105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086214556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110922955 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108722751 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10238852 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124514201 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124368455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119662442 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109188301 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088062434 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110239925 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109999328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088332723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11756063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119560193 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085936843 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16015234 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089014333 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110501414 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118694712 seconds)
  done (took 8.163175964 seconds)
done (took 158.148915858 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.235138142 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.244091299 seconds)
  done (took 1.388208774 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099828683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138691638 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09547655 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171590969 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107424788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119619873 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139615247 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09748191 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109204738 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085387046 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108920936 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086341096 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173784923 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084786313 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109199397 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110130967 seconds)
  done (took 2.757600147 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201971739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.258054166 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101628496 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108477138 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088665129 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112778667 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105884471 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091863338 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110957877 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085534464 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110719527 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085995595 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107681607 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085212988 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112237556 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086711416 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10855783 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087919423 seconds)
  done (took 2.966780001 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112441716 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.16000386 seconds)
  done (took 1.191702974 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11948021 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181908172 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319489374 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1568009 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105659788 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128322605 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158199075 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132264951 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198413954 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124228159 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12355454 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097599121 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142152878 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118008435 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094053053 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120386029 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142603607 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09215562 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117845029 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116805751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11612784 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109472586 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116311873 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093682366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183210743 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121850529 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084663754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109117542 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116940196 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095148648 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116498035 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125142929 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097544414 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181391523 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102241796 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179522938 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09733219 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114670647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11597227 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092477268 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121003102 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11971017 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104199307 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120382804 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084844715 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120915955 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107244048 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086246541 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117298368 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.095988789 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117569705 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115337385 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154369008 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119928508 seconds)
  done (took 7.663039072 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800985422 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157586965 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089666807 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.896142904 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138891663 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103349841 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.786376042 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135226719 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233081934 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761682722 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134457712 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122471935 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228457848 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236998629 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95376178 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314323222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673580536 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101743089 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152546837 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154428326 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120196429 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137356386 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108716281 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450803593 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095438765 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113457412 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095112091 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123342231 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159799917 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126228033 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115711593 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178765238 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247988439 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208384939 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116845038 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089683347 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112387358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170822171 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268204599 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21425173 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181267532 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087659291 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111902792 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099978323 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133724483 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109689005 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164536898 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173558076 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196277231 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091768062 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121594979 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120543385 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098270057 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186873079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098605851 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320199636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311053843 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113791533 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098227136 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128817405 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264490788 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124199502 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223999969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116865328 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214460326 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112484511 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777824431 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191942154 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090057307 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119822127 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097436463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117629913 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121761928 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169566859 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393402563 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124459211 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092832796 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112866979 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203551404 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126592539 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112074653 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162988931 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092939222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1224209 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126225715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122705541 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170596693 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230613602 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12490407 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120882207 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093396424 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126866807 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117124083 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211826741 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221053445 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163239488 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210366163 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125540057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163136633 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191661546 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099137754 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195247083 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098046838 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127378531 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123544118 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217532871 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146313029 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100982795 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117347953 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118518125 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150031158 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105327796 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120540126 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169954126 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479918254 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168615423 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109455874 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106172328 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121487789 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160863598 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119642597 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257458343 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099385899 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191281076 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097445984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111121725 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120838939 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166315412 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122845748 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099141924 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123588375 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120670767 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236564585 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219888298 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101316898 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245366885 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185242059 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119710767 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172421495 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122173365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168242672 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121924723 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099433901 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118147868 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795746898 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10010438 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122143222 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116020953 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18776968 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089274756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126288627 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125816131 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086756946 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774805232 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128855854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098914118 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125881874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119886756 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120163162 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09731234 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11745484 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163699149 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232543715 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122399121 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097646815 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126222653 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15960466 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118997718 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126897856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124058097 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105008969 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123373097 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114865079 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102891316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192630025 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164521854 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222508334 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568182724 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114070066 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126263859 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206835386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113572097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289037308 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121123426 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205736583 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189935187 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098820343 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310839452 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189109788 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188520344 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105625438 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197127946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088033505 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119723374 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166168676 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113171665 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09508398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184925734 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10328349 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125155249 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959604563 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089807509 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247495329 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088023806 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169137028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118679652 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122885091 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296933581 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090193465 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131392342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164340279 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117001587 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125901238 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722922575 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12741339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12266312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097409304 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224193973 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162470838 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12168127 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120488117 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098782427 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187943834 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208896936 seconds)
  done (took 44.258418663 seconds)
done (took 61.140810627 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279665954 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219466746 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26788719 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171715104 seconds)
  done (took 1.960287279 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173194004 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150779474 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.144786792 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086776872 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152452821 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084004688 seconds)
  done (took 1.738269085 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361138184 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27696368 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243829909 seconds)
  done (took 1.829096172 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319191748 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249833875 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.478179664 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328254149 seconds)
  done (took 2.41862084 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211422376 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134401347 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113738585 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104210953 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.20626032 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249368561 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143048088 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204776066 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122230744 seconds)
  done (took 2.481089055 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.177125406 seconds)
done (took 11.552778932 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.252395452 seconds)
    (2/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.328627817 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.208657266 seconds)
    (4/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.237317831 seconds)
    (5/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.155045596 seconds)
    (6/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.125244611 seconds)
    (7/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.257358095 seconds)
    (8/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168592404 seconds)
    (9/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.268966742 seconds)
    (10/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.159632088 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102358121 seconds)
    (12/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.219650137 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.208807118 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113567623 seconds)
    (15/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119245039 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09896272 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119701829 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.238966157 seconds)
    (19/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114883731 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20754312 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086881005 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.137344818 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205168159 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092533775 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116924693 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085197401 seconds)
    (27/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116701864 seconds)
    (28/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219192925 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.093734118 seconds)
    (30/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.224233085 seconds)
    (31/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120564841 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093140124 seconds)
    (33/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159524923 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06913728 seconds)
    (35/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177501297 seconds)
    (36/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.144676831 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.223852684 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093726204 seconds)
    (39/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.203007341 seconds)
    (40/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135008958 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093193419 seconds)
    (42/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.120116046 seconds)
    (43/286) benchmarking ("sort", Float64, false)...
    done (took 0.146893814 seconds)
    (44/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144343745 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115698382 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.160326697 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12421087 seconds)
    (48/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.195742477 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.137127946 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109792513 seconds)
    (51/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110920625 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.094482882 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117706798 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09352321 seconds)
    (55/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134802468 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147952227 seconds)
    (57/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.121213381 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185873642 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08130468 seconds)
    (60/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111933025 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085775532 seconds)
    (62/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.092244454 seconds)
    (63/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.204316433 seconds)
    (64/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097805226 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.139455781 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112533413 seconds)
    (67/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095354095 seconds)
    (68/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117816394 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096618771 seconds)
    (70/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178061735 seconds)
    (71/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065845872 seconds)
    (72/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.15509335 seconds)
    (73/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.131324903 seconds)
    (74/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175218997 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11120154 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116030612 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175300526 seconds)
    (78/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066551297 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092520054 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.12642759 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.141120076 seconds)
    (82/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221515854 seconds)
    (83/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.174676744 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136972508 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.157773036 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135717673 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.112238151 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223175052 seconds)
    (89/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.089027039 seconds)
    (90/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.221757963 seconds)
    (91/286) benchmarking ("sort", Float64, true)...
    done (took 0.232202443 seconds)
    (92/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.18183524 seconds)
    (93/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.129122923 seconds)
    (94/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.092940965 seconds)
    (95/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094629645 seconds)
    (96/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198075522 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.17574329 seconds)
    (98/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066257727 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138859539 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.201341941 seconds)
    (101/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092558388 seconds)
    (102/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.092306292 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.160114479 seconds)
    (104/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092131484 seconds)
    (105/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149581408 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120506734 seconds)
    (107/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123911963 seconds)
    (108/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067736802 seconds)
    (109/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180798331 seconds)
    (110/286) benchmarking ("sort", BigInt, true)...
    done (took 0.2308899 seconds)
    (111/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102957047 seconds)
    (112/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.149666355 seconds)
    (113/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18577094 seconds)
    (114/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.176829115 seconds)
    (115/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175802972 seconds)
    (116/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083223433 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11277374 seconds)
    (118/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17278568 seconds)
    (119/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088174353 seconds)
    (120/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123868656 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070130451 seconds)
    (122/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120984746 seconds)
    (123/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092607455 seconds)
    (124/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11857261 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.182338221 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094429074 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119472919 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137720843 seconds)
    (129/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09505469 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 0.221158593 seconds)
    (131/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.123362976 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091409292 seconds)
    (133/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093391643 seconds)
    (134/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089541766 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119885029 seconds)
    (136/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099602625 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119024802 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085634868 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092829677 seconds)
    (140/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067538867 seconds)
    (141/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.119231932 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113023523 seconds)
    (143/286) benchmarking ("sort", Float32, true)...
    done (took 0.230712336 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112284514 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093340042 seconds)
    (146/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104331059 seconds)
    (147/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066329157 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121551267 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086566333 seconds)
    (150/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065519806 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092258856 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094276585 seconds)
    (153/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.145964901 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140519233 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067689311 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066390877 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.150051089 seconds)
    (158/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065714282 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111993012 seconds)
    (160/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084682477 seconds)
    (161/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.127503452 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136950088 seconds)
    (163/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.15159363 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125656854 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086135033 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137872174 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111329959 seconds)
    (168/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.07769466 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092345679 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.111484984 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097046268 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.197747615 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091817421 seconds)
    (174/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.130030641 seconds)
    (175/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075030873 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121702852 seconds)
    (177/286) benchmarking ("sort", Int8, false)...
    done (took 0.190436879 seconds)
    (178/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119605683 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097277422 seconds)
    (180/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114242237 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066613497 seconds)
    (182/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.301265605 seconds)
    (183/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.151948648 seconds)
    (184/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115029197 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.221458042 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086480776 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118117958 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100793923 seconds)
    (189/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092183469 seconds)
    (190/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117948463 seconds)
    (191/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130506599 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143525143 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086946131 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121298756 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094340531 seconds)
    (196/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092043397 seconds)
    (197/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095210199 seconds)
    (198/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065864339 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114000912 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109649959 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087326071 seconds)
    (202/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066831706 seconds)
    (203/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114994744 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091502567 seconds)
    (205/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.097358883 seconds)
    (206/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067739862 seconds)
    (207/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076090423 seconds)
    (208/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120258538 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085077149 seconds)
    (210/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16131077 seconds)
    (211/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091997473 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088068075 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117700928 seconds)
    (214/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.06826005 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084913093 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.122409999 seconds)
    (217/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067369317 seconds)
    (218/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116939044 seconds)
    (219/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120241411 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.08942487 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111693997 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148288093 seconds)
    (223/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119989554 seconds)
    (224/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078295024 seconds)
    (225/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138015815 seconds)
    (226/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086025436 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127925783 seconds)
    (228/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087831242 seconds)
    (229/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165630954 seconds)
    (230/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111664737 seconds)
    (231/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092640169 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.091104597 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068350798 seconds)
    (234/286) benchmarking ("sort", Float32, false)...
    done (took 0.175222847 seconds)
    (235/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067840895 seconds)
    (236/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077785351 seconds)
    (237/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13963529 seconds)
    (238/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066509403 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11929077 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066827594 seconds)
    (241/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.09140536 seconds)
    (242/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135556664 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120695557 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094371952 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112201953 seconds)
    (246/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067769062 seconds)
    (247/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066513945 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093557783 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08759318 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116781459 seconds)
    (251/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092856065 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112416421 seconds)
    (253/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086726644 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112663733 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06707608 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12135886 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084709058 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.111035052 seconds)
    (259/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099390509 seconds)
    (260/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138467227 seconds)
    (261/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11262674 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08759342 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120360249 seconds)
    (264/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068574337 seconds)
    (265/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233618657 seconds)
    (266/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067181175 seconds)
    (267/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118528761 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068292826 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113016248 seconds)
    (270/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069098143 seconds)
    (271/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113445328 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087305373 seconds)
    (273/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.093458949 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093287699 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093013817 seconds)
    (276/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078086143 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086161945 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115765478 seconds)
    (279/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077386174 seconds)
    (280/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.113124352 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103239842 seconds)
    (282/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094042881 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092067144 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136890716 seconds)
    (285/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067071026 seconds)
    (286/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.11582163 seconds)
  done (took 36.480972422 seconds)
done (took 37.433388624 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101363436 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150055894 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095313106 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138176624 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124866049 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.0916896 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121523696 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096979892 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126505727 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126499908 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098014693 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095188626 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096966519 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122182293 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098618876 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1416717 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125715667 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09410303 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121704726 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085532791 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121906933 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086150751 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115082408 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069578807 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123422188 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093658727 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119467859 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12115045 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087611538 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111729625 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091089576 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119252864 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086920035 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128478474 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093324225 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.122122871 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096520813 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122357553 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088360985 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.1132391 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11859995 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087985724 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117744759 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095250282 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117044598 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092650256 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120154011 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099750212 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142433271 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116206311 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095464364 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121739486 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096776015 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120232218 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09009147 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122062078 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091125918 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141467684 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120986953 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092611734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120645671 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094282917 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117813679 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093804251 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121962139 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121315396 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099699773 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117583201 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098294441 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117799594 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086780349 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121315589 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08928406 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113615331 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095594186 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123997528 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084857076 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118888863 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093431134 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117696032 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110674953 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090528998 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112514919 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093961411 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113594162 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070419436 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.088977086 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118427266 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086157167 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122009456 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11791176 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093589822 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113033214 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098971133 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112644988 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091677731 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112156714 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08664687 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11458821 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091307664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112701486 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088962358 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121933346 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08807573 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11893407 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098338328 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112507017 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117833338 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086912 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110795492 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102316994 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123223694 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08659002 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117647276 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085515766 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120062202 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086006407 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112540426 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086016067 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112893741 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092424319 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.1131476 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088394446 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121145549 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125800008 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088254938 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115088488 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091044876 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110727095 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093069718 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111440787 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087011305 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114025047 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078234309 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114584459 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087845729 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119035688 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090517498 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120586204 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089702413 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12104391 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091605847 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11889791 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092090334 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112375845 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074185081 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117342061 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089981124 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114631402 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086160075 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114649192 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086547113 seconds)
done (took 17.121211881 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087650081 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184909839 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152572981 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143272194 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106805218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113956401 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122055034 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117969143 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115293834 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143396373 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110061786 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133465147 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148555475 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08711066 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113648237 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091526052 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11446843 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101339467 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147363014 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134713432 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164533431 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085530945 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147607041 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13718327 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121267119 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113831239 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113913762 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090927613 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117464414 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101956721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13415425 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089399213 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114229111 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134656372 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103711892 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121406879 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086445719 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120706576 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086202531 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113828301 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140848942 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108148597 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118643564 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117766185 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091625534 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115768516 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088612518 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122618943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097465336 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118513724 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126383015 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156099533 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090894579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122547552 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085786817 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124204602 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121602925 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091364166 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113276305 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090480019 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112654764 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09134302 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128644044 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142577149 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090887852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123536085 seconds)
  done (took 8.705781613 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105525738 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141121158 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103997987 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132926785 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112490612 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088530372 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114689388 seconds)
  done (took 1.813303683 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089635596 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135026277 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112554364 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139369384 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135411131 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108724651 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126993631 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.086709471 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132239297 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115455542 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109791748 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153454172 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088302407 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12351357 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140172438 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088229674 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139271668 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087555508 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118766186 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137915303 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092152922 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136048949 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089892153 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115588093 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102128439 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116162883 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16404507 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093188404 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117228976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091376761 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113220272 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165746178 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100752434 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127883213 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113794542 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103793909 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130032058 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104733191 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131979979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092963581 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130052809 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115032076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09017919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112431441 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093554036 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125670529 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089803961 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115837687 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090821188 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13488572 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088793056 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130406717 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087732929 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119745332 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115675955 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09554616 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124462585 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090079111 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135095163 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089528623 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132374717 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131572329 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104103419 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131501709 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090275037 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129580693 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1017411 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118849632 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116173814 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093615964 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132000353 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086622051 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117246459 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100267859 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118017765 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111370077 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139514012 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116356224 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09955231 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115869559 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089289957 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116189455 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110823786 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120625311 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087717162 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12296559 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117120751 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087990289 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112791871 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093513999 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112702563 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091079012 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117133621 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09047446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11734905 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105814601 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116175624 seconds)
  done (took 11.961633445 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091783602 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1148329 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094315136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115511191 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090752647 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11708176 seconds)
  done (took 1.649089525 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114529062 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11895551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102825564 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122617893 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157566604 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10291878 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131654782 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125238562 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107255845 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129386161 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13030728 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104161537 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137408184 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120539294 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103429271 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122501829 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130144341 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100826911 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128560467 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095590834 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137692631 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121804182 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096856156 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133540163 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118068105 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096566239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125746198 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101035245 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129082902 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124333991 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096748913 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118601093 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095422324 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125436265 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.1317248 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095835894 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122352826 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11981655 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100475041 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119467681 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103908517 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12410192 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127713238 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093280372 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12581781 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121258354 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094261561 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128012541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102543972 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120531404 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119626945 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09571224 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120092489 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092823531 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123303323 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123787915 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093831072 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131102979 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094643676 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12264793 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119018413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093317849 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12545978 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117863402 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104614669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120703494 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095251198 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123333868 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122435266 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095449369 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120660438 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092589228 seconds)
  done (took 9.31391535 seconds)
done (took 34.457757886 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.705233917 seconds)
  done (took 1.728649098 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.848996317 seconds)
  done (took 1.873529819 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.903557508 seconds)
  done (took 18.957209228 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50935057 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600059946 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.008553011 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180650002 seconds)
  done (took 3.323953503 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.982226575 seconds)
  done (took 2.026216616 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286310541 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232813305 seconds)
  done (took 1.548212738 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80376513 seconds)
  done (took 1.844326405 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.385863088 seconds)
  done (took 2.418496792 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33107524 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186069744 seconds)
  done (took 1.55643042 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554187469 seconds)
  done (took 1.592446985 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.297461669 seconds)
  done (took 8.341182077 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270819548 seconds)
  done (took 1.323910745 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303923899 seconds)
  done (took 1.348645583 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.71510763 seconds)
  done (took 4.760609883 seconds)
done (took 53.679553321 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098963344 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128068928 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102697536 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126322621 seconds)
  done (took 1.495649155 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102179327 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122629434 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099821954 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122532802 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126786338 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097469712 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124759603 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101054924 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123376029 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09597833 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123463337 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120769986 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09939027 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124352829 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093290224 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126074782 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098234019 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123333817 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125179865 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096622799 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121232551 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097137037 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126585935 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092908248 seconds)
  done (took 3.732789644 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100751626 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120273903 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096606132 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120132693 seconds)
  done (took 1.493030907 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10101282 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144027525 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139452964 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101315426 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144318681 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137240271 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092998084 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118838462 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094681611 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126898859 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090708717 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152082055 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138858676 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099108489 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129073732 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087465901 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119560606 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138065746 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100420062 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129075738 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092005102 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127291588 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090157417 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142219951 seconds)
  done (took 3.88680536 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17062666 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12977899 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140589208 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095758827 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162636425 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141492759 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089021714 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142074566 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087479732 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133780754 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118654434 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134813396 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130565801 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087918011 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116239734 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087302285 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131964346 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130399405 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091457767 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129226485 seconds)
  done (took 3.508585076 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098819376 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118237232 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088489903 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118047877 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099347977 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122386948 seconds)
  done (took 1.702167274 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091537139 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115623899 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091153517 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114935142 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095714527 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116476907 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088925041 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116020942 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09005859 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116359712 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089624283 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117773867 seconds)
  done (took 2.301062416 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503804291 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123811951 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120828523 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089583938 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122900187 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089266519 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131403236 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091356517 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143466923 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088752316 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118103882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.0896412 seconds)
  done (took 2.769305969 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235684871 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127669834 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289000793 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373061481 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158108769 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177949912 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285533344 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166394904 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227874711 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167384226 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23089344 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198759374 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152928707 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189990733 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139942322 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146509604 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204959957 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250286005 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155539771 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209272341 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229457612 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169173961 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182234218 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153019969 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140821237 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173303266 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122166784 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104734291 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23644637 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176324042 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219144971 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163222456 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14795817 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210869776 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255155383 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223825653 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285987977 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138432342 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149431251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170216592 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26964543 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140705198 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230892447 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128036716 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133374904 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220998794 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169304954 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177592646 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154200875 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140301892 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196026215 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242834049 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192655559 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140583097 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305336418 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15279381 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.203179266 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195474821 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254838704 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201906529 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21564315 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.0962445 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190775412 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224090906 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188150285 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175146816 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209105645 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148271833 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201624067 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191140114 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164514131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223403761 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187643355 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142451667 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171593117 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174019118 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171788159 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258040676 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213540677 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095688833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16950325 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150836519 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135618932 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196174201 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097622096 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242941624 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145020113 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164620908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215833857 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162421541 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163259133 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201525382 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230948605 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150201866 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083914471 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155406762 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157967591 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191822994 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141468469 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161168453 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162912404 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131548351 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184911475 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125973254 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184044659 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119529441 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174292293 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183231551 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128766558 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162130929 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152087956 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125152277 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203791418 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198447715 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143430361 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134098625 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211637873 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178426152 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.153087338 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178028132 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230819429 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117399767 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150362926 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229959082 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243913289 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113259628 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230134393 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157945033 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107303375 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133652033 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182019129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156241156 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163361805 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13524414 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183468933 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236924802 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098539697 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140765573 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193161843 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13451837 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134030742 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163667717 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149812581 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138883684 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124787348 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15480078 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20995659 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179984608 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155944219 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16645205 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153271083 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25516187 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142837893 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123607928 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150133976 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121726628 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193745293 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227234701 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104835281 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233141589 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17325709 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206038903 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170613045 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136822903 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178744941 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13187908 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091963532 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224965187 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169410737 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161771732 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197345177 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228477412 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1837367 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184346566 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201681865 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175752055 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166156781 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159554167 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111800664 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162532686 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200544417 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097721414 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145407744 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135043693 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148277857 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11590228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135777299 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22514275 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172446629 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190869284 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16243087 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151784607 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183591539 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131472984 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174675725 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178479599 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149908761 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199267044 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223744953 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185948517 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145980226 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200748765 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124194251 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125320077 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114474386 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200265787 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107164565 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13693833 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164528243 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182968819 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181840399 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206018113 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213036045 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202972975 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192202139 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095115972 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171934788 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185598396 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177535473 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.195211173 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143799504 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151568226 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180661194 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160102928 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258265553 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169492856 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176644054 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238287546 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150511672 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10532525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15307272 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192263092 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154996516 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207414236 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119997744 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143765704 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163070923 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135243237 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160660447 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184397968 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163181488 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219929284 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150831332 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187046056 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128393186 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164462448 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161006975 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16593358 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081284645 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177074893 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235346079 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150184156 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169265787 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190613784 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133580391 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311737049 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246866893 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196532091 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139319214 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157312831 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16201449 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165979749 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17353408 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181174355 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160826775 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189084378 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161289313 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139064944 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141840931 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121184993 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152136913 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133796171 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14997649 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178011096 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141930152 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187821603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164995589 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161257834 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173319258 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151682358 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145942738 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151915522 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21748599 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184018774 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242620736 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153479841 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181929467 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235430346 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099440714 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134196004 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133815192 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17956153 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108900613 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225418249 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18974216 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236020883 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186014631 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194552195 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142279737 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121087403 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129697517 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203911383 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209957701 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155673434 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161369497 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234354534 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118458277 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135072077 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179319926 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296077637 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146699925 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226354394 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080576291 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283035054 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13043588 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104325253 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164925671 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23759018 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137320072 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191607208 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176861685 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172768393 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166091266 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151088748 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19253016 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248237186 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203471809 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181000689 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.135526671 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157801966 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177567999 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222592972 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15870347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112897399 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234297501 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198574251 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196940535 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143678556 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170510054 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168522461 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159117225 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218823338 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106977857 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237772333 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136345056 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196126367 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154716263 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145773021 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177404943 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191254291 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143928572 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218895254 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185102545 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137146939 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104626299 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170350945 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210894223 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158812092 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099401017 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209866986 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098103118 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224852178 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232482742 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137197046 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157712702 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1506388 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13536178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156357867 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160019729 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114221681 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169489064 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207196271 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137274924 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191545382 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234228197 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170644246 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175178728 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14772496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693604449 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133050488 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195832565 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16169111 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238062937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15091544 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175777337 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159702569 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16994614 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197102336 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162999101 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23527222 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222977968 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180602015 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103276881 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188461124 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165471024 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116516073 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153031052 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169392348 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160792978 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15613286 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207682117 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17479728 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106789576 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142013804 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200338846 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162020808 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214812377 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180999213 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109455802 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203911342 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189661647 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134542009 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181893475 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238726013 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112581827 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153585681 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.1360596 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158184012 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265774803 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095678118 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237211796 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186353875 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16113839 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17054643 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148558355 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225427582 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159711522 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187097204 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149016476 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161406859 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158814366 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139125499 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10243238 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157872154 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169190248 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151717199 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161524329 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168676755 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198927416 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09527289 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145794138 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319132243 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195687177 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248640995 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107126696 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138154504 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164294632 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152821889 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177314358 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179899639 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138241892 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137762238 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108320761 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162199737 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113017665 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158859605 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197331195 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196538748 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210088219 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139276587 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279773216 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111842369 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158113528 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117712157 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104942834 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152075563 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147530637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160857402 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194613646 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269326936 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150426935 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135834273 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150982087 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09896579 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138026217 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166775462 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165880354 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179381287 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147665524 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080246946 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159339441 seconds)
  done (took 84.150879503 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175985597 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154225659 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16247256 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223986205 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19315347 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292209621 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232833432 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271151046 seconds)
  done (took 2.849100079 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095394065 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148982214 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158675336 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135155517 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092659241 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12041739 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.350400297 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136804613 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.120158998 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121546951 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.177681148 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095789103 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.561407221 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091050684 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120157471 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.111310933 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092443187 seconds)
  done (took 3.873868297 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.48208732 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.766094322 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.521516979 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097562243 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.332080765 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114059705 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.007374867 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.206661595 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118968001 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.508089862 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.782404042 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165310712 seconds)
  done (took 19.252016812 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11622968 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138377195 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123454848 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155350788 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14313707 seconds)
  done (took 1.830009572 seconds)
done (took 133.886230928 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.10519669 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409488661 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071587806 seconds)
  done (took 1.665525164 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108068782 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138743755 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108349339 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138664297 seconds)
  done (took 1.653400946 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099583768 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128359981 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.1092432 seconds)
  done (took 1.491221155 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.329668564 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192027494 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.173261537 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106666302 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130770504 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10349865 seconds)
  done (took 1.498521444 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098056757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129754597 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098090325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131649015 seconds)
  done (took 1.616530245 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096207677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071152683 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102089565 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075045964 seconds)
  done (took 1.49844847 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115509157 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133402148 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103451174 seconds)
  done (took 1.51237814 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130126178 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.141540284 seconds)
  done (took 1.43200674 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106066336 seconds)
  done (took 1.261603956 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118819999 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.17077143 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191083191 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16688988 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.239203528 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167376494 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142695059 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115391997 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133571715 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145981684 seconds)
  done (took 2.751726143 seconds)
done (took 18.3334177 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104014879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.520315875 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413140575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117216993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724659707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380108371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036539737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147725406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166601949 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093188122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142175491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67296225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064089088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.475048315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019339055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.380032967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676844901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123543976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120635846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095287673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021839979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093159473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124382709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091897322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717973441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426304928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095365832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376444341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09289331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127700019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382301342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124316409 seconds)
  done (took 17.297044493 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096384929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176073735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09713397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140049803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12489332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095635683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126156033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094259905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181345805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124562903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109684152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123394065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127127232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095385985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144432446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091784481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127486093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093013823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123706975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121671326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112638343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122328513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094780876 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122445488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093256387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137074846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093871821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123040929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122170045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099187906 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128545523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095034246 seconds)
  done (took 4.919926184 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141395314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184908299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130384981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12725001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170854059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126128645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200287072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117499184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184757671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125956646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141028887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093642314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158524541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094820259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145176891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122342117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096805402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124043203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092184906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124996355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141045104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124382391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094399342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124399682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107633591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125406834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121219421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094647757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127587707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099362181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125443718 seconds)
  done (took 5.250851667 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09838617 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127099313 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109205444 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140483409 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094680241 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128223902 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097818919 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126080967 seconds)
  done (took 2.087745288 seconds)
done (took 30.712800883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112324256 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127999891 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107267007 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136323201 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102916232 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133783757 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091613849 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13614186 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134309962 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103329593 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138304373 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092333574 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12446659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091945653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136704777 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097235568 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134256698 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101108807 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13544198 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132721321 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095371445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134806477 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103493646 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134631 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103546991 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135459903 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137986066 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10046504 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123677596 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094155061 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125887372 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104543802 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125588564 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105332131 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128027228 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096546084 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126057033 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093819995 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13477117 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133581785 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100341907 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134414709 seconds)
  done (took 6.10311662 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108181714 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140887339 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105061698 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080401881 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119593798 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080756984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139165239 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078860466 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111237247 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108513496 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073684712 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107881048 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078538672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101863697 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078547738 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075131247 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109510182 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07633616 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076541522 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107116721 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080299518 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072590333 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110332375 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078732196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074455655 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111831514 seconds)
  done (took 3.657157315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.1011943 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135362749 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112736665 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186953268 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162863084 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099383314 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134453311 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109335132 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140995853 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121743145 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097091008 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151690536 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110572912 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131395266 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09151566 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140035508 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137525059 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094956144 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129001491 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112860285 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140526222 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102297396 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143604491 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133414063 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09358516 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12416703 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097141507 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136556313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097991149 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133690483 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096742432 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127084841 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12415736 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105656848 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127834766 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093886195 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143923444 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102830298 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13323713 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092423569 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132445283 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122157987 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115708218 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164033256 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091110266 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131116118 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094216193 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134624526 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122468956 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112153371 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13241558 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092899716 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127116646 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091027694 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122980104 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107164699 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125820619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094736063 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133901466 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127637652 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106179164 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127102033 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109098695 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123467117 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100187572 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124200236 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093014014 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123645452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114377689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12540226 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163341275 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092782991 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125933098 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100600008 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132441588 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128968386 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094486339 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138437861 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102935155 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127649642 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10171395 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12795355 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094918174 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142819092 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094532066 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12618346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094104319 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130785308 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125152513 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094496438 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137451563 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093067448 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12641822 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110558703 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123980031 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092504033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130237856 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127443314 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093432338 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13812128 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098171816 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124946272 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102598192 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124519959 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095239304 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13503138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128034279 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092182087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127804033 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100388668 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124653198 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094035547 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126225138 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094756825 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134361736 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099756986 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129602764 seconds)
  done (took 14.99959631 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230561056 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216322262 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236962946 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264921734 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136818885 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114353759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212294358 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157591645 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125502265 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160917554 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17621349 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.192073093 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171249256 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180242556 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172679573 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093328722 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145274773 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164800222 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216884815 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259754763 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145659048 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132938266 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161781549 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12926128 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138304276 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13299343 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11139914 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138257562 seconds)
  done (took 5.910095633 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109442303 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157504458 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097917138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146704986 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150490536 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092583975 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130818214 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094274975 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137890858 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136593966 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09309931 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131261118 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100297572 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134691116 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124828791 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104060245 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133770303 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095150304 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127682748 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097872707 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135736521 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101671794 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129654237 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09132532 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134855418 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122169819 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087075407 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143747247 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092281402 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147054238 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123210756 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102425927 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138308078 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094553651 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125283291 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095971064 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127276878 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094971443 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126315222 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092048926 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124509986 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078252251 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123978081 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106285128 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131517456 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08011683 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131999407 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0976122 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126759658 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121009214 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09727957 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127028035 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097072336 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132242186 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095969066 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125189074 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096718933 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116875168 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101156553 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126128201 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085688778 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091275683 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130356134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118991868 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102793133 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129471011 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092797521 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127407303 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098086482 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131098933 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094913752 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131346162 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091059667 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127546071 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095516975 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.131571911 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095996893 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125278432 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092402774 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126153719 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075061919 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125270535 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074308236 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12833797 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092589445 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123521368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095916104 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131769145 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138936225 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096361815 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133985843 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094872576 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123956842 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096454096 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114699587 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097672696 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142117611 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140990046 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094017923 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12314464 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107957324 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12789546 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092445124 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107259197 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102728079 seconds)
  done (took 13.134818674 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127762146 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155460349 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094780434 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144205362 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158219437 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159098803 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101640132 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131864612 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096304026 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142995252 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093868108 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134190097 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093288757 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13966412 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157721012 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103748131 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127134826 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107699809 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130793426 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170925926 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11226067 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144712482 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110368224 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125955418 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098258099 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.14256771 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16315623 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107122785 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139493197 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143049397 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109363249 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162612326 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11270577 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130192275 seconds)
  done (took 5.575616053 seconds)
done (took 50.547940491 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.307333396 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.511532664 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.270023339 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.314922257 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.315793772 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.30827263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.283413647 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.269941868 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.617120387 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.272183033 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.526413691 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.981721059 seconds)
done (took 60.1741847 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.350606742 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.402045455 seconds)
    (2/2) benchmarking "String"...
    done (took 1.53853221 seconds)
  done (took 4.146795986 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.625322796 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.258593684 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.534385631 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.270252488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.271019687 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.560467882 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.098616221 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.708787707 seconds)
  done (took 28.898287446 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.280372572 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.365725053 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.300948962 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.278598489 seconds)
  done (took 6.424486404 seconds)
done (took 49.64322164 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.277116182 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.315890268 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.30126199 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.251563933 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.392898049 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.30463166 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.505973261 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.423174794 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.292340604 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.253630005 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.296067365 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.272255694 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.294571677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.400192023 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.274782208 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.284417367 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.283083524 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.91444073 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.706411427 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.27440563 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.299785784 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.332868933 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.30298816 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.276911205 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.278470973 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.273242842 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.285788625 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.274104422 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.180556359 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.273287141 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.314331236 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.599267515 seconds)
  done (took 193.209297843 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.272920476 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.403487678 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.544306551 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.342785399 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.781665207 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.474232751 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.40693616 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.864800868 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.302179371 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.295448396 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.56467296 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.274021462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.638159563 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.250443106 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.303700723 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.282633355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.469587455 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.646039899 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.327945172 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.446431701 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.280376763 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.511727614 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.433082243 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.532946017 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.28415682 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.408112522 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.300118127 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.297241674 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.465951325 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.390142256 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.299338845 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.296736094 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.965350425 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.134165446 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.293089922 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.285920223 seconds)
  done (took 153.272744447 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.343491934 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.275837465 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.275423153 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.276144755 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277638992 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.275834131 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.312337333 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276363469 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.92015677 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899705151 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.825425276 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.574842565 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.902079361 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608253807 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.277187337 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37480857 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.290272066 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.278570535 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.292608247 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.323812192 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278273951 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27698015 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.923261968 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.294782322 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.28842048 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.463772493 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.298474572 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313551578 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.671641037 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277450472 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313607781 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.621298614 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.334633435 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277752298 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.695044587 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.14224971 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396545494 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279274636 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313920757 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.278082225 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.565745062 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.278575103 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.278278635 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.280407605 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.96570279 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.278412341 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.918259384 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282913958 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.288069929 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.278155606 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278527112 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.303791466 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.306594295 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.000515001 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.300377165 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.278751552 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.279912865 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.279434145 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.279528849 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.315249417 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.278461724 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.315851015 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.401332729 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.300371398 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.282553601 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315287855 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.278974983 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.648893273 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.279064502 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.463725156 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.359790681 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.387672076 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.923611055 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.285301642 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383442902 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404873816 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.280560645 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.280245111 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.280523366 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.280352161 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.395963853 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.281742886 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.756374725 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.467940136 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.301595725 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.90386555 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.387171509 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.280867923 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.766172998 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285692245 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280309428 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.107077587 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382060705 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.280858709 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.281463387 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.280827732 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.759188349 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902832103 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.605055749 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.285186981 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.510280441 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.306364349 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.774833016 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.899610932 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.057078104 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.286492491 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398312415 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.468132261 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.303723223 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.281016862 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.901968014 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.286573601 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.340351303 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.282995298 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.683960059 seconds)
  done (took 376.725727748 seconds)
done (took 725.74943467 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.903401817 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.893745914 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.01256083 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.893923751 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.850269553 seconds)
  done (took 10.760575581 seconds)
done (took 11.968220562 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49255071 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491362463 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351385044 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49481345 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314970545 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.514271424 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474580774 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.303803279 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395701927 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.37668051 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395444918 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.343751074 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.314816313 seconds)
  done (took 19.471845566 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.63618239 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.632455855 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35015852 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.632879797 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327689648 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.633690549 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501111078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.515536396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.525381344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326068011 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.297244415 seconds)
  done (took 17.587693484 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.641275571 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.638800468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.354740087 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.679043279 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32897709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.639513518 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.515848325 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.521828025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.527684074 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.325539012 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298402376 seconds)
  done (took 17.680917223 seconds)
done (took 55.948082605 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.29394567 seconds)
  done (took 2.50338839 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.331273038 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.503645891 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.314784417 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.299245614 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.29544035 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.294888963 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.299709344 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.295051377 seconds)
  done (took 11.845460983 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2916607 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.29170881 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.29183195 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.294938266 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.291462377 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.290999678 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.29116853 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.291329342 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.291143681 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.294826145 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.29449873 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.293600113 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.29524306 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.294567013 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.294562643 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.295332711 seconds)
  done (took 21.900812378 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.294619745 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.291474455 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.292405698 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.292992661 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.292403471 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.29151275 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.293498591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.292041521 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.292473048 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.293205423 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.293657926 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.292288828 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.293710804 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.292617817 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.292966868 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.293273226 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.292711076 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.292415817 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.297860351 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.292494801 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.293002503 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.29282582 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.294000988 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.293234633 seconds)
  done (took 32.247539535 seconds)
done (took 69.706522859 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.713157386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.12457733 seconds)
  done (took 10.051395903 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.295775021 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.295732116 seconds)
  done (took 3.805182594 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.295711874 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.294778323 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.296102217 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.296009115 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.294706081 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.295138274 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.296410903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.296212822 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.295468725 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.295171124 seconds)
  done (took 14.169033034 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.29691816 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.295778778 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.294645399 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.297229352 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.29692535 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.293591014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.296357971 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.297833607 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.297271724 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.2959128 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.296311432 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.295708315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.296610495 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.294707066 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.297244537 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.295046584 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.295190015 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.296151207 seconds)
  done (took 24.543152525 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.297539717 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.297090701 seconds)
  done (took 3.808909555 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.295648282 seconds)
    (2/7) benchmarking "second"...
    done (took 1.295056294 seconds)
    (3/7) benchmarking "month"...
    done (took 1.294606361 seconds)
    (4/7) benchmarking "year"...
    done (took 1.295400871 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.295224387 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.295082121 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.294435308 seconds)
  done (took 10.280103646 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.297818586 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.471843569 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.552355521 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.905048025 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.299558761 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.301906816 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.163283001 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.304387071 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.30412328 seconds)
  done (took 14.815961434 seconds)
done (took 82.686929136 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.349823023 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.310329553 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.590705173 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.305255679 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.30702146 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.591085433 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.309974264 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.425269654 seconds)
done (took 38.406395454 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.295227584 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.27069875 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.209013543 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.287985094 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.389913044 seconds)
  done (took 19.374601893 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.442868105 seconds)
    (2/2) benchmarking "read"...
    done (took 1.638218203 seconds)
  done (took 5.29739954 seconds)
done (took 32.183906502 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301582728 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.299678223 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.299727696 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.298046102 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.300332186 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.298601598 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.298091408 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.299156395 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.299379501 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.299960567 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.300105497 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.299885133 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300318835 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297874175 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29889965 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299998942 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.298629063 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298044537 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.297220081 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298063731 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300015515 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.298384296 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.299982922 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.298545465 seconds)
  done (took 32.398501202 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.301338365 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.300056988 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.3022667 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.301010117 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.298662891 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.302083604 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.300964674 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.299306058 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.301388765 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.301630347 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29955964 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.29995079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.301676975 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.300373455 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301832367 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.299859713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.302273565 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299838185 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301769543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.299731887 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.302483736 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299687688 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.299880296 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302614958 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.299863112 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300260209 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.302804307 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.300580338 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302653902 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.300125679 seconds)
  done (took 40.245753808 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.308826605 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.310815749 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.302357994 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.303214027 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.303579742 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.302992756 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.302895856 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.302685812 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.301614134 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.303169378 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.304151617 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.303681281 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.303822091 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.303739173 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.303837249 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.303239366 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.304692875 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.30380715 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.304162818 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.303444958 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.304566894 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.304588606 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.304371605 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.303785778 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.305322564 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.305417363 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.304671335 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.304994424 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.30563345 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.305357499 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.305711826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.30494893 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.304169686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.30544875 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.304797068 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.305070633 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.309815914 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.313862257 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.305450165 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.305692383 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.30535269 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.306283267 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.305992609 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.305449427 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.305732306 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.305514581 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.305857931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.305339316 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.305655892 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.30540125 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.307162534 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.30664373 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.305697997 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.306463019 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.306116291 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.305866036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.306082256 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.306578231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.306667198 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.307279105 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.30732507 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.306446781 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.307943504 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.306511084 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.307844698 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.306906549 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.307257101 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.306813835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.3073164 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.308368074 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.30718516 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.30702427 seconds)
  done (took 95.224714861 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.308873525 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305155451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305147219 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.304842388 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305539763 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.307021536 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.305658767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307583039 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30524617 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.308091463 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308003616 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306564066 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30502285 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30856401 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307956987 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.305964847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308503479 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306379675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.309642041 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308559595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307995834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.306011668 seconds)
  done (took 29.977383976 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309531532 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309870783 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.305772213 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308363876 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306487689 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30815145 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.308735357 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3107251 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309438952 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306372503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306170625 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30944177 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306370336 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306696439 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30747823 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308991864 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311546348 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308335697 seconds)
  done (took 24.773549473 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.307855942 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.307599854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.309254353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.307322214 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.308253321 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.311388973 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307443702 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.311111366 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.310305902 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.307434829 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.310006801 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310727548 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.310044588 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307888397 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310663358 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.309151318 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.311113042 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308938176 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310682861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307373128 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.307874795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310474023 seconds)
  done (took 30.030222371 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311806879 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311071383 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308622158 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308258311 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310066981 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.310818086 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.311116776 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.309342203 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.312411898 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.310878414 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309719341 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311180944 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.309637127 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309896191 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.308642753 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309775103 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312137807 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310667123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312623177 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310323331 seconds)
  done (took 27.436474266 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.313520692 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313671529 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314115635 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314948468 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314422453 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.314033424 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314640374 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31440743 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314509671 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.314987888 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.314225461 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314844992 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315309255 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314519311 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314990331 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316104477 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315351361 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31538467 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.31546479 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315020987 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315233633 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315076833 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3157202 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31557009 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315571719 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316763845 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315933354 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314745935 seconds)
  done (took 38.047900632 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314924549 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314903462 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.313162679 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.311627664 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.312384015 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.310953903 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.312942724 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.312000467 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315123371 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.312673878 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.315559124 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.314864798 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315770661 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.316109192 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315366217 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.315802008 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315261887 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.312745691 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314226998 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31293197 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.31545031 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315162257 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.315819633 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.313407661 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31371431 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317132783 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314155966 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.313415636 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315815161 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313058886 seconds)
  done (took 40.658135712 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.336079754 seconds)
    (2/2) benchmarking "in"...
    done (took 1.334774887 seconds)
  done (took 3.902525125 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.314681002 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317547665 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.316040572 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.314402184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.315164503 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.31714511 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.317358541 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31453697 seconds)
  done (took 11.760057283 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.317070652 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.318401532 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.316824169 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.317294878 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.317753773 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.317717885 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.323314668 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.340447498 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.318206465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.319776296 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.327054098 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.327482871 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.319948189 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318230609 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.318097833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.319787502 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.318107243 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.319080042 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.31860588 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.319743095 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.319634356 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320587068 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319709497 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.319373667 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.320908409 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.330190817 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.344335998 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.31904854 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318576376 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.322077473 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.319384923 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.316718756 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.31984683 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.326491924 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.319601312 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.320140921 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327256618 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341536623 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.325066455 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341935398 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320358575 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.317265332 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.320039955 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.320371978 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.322054101 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.32071349 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.321752345 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.317766552 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.319676361 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.324583806 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327712537 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318895096 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.318815235 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323250319 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.32139592 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326652246 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.344557937 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.32520861 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.3323202 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.331524045 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.355873122 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.348933943 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322642221 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.321344312 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332725216 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.347524757 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327170285 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.341691336 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.318857322 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.321785967 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.32781648 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355697847 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.35022541 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.322386402 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323509182 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.322629428 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32193294 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321558145 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.3280009 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.350439868 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.322634405 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323835858 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.333515939 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348178432 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.322868126 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.323290478 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.323372383 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.324264426 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.324780949 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332887804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.346934035 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.323754854 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.322603628 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.323499487 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.324329566 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.32476821 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.324390575 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324041935 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.320952201 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.324477673 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324319516 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328004706 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.333137632 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.32459211 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.32460299 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.331189757 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.346961626 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32428366 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.329770307 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.324737051 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324838954 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.325940497 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.331072969 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.322416193 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329489285 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.334218934 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.324518632 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.325860157 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.325391934 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.325861614 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.336507593 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.354278798 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.325642473 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.325902022 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.330893155 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.33858386 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326100821 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.327577521 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.325425526 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.322888921 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.323574278 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.325668903 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.326510399 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.326631947 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325819239 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327385094 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.323378986 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.326929472 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.326833671 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.327661014 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.327034505 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.326957282 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.327457549 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.330142418 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.326770624 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.328117422 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.3313603 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.348899121 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.327756793 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.327373636 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.325435412 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327896263 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.327772891 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.328150576 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.328159691 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328680707 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.327465277 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.327507714 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.327153296 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.328730549 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327781434 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.329355875 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333094024 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.32883501 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.330693288 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.327600745 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.325194636 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.327987719 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.328523898 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.328311871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.328175143 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.326933028 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.333052336 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.338882924 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.32985718 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.329153374 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.330658824 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.329738013 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329370058 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330086365 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.333049724 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.338138088 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330097152 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.33592031 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.351763834 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331075262 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.330530425 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.329618051 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.328282209 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330064566 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.335196532 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.338712091 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341618114 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.359469418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.330708244 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.33437256 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.332460482 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.334617669 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.333780588 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.329988467 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.330376809 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.331026185 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32925315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329979879 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.33187315 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.330725766 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.330477991 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.331226428 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.330605924 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.331439952 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331783039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.330879804 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331249493 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.328826082 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331012963 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.331498825 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.331184934 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.328771826 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.331025131 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.331215642 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.332157583 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.333254172 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.336666019 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.329730374 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332991793 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.333104201 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.331811523 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.331627843 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.331862024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33393634 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.331773299 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338729038 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.355275741 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.332025858 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.337558526 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.354469156 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.331073558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.335283438 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.333944122 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.331015116 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.33665944 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.342891934 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.33375467 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.334149797 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.335634335 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.334011158 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333140092 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.339151813 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.354133513 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.333179307 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.333791024 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.333883482 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.331143021 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.333630089 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.333805362 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.334005401 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335546057 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334051272 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.333634493 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.334094768 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.333950578 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.335160608 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.335179096 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337625857 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.343067842 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.339906048 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.334565032 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.33628354 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.334860851 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.339633046 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.335234362 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.33488274 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.33434434 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.346494982 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.363697608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.340384915 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.357782009 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.33570362 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.340325552 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.359420809 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.338885063 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335478559 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335647253 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.336123107 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.333693678 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.333405502 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335800376 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.336648527 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337202908 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.337793672 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.340438014 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.336927849 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.335926945 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.336717157 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.33715858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.336927047 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.336233605 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.336333919 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.33833076 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.337240092 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.336355797 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.336348002 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.343302521 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360384674 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.337505811 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.336518466 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.337567059 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.336600902 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.33822811 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.338435018 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.341698239 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.346846427 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.341236373 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.34748282 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.339151549 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.347549619 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.337907141 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.342438326 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.347938694 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336095913 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.33814323 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.338308004 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.33931238 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345191547 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.362002258 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.341139516 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.345125099 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339677273 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.339207671 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.339149855 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.339173847 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338717633 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.340310685 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346215776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.363726485 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.343187815 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340544553 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.33606105 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.340772878 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.339772516 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.337600004 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342245521 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.338638153 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.340167509 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.338259363 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.338547245 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.339187505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.338946865 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.341329552 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.337210478 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.340421357 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345660434 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.365192959 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345671965 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.341189191 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.345707488 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363140509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.346929417 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.366662688 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.340618882 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.340820638 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.34159172 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.342590763 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.340445878 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.341834138 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.340726104 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.342483617 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.344692425 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.341563857 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.342350007 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.341974262 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.341353157 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.341707911 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35234921 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369285444 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.343167393 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346980034 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.339305545 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.343723043 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.346227063 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.342946849 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.341216138 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.344681449 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354793267 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352012182 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.34279742 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.341590986 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343475729 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343392296 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.34338591 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.342758832 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.343072641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.344076195 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.343758908 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.344071824 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345045333 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.342993123 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.342691392 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.344261679 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.345558113 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.353602777 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.366317936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.343753999 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.342483561 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.34426932 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.343735718 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.343512108 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.344415636 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344740422 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.344209173 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.345986347 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352539381 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.352219166 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.345988317 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.344025151 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.344311731 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.344171303 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.345221923 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.345621243 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.345256277 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345415507 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.345055116 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.345161694 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.346415847 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.345901752 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.345668391 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.345826996 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345836088 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34945606 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.353685664 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344343336 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.343002587 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.344307796 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.345326267 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.345506881 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.346219547 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.351492669 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372262519 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.358266411 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.357287482 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.351535133 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.347751258 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34967397 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.356105631 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.345155262 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.346435386 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.347192082 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.348150258 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.347391988 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.350647717 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347337426 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.352828784 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.368323514 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.345694597 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354025928 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.370091712 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347085738 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.350224827 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351507179 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.347471447 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.345356845 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.347070157 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.346782145 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353716636 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.370884426 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348075129 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.350272729 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.346500571 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.35008312 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.352838452 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347622238 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.348941043 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.34539128 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.348663085 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348860008 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349653048 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.345151764 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.347959669 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.348903628 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.352364567 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.357043427 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.347217441 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351092568 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.349572541 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.350110333 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349938171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349422816 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346725946 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.346862019 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.348497671 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350181747 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.349455773 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.350413888 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.349204344 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.351292512 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.35149015 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351308085 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353108315 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.361837658 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.358468436 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347252753 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.350113198 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.349333028 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.352156969 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350949045 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.350141935 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351106682 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.350754825 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.350844796 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35153189 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.349946468 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.354542432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.366057751 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.37324691 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349670203 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.350309532 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353639511 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.351687764 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.349179123 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.351945749 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.352356488 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.354809687 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.361111872 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.352109348 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357404373 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.373650178 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.353150879 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.356525441 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.354639669 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.359931714 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.35422053 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.350895098 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.353240809 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.357863636 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.370023915 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.35243302 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363085432 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384569394 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.375803916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.352707238 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.353232566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352256164 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.353821316 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.35539723 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.352876043 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.353184553 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354175211 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.353940246 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.355609675 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359351497 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.354292847 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.353953041 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.353870996 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.353241397 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.355373353 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.351005174 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.353902898 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.354776932 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.355330992 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.355141176 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.354842058 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.354220534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366360408 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.383471956 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.354810874 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.355110872 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.35157716 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.356198017 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.358513766 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368175529 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.362823 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.356029617 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.356428871 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.356265065 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35580022 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.354604059 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.35458967 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.353860109 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355939433 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.351808315 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.366256855 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384643883 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.359924542 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.355649475 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357070967 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.356659918 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356729624 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356267402 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356646349 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.357234529 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.358894634 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360609566 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.357288418 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.355717342 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.359177774 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.36607519 seconds)
  done (took 800.006753883 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355695766 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354802657 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.353935878 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.354576111 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353672675 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354570484 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354050797 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.354632781 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.354244209 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355069327 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35489655 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355081406 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3556339 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.354666667 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354954215 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.356357537 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3546513 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.355375266 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354852391 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354948206 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355568301 seconds)
  done (took 29.722699751 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.359540354 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.356771281 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35661948 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.358740285 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355795067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.358589403 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356240432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358635102 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.358984028 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35604295 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358220939 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357985271 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.356066303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.355641592 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355827616 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358673182 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358815591 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356243659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.359416363 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.356504416 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358576968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.356251883 seconds)
  done (took 31.137032136 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.360414864 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.360496876 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.358635427 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.35719737 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.359392966 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.356626139 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.361067377 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.359323404 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.359255961 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.359889729 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.359022173 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.361947488 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.368442043 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.366654543 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.360488581 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.359025276 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.50438372 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.359748465 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.36024747 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.360273923 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.358554038 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.364881496 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.37962289 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.357740708 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.35879007 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.360365358 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.361256995 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.360415128 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.362055454 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.362226703 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.365905678 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.361006347 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.360109923 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.362000554 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.36092747 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.363291826 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.36547781 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.360571066 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.357144992 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.361130383 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.371871841 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.384142459 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.362289714 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.365836831 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.383974085 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.362049699 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.366017559 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.370762378 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.359398068 seconds)
  done (took 68.196759767 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.363166497 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.363267461 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.359764621 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362078301 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.363066933 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.362976917 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.364659895 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.362588091 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.360957143 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.360574397 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.363200312 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.362206261 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.360541362 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.363566384 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.362353193 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.359884444 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.361216833 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.362004133 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.361080335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360975891 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.36038396 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.363816847 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.364244662 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.360716679 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362612173 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361293624 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.361133619 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.363982615 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.361559956 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.362353743 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.363375365 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.363098006 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.364727581 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.36204232 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362730207 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.365202129 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.364559238 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.362595425 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36454816 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.36141196 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.363563584 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.364109221 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.364730822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.364622081 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362589126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.362946862 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36231295 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.362461312 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.363277699 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.365108896 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.366021165 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.363489014 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.364924089 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.363072699 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365339624 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.365528023 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.363985763 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.363369496 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.366305162 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.363466535 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.36342285 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365499315 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.3633422 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.365868166 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.365349985 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.363538299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.364071678 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.366078929 seconds)
  done (took 93.972166132 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.36644097 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.366241507 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36606888 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.366358187 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.367392318 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.367563353 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.366801575 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.366370692 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.367053426 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.367135469 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368059389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.367463188 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.366390895 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.366578207 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.367542539 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367013944 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.366408469 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368126673 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.3668018 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367702324 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.368109839 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.367906705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367360763 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368774584 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368125725 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.368702176 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.367621092 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.367785551 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368270925 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368792389 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367630855 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.368441461 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.367828956 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.36796548 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.368697094 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.369215275 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368770088 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368163679 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.368620083 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.367852981 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369168658 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.367781767 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.370340357 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.369695299 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369156514 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.367817727 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.369103315 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.36895272 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.370057346 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.369208611 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.369171254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369434243 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370119601 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.368308647 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.369648486 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.369453847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369166258 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368992464 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372360258 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.370290161 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371132483 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.370457045 seconds)
  done (took 86.11441506 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370143154 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.369652148 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.368898108 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.367552102 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.369745859 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.367933264 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.369302402 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.370025104 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.369944048 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.370267776 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371043468 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368003074 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367588277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371216052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368591825 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368529198 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3675882 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367772495 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371218792 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.367734146 seconds)
  done (took 28.66515362 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.369223739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.371065154 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.368636759 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.368421013 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.371467094 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.368941724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.371730557 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37237339 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367301149 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372851394 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372315692 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.372084177 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3695681 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.370064207 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.371849034 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.369409243 seconds)
  done (took 23.211330958 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.370230913 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.373358202 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.371893192 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.372162185 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.369474068 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.369284079 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.37275914 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.369852798 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.369994501 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.372352265 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.372831619 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.373040537 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.373406718 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.373798761 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.370712207 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.373135139 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.370626021 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.37076659 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.373229842 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.373530396 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.37236889 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.370668854 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.373295041 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.373655709 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.371259164 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.371813614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.371568852 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.372100401 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.371377318 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.374495134 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.372869018 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.370493814 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.371957081 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.371502169 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.374391885 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.370974623 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.374192307 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.374278514 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.374380605 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.374805972 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.375072149 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.372193807 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.375212281 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.375400248 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.372486762 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.374447402 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.372333231 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.37315512 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.373786036 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.373089522 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.375541117 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.375594721 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.37722173 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.375716564 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.375946422 seconds)
  done (took 76.792171479 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376322667 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376672487 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.374257287 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376520958 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.377178921 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.373638699 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.376365371 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.375509603 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374741114 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.376467525 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.375553191 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.377758072 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374678194 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.377775526 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.37461908 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.376181527 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.37308041 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.374362898 seconds)
  done (took 26.050453368 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.373922025 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37476855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.377020622 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.374584091 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.374217048 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.377280166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374579004 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.376583311 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376807551 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.37584883 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374903434 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.377921265 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378475114 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.377345955 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.376030743 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375548919 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.378521805 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378118653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.375420675 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375086554 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.37748161 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377254425 seconds)
  done (took 31.568347553 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.376879448 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.376999477 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.377992537 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.395668528 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.399845856 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.402778749 seconds)
  done (took 9.620432883 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386348978 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37871209 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375671087 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379894113 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37906741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376552242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377406284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376560416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378354325 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377708734 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376727575 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380516975 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380077237 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375960674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3799218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379723155 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377327363 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378082769 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378283437 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380335346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376780137 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380653132 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377977302 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377578219 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377699638 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378872927 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381130633 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379446525 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379835604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382290222 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381146042 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378233382 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381842934 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378660948 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382213545 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382147168 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377873864 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381362298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38248933 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379264451 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382128169 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381916827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381260794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378710991 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38153824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379604132 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37942612 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378926539 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379589266 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383036465 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381488801 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37939532 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382017509 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382112263 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382214999 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381970722 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380809912 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379852996 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382747615 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380757492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380428449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382717307 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380205443 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381695393 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382485218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380839771 seconds)
  done (took 92.395746391 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380775144 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379584972 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380603705 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381255288 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380651222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380416036 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379807021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381547559 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379846724 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380973725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383671766 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37965464 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38111578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380325842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381848594 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380294724 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380105984 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380936965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382156131 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384545894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382530753 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381704029 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380430743 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380522876 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381879226 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384194348 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381099803 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38139381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38232157 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381385491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382609028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381722018 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381767378 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.383219562 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382836862 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382346604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383557693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384009904 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382598779 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385568045 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382751604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386573478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384119527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384074118 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383272377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382678565 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383161403 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384412214 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383183826 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382623259 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384310393 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383894818 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384310112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383464395 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383884451 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383533092 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383996528 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383783819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383546593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386396947 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383813214 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383407426 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38828473 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384612148 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383721985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384556407 seconds)
  done (took 92.551446891 seconds)
done (took 1865.678231002 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.443404546 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.380984214 seconds)
  done (took 14.123694765 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.550281003 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.50466821 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.385133348 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.379158557 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.386290067 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.409651158 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.384602735 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.387459222 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.387110555 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.387815853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.387195732 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.573879665 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.433683763 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.38745456 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.386513641 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.481233343 seconds)
  done (took 44.118527954 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.415299163 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.392369812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.525035982 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.412160603 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.4166829 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.60785341 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.449241735 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.390143237 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.595824076 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.436577687 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.217970829 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.416173783 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390848914 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.692486501 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.413338752 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.606856022 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.676452876 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.225437231 seconds)
  done (took 32.583324895 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.932238173 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.422521269 seconds)
  done (took 9.656277586 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.413486785 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.390947016 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.391444039 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.38902325 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.382490251 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.403968114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.390614946 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.385061551 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.876303084 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.548735241 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.393716338 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.398643652 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.414881087 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.393250329 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.389464253 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.430867579 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.550150756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.391409715 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.389282913 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.397778597 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.391411626 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.5223566 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.440231229 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.391194336 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.540507267 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.784980086 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.395634591 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.398928615 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.527785721 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.390621741 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.392070747 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.392694974 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.394067061 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.028875704 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.892331397 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.407321399 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.419533324 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.401001209 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.390513994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.594069039 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.394903406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.398728617 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.385921147 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.892748027 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.535120718 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.525989793 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.842894383 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.415619649 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.395382963 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.460471721 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.39381645 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.395215704 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.42541709 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.204138765 seconds)
  done (took 116.79486458 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.409698772 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.794381332 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561441419 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.413253645 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.200485896 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.113491403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.407937229 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.732922333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.433893113 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388381547 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.694727793 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963572153 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.411348068 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.446965282 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837769697 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399971229 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.389450275 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.355437958 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.409121272 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.387178685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919990258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.389961383 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.388270246 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.528288917 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.430257841 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.900945392 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.071409197 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 4.012669762 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.410892223 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.389113519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920950214 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.411224315 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.410779953 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.392047852 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.677976615 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.807575025 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797911441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.411550014 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.396941062 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.394427667 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.406367956 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896669055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807983169 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.410831037 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.410699855 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90294917 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.411323234 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.398112318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.394239116 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.608753118 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.088066324 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.390269541 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.04823042 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.391300321 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.69293483 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.440354754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.447231932 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.931515844 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.41758275 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.623737304 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.458843757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.392068449 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.397370241 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.39637126 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.391751455 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.794939838 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.789543764 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.392014072 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.793156353 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937891562 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.41184496 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999677753 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.349162199 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.39859463 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.451292834 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.396300737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.159907693 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944683217 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.412649246 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.391432324 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780922702 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.414357913 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.699472525 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.411796405 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.393167941 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93316156 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.394779859 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.409299018 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.393459692 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.416515967 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.193730154 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.397553376 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.70792703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.419939347 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.392297375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.392405251 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.423795323 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.39327167 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.393322529 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.396405697 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99225701 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.414222819 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.39369353 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.415399916 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.407567502 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.393627875 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.393311247 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.39301122 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62916689 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.897998809 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.418908826 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.394643148 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.401438725 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.402152673 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.519201802 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.396007533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.75670113 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.416523543 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.400019423 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.396549344 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.150636004 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.452050774 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.39435788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.396348007 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.351143592 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.602969752 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.416490347 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.414150057 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.394658146 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.433945794 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.846853816 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.419292885 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.480001905 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.396498673 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186924155 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.462011616 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.410918878 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.753135655 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.398876914 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.394947753 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.425655162 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.39640197 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.700261623 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.690076928 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.694042655 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.399399138 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.416002231 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.16016194 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.420959737 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546240914 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.419952578 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382861932 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.598194395 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.5654508 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.396876746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.002435902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.396606364 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.625576582 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.397031541 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731291397 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.960060019 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.42469721 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.398977708 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.179334329 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.126039726 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.141116434 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.396446184 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.700263631 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.386796988 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.860918863 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.397942543 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.397443069 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.976409181 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.399630159 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.40259691 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.398533599 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.398782243 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.461677055 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.575650957 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.582417206 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.400805502 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905442262 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.469736879 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.405012624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.407227687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.409693621 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.746085563 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.455523554 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.405031724 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.398566915 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.400476008 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.408531711 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.927342904 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.361068073 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.398836254 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.555399572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130628471 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.428238702 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.399604266 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.063778674 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.617330858 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002588649 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.46887163 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.7655846 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.420616134 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.440851535 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.128401615 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.4894114 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976929349 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.42372074 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.400872054 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.078913755 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.421169382 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.460952301 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.400901624 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.404388909 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010175993 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.42132725 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.400054182 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.851469449 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.423649337 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.665084383 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.401036367 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.426191027 seconds)
  done (took 1129.361408272 seconds)
done (took 1347.937302501 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.401811984 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.408156572 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.388085447 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.407739965 seconds)
  done (took 26.924288452 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.414252267 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.408261901 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.409423381 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.408589331 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.409292786 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.408617658 seconds)
  done (took 9.779212888 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.642876591 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.408250289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.409243342 seconds)
  done (took 19.779622082 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.647147778 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.925412752 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.832830415 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.078695733 seconds)
  done (took 11.805025714 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.408920159 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.409706647 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.409934834 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.410741335 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.41861123 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.414199844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.41017544 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.411703599 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.413944151 seconds)
  done (took 14.026674242 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.411311486 seconds)
done (took 85.045476363 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.796650096 seconds)
    (2/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.593175831 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.423543618 seconds)
    (4/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.690955365 seconds)
    (5/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.506807068 seconds)
    (6/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.402083028 seconds)
    (7/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.42852543 seconds)
    (8/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.395145457 seconds)
    (9/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.2525146 seconds)
    (10/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.171526282 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.709559539 seconds)
    (12/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.404252916 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.13522512 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.786638712 seconds)
    (15/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.321197285 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.445176604 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.429601109 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.389676836 seconds)
    (19/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.468175139 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.995341285 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.126686649 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.843813877 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.983166286 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.422101532 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.932683117 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.847145654 seconds)
    (27/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.665348672 seconds)
    (28/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.42396374 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.384629653 seconds)
    (30/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.418142059 seconds)
    (31/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.40576858 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.432324941 seconds)
    (33/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.418927276 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.409729986 seconds)
    (35/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.405958025 seconds)
    (36/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.187052923 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.411657926 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.528272754 seconds)
    (39/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.801460973 seconds)
    (40/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.407110255 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.439710407 seconds)
    (42/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.405834546 seconds)
    (43/286) benchmarking ("sort", Float64, false)...
    done (took 5.899049238 seconds)
    (44/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.340973313 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.423895188 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.507302342 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.526894093 seconds)
    (48/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.501893267 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.408258637 seconds)
    (50/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.287906201 seconds)
    (51/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.712687912 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.406146518 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.517006332 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.662852174 seconds)
    (55/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.416714528 seconds)
    (56/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.335073953 seconds)
    (57/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.15915381 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.395524852 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.408874054 seconds)
    (60/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.407135869 seconds)
    (61/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.33594454 seconds)
    (62/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.405968324 seconds)
    (63/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.682063263 seconds)
    (64/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.429852649 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.199800239 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.486969115 seconds)
    (67/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.437006332 seconds)
    (68/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.418165996 seconds)
    (69/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.408257792 seconds)
    (70/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.423811893 seconds)
    (71/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.774722737 seconds)
    (72/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.949140207 seconds)
    (73/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.340925603 seconds)
    (74/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.388164797 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.408201604 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.094351911 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.388824536 seconds)
    (78/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.599805883 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.386826686 seconds)
    (80/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.826353189 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.407053742 seconds)
    (82/286) benchmarking ("sort", BigInt, false)...
    done (took 6.42593543 seconds)
    (83/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.407155158 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.298614967 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.511378559 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.425678555 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 5.742737044 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.226701824 seconds)
    (89/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.627250933 seconds)
    (90/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.110040779 seconds)
    (91/286) benchmarking ("sort", Float64, true)...
    done (took 6.427773723 seconds)
    (92/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.214543356 seconds)
    (93/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.975726104 seconds)
    (94/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.38999233 seconds)
    (95/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.457457342 seconds)
    (96/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.996337195 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.429022265 seconds)
    (98/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.179542622 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.197285163 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.399202172 seconds)
    (101/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.361144816 seconds)
    (102/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.162267752 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.233481994 seconds)
    (104/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.416226868 seconds)
    (105/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.933996256 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.625183105 seconds)
    (107/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.530389686 seconds)
    (108/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.780015392 seconds)
    (109/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.393577195 seconds)
    (110/286) benchmarking ("sort", BigInt, true)...
    done (took 6.431701607 seconds)
    (111/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.205330609 seconds)
    (112/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.777275276 seconds)
    (113/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.42609779 seconds)
    (114/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.390010967 seconds)
    (115/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.427519554 seconds)
    (116/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.27011422 seconds)
    (117/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.964666627 seconds)
    (118/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.774599446 seconds)
    (119/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.417114836 seconds)
    (120/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.423460563 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.390409663 seconds)
    (122/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.531860414 seconds)
    (123/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.498050278 seconds)
    (124/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.078614587 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.945035468 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.45701584 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.692024298 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.415792626 seconds)
    (129/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.410576133 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 6.440890222 seconds)
    (131/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.536829113 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.309632783 seconds)
    (133/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.405342946 seconds)
    (134/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.478007821 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.674416689 seconds)
    (136/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.437275348 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.542724267 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.846039969 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.528708973 seconds)
    (140/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.862522185 seconds)
    (141/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.543718853 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.416882816 seconds)
    (143/286) benchmarking ("sort", Float32, true)...
    done (took 6.419330714 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.334143716 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.439999154 seconds)
    (146/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.391230526 seconds)
    (147/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.881444319 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.505470692 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.846841643 seconds)
    (150/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.413611185 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.421450219 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.437439946 seconds)
    (153/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.425460329 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.353520083 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.392733725 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.393831828 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.818985698 seconds)
    (158/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.505321305 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.30667819 seconds)
    (160/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.512701208 seconds)
    (161/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.537385897 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.181205957 seconds)
    (163/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.394734146 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.532330137 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.484123892 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.317775959 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.475230418 seconds)
    (168/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.97026097 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.441543479 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.747136682 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.545069019 seconds)
    (172/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.038096904 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.183526963 seconds)
    (174/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.321227964 seconds)
    (175/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.203062267 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.488114036 seconds)
    (177/286) benchmarking ("sort", Int8, false)...
    done (took 4.45346497 seconds)
    (178/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.506120351 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.465214139 seconds)
    (180/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.501699367 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.432300888 seconds)
    (182/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.011715738 seconds)
    (183/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.836521016 seconds)
    (184/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.550623708 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.553618074 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.503358208 seconds)
    (187/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.442805261 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.072854083 seconds)
    (189/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.398081852 seconds)
    (190/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.370354693 seconds)
    (191/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.244044145 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.421009603 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.478238501 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.048327132 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.633097603 seconds)
    (196/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.614271007 seconds)
    (197/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.464286136 seconds)
    (198/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.39524338 seconds)
    (199/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.542367719 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.283704425 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.801634422 seconds)
    (202/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.767834531 seconds)
    (203/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.474901608 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.44517506 seconds)
    (205/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.09123478 seconds)
    (206/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.751307725 seconds)
    (207/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.970570895 seconds)
    (208/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.426709859 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.457364356 seconds)
    (210/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.508342428 seconds)
    (211/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.268830978 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.422186529 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.443993324 seconds)
    (214/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.614030992 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.520834814 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.44445903 seconds)
    (217/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.397673748 seconds)
    (218/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.501317327 seconds)
    (219/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.423838323 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.425607973 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.502748511 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.398027337 seconds)
    (223/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.514004587 seconds)
    (224/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.398138159 seconds)
    (225/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.331779374 seconds)
    (226/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.682338481 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.022110215 seconds)
    (228/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.543325805 seconds)
    (229/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.42079647 seconds)
    (230/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.120435337 seconds)
    (231/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.44587198 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.398276973 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.41942579 seconds)
    (234/286) benchmarking ("sort", Float32, false)...
    done (took 5.499793928 seconds)
    (235/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.919858056 seconds)
    (236/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.420027011 seconds)
    (237/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.526576616 seconds)
    (238/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.400412737 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.446452656 seconds)
    (240/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.399446192 seconds)
    (241/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.854995125 seconds)
    (242/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.417308204 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.816107142 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.4446416 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.361376817 seconds)
    (246/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.781648766 seconds)
    (247/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.429024354 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.406519225 seconds)
    (249/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.514443769 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.483789068 seconds)
    (251/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.445484915 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.083437496 seconds)
    (253/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.546378432 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.3790669 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.407704794 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.511876081 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.502372996 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.53642539 seconds)
    (259/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.158881416 seconds)
    (260/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.455118595 seconds)
    (261/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.479497918 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.432241684 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.232886634 seconds)
    (264/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.486699476 seconds)
    (265/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.45333901 seconds)
    (266/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.420743222 seconds)
    (267/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.469838442 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.056917575 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.554586889 seconds)
    (270/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.43037209 seconds)
    (271/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.440503569 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.437851622 seconds)
    (273/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.407781952 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.507737467 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.402994212 seconds)
    (276/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.224149697 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.459961511 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.487727435 seconds)
    (279/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.573208787 seconds)
    (280/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.42877502 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.275724847 seconds)
    (282/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.402860445 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.446121657 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.438991818 seconds)
    (285/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.645671152 seconds)
    (286/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.593838304 seconds)
  done (took 982.908872011 seconds)
done (took 984.230401308 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.45540324 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451093438 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.433167567 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.45468509 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.543050817 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.461337662 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.443867393 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.433773461 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.480220215 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.481940224 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.432189932 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.459250838 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.435325881 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.432548716 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.432260348 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448645456 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.647445241 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.434278733 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.450863181 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.44315503 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.449779689 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.433115097 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.483275281 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.460580995 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.437231682 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.437671881 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.439119354 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.453358869 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.546351851 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.438323217 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.438709132 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.445535771 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.650369946 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.432772258 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.429493141 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.453717302 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.44640572 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.444257363 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.438818258 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.466783617 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.234736065 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.464116714 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.437730364 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.437064638 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.436169709 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.440449921 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.436125681 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.442839679 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.45008402 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.452128734 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.127201112 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.472221678 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.439198801 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.437384776 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.446516696 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.435300638 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.44051292 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454016403 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.456908192 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454619996 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.645591032 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.442297927 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.438449428 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.453864031 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.445095886 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.166412833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.452516985 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.441366239 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.143908245 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.463453668 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.168704925 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.467155611 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.438427739 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.451392863 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.469102251 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.698835046 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.44044846 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.438006205 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.445850433 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.43654397 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.448135033 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451955893 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.442762289 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.438980913 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452754661 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.466889773 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.448709665 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.439232454 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.447912081 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.457963217 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.447591558 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.449602151 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.441462902 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.432876573 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.449187236 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.441957836 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.44324245 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.441206095 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.443615548 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.448750445 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.144593221 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.478604954 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.436219234 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.435593123 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.440067262 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454453759 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.146036972 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.463118344 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.461307652 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.486441211 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.440567037 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.708284316 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.45025513 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458777213 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.449323241 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.444132299 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.435450359 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.649119152 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.139758341 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.476373106 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.442323587 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.438709169 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458946077 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.442806788 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.436917364 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.660791811 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.442497153 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456660143 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.562428091 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.452448385 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.473311788 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.439841971 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.444409456 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.464924384 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459616818 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.472825547 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.44483193 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459947087 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.457494175 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.438667676 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.452589258 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.452032484 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.443525001 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.447796763 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.435985925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.466120408 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456286177 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455835864 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.464844257 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.564019765 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.440809068 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.654985996 seconds)
done (took 245.387132201 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.505467491 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.438590099 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.527076338 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.438819362 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.544852136 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.545634608 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.438030299 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.437684792 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.437758363 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.81725096 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.438150519 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.438140936 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.432495503 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.438445634 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.521915514 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.439300029 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.437541196 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.782300828 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.441015551 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.511676804 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.439022219 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.437779398 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.439666649 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.824841742 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.435978118 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.436985892 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.511083155 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.440905323 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.787538153 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.439219029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.441130256 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.789152042 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.532361123 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.459980787 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.451076056 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.449107745 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.547233366 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.464625432 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.522897216 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.524049043 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.528638655 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.481123189 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.439332681 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.436717209 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.443562922 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.443535717 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.440522494 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.469234145 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.438546963 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.440000425 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.783057727 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.452236744 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.449475741 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.441253828 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.439515225 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.46218518 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.440704234 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.443761749 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.534208784 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.443649673 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.504879051 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.825379778 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.822719012 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.442771611 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.437004477 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.441724413 seconds)
  done (took 155.661422941 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.510205046 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.516927414 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.566767359 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.465504687 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.493937384 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.571246956 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.466171808 seconds)
  done (took 11.941385427 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.449875796 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.444870102 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.494106281 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.493680759 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.443554634 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.590952544 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444912657 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.45695254 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.44179849 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.496840297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445540815 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.445089081 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.45097409 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.445189032 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.492368201 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.455301313 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.559640225 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.445816902 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.447283112 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.596004452 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.443334122 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.452814492 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.498158702 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.45705309 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.446450099 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.451799089 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.010880757 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4460326 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.44316256 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.445993624 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.442693134 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.48414968 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.447196859 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.439945788 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.444215573 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.561840141 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.445786121 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443658845 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.446656899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.442320889 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.446568226 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.446238781 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.44659458 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.444210278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.447192415 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.469074995 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.446817399 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.447026346 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.446308096 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.447201782 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.498244368 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.447335779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.444873048 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.445224681 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.50333904 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454610407 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.447694624 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.445844129 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.447249079 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.444867544 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.598946834 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.495823183 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.447031104 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.495675174 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447995539 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.448599268 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.448009403 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.44764436 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.502757132 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.44874904 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.495410258 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.445816236 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.611300421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.472365776 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.450011659 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.451225283 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.450955484 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449402181 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.442981238 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.455265579 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.446580486 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.450455942 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.454788634 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.446149185 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.446782569 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552354248 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.558571574 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.447901998 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.463034713 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.455062216 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.448607082 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.503338255 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.44976422 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.447652162 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501922315 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.563930256 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.503196894 seconds)
  done (took 164.301979322 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.45461882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.457090877 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.450764642 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.466169011 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.449531665 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.449610106 seconds)
  done (took 10.08521266 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.454587668 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.452701988 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.450586076 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.451556458 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.450372985 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.451787614 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.451467999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.453361983 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.454801541 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.452148474 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.452270977 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.45234999 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.451127992 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.452423465 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.452122296 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.451903696 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.452250683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.449119817 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.452410927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452533868 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.554981464 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.451948894 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452045503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.454760247 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.455849355 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.45220439 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.459532614 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.452029264 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.452116505 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.457809407 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.477464312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.452542443 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.454748347 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.460082131 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.457426208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.45479988 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458107457 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.453717557 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.451463613 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.452859038 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.45404421 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.454448325 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.454274332 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.45393078 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.457512321 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.460424651 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.458257994 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.462351892 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.453608318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.45392744 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.45457376 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.454364965 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.453707246 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.455612623 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.455312769 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481740916 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.459411824 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.454361856 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.455173812 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.456091985 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.456392114 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.45571907 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.457540492 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.459512792 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.45236869 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.455716474 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.456312967 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.460199491 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.455759222 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.453957763 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.456449251 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.452442805 seconds)
  done (took 107.234523625 seconds)
done (took 450.572661307 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.833170025 seconds)
  done (took 8.195456742 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.772179342 seconds)
  done (took 8.136836421 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.529834052 seconds)
  done (took 25.896527122 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.549330916 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.450283739 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.469668987 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.480149904 seconds)
  done (took 27.310918561 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.070375374 seconds)
  done (took 8.432339329 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.447279695 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.460561368 seconds)
  done (took 14.273482012 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.867311806 seconds)
  done (took 8.230498782 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.554304147 seconds)
  done (took 7.921319233 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.463092126 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.475223909 seconds)
  done (took 14.311868534 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.429116272 seconds)
  done (took 7.791345195 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.939752213 seconds)
  done (took 9.306390355 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.45811414 seconds)
  done (took 7.821715084 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.508079362 seconds)
  done (took 7.871529097 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.862717191 seconds)
  done (took 11.225868187 seconds)
done (took 168.088588548 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.448428969 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.457384948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.457671505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.458100756 seconds)
  done (took 27.184712409 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.49075858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.490972674 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.49266134 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.501805685 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.492536273 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.490404765 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.482740456 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.483421472 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.50109902 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.493686957 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.492767075 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.492480729 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.491128299 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.483182687 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.493185047 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.492306964 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.503230543 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.492569741 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.482119645 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.494041311 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.458791579 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.501990851 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.494486344 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.459049039 seconds)
  done (took 37.118445831 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.977299852 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.529790827 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.611154537 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.510369889 seconds)
  done (took 7.993318016 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.511132842 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.51178192 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.524184199 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.562397965 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.594779595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.520801498 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.485579169 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.479522595 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.465665992 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.511351712 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.586689956 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.527761206 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.601773498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.459450103 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.646510269 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.458404371 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.459074793 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.510556388 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.562485397 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.576620107 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.458760754 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.511344111 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.518066542 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.528115276 seconds)
  done (took 37.938472452 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.460439244 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.478430056 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.457290739 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.457474114 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.466750066 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.458323337 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.458669617 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.458668693 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.458715185 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.464181674 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.457541585 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.470545659 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.458701495 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.45954432 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.46454006 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.459301343 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.464683981 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.458224051 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.460136536 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.464417705 seconds)
  done (took 30.603911568 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.453088998 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.307619417 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.806024052 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.710259057 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.455069096 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.453432217 seconds)
  done (took 28.551005947 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.548944326 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.730679019 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.461896432 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.902354326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.001137503 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.484730478 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.463234382 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.755897937 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.158370619 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.159971222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.534534992 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.550740232 seconds)
  done (took 22.121534048 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.473656889 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.463014111 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.468478979 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.479266229 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.528733037 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.486661954 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.468238686 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.455186497 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.536779068 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.553922965 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.487614188 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.530066791 seconds)
  done (took 39.303512418 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543731677 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507084303 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.642485089 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.556169054 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212055745 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669758791 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.483726596 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956448768 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.460398859 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729528111 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457765245 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577073331 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.715865431 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469759222 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467535805 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.671615539 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71471543 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088229488 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46755992 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326302584 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491243727 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.461133831 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.469329531 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.502206822 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670458564 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.605198396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.718477605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.23537291 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826539569 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479453712 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470568496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459758948 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73262276 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218720637 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588424874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468844108 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462206595 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.01505639 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.443433343 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.325914368 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478016084 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.468608145 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468821718 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460371253 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.395330437 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467513534 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964738691 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.465163625 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.171985874 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459812056 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471270891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554506779 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.464044343 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.452408447 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510534112 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499181547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.458080314 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558135218 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052411359 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.894007773 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482508512 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.402419115 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.48299052 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.247992704 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210810844 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.587175038 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.4644929 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46526857 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395977578 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.348719767 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484958739 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600017865 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.484431225 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122806133 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301287404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.503623859 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.394090535 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111238306 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470759204 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.403813609 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692481146 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240212391 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401410514 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.404054032 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.397158951 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296456444 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469531357 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.036093409 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48109056 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978913277 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.473549153 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479976333 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486365868 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.687400826 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.340061018 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463224659 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.466919653 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.578966214 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485143059 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.955846067 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39847333 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.46708297 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723659423 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.67603342 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46909307 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.641486034 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738535395 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464775722 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.486946532 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.481816613 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.482794705 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.162155605 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498226022 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.885591452 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488923287 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.242749248 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332152548 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466992258 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.571820244 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.466565299 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749871007 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.366732034 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.625034015 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534101386 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470161342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.465540209 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.217566052 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.061249177 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.626454426 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.460692399 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.465770341 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485328008 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.466488633 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425607434 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.464467771 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498619004 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.24382457 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.691192377 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467153154 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750676647 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90299707 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603842819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482109249 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.692234325 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.964003001 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.49580785 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728030744 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46613247 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.498545822 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508771548 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486274493 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567768197 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488870632 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.483555813 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.734103139 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.471330247 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.470671437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381791699 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.25373763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472516114 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.472444873 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474220863 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203294713 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471459623 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.470159623 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362597226 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.482114046 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534703825 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.473273873 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478931603 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.685398852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493404303 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.481321723 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.471728204 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692900931 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479006087 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.295535018 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556201853 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.714592095 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192986362 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513512144 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.404467013 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.181055976 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.162164874 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47079519 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.659958632 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.469740312 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480028327 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480424417 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.489841361 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205259704 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501602025 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.300844784 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.483984441 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481282274 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.475401462 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470972748 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.666429338 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946003665 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47961838 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.512362351 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613797678 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.485769168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.406381537 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.986843805 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475892116 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.470604061 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.248425208 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505081231 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.292015652 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008653242 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732356851 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475382022 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491197324 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.460980989 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.518689752 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.473212649 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487715022 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489881403 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.504221314 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488248416 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.483283981 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.172974716 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.84603123 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037279099 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322288613 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186606244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.582188751 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.481789601 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.362834736 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.968248472 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405963004 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132605872 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700335281 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991777272 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429149942 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723990218 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 3.042248246 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.434233799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488039201 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702204315 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549112755 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.476094815 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507896637 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68620712 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508511945 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.488342615 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.41110743 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.752801521 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780465397 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.473382708 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574195966 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970811173 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477018538 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.251974716 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.541067115 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.021927547 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715884772 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.106767848 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.86836576 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.47427843 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.487169052 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002069961 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479143778 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006359036 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213491104 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.50146245 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.754219103 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415721415 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.486597712 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.487305559 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.471197515 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.170652398 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.477125347 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.733565333 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488452125 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410418329 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.475112422 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17012073 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.363035528 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.481349074 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478441901 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353072379 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488499917 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854785004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.500576483 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.663361739 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501945526 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.412111742 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410395425 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.169974557 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486134226 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448214699 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11499259 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.495288045 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486091439 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.490485841 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329520521 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.735451689 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.49203122 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.222587237 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736482096 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482501632 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532755091 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.577512066 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495657635 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.459903193 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.360349438 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.714431633 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495454422 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.737113535 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.706806121 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.386131 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.531568935 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.722188821 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.361042244 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49387318 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798274119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.22113819 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.477710428 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340855282 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527682545 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.478401923 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.519593174 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.488341864 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50728165 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573533165 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491431016 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.489755952 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.491040606 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689301605 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480347331 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.505611884 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.492537692 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573631178 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.956610151 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.674347044 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.252486532 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229554124 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378275603 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241724744 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525511679 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.480345659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481501298 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415262145 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631580385 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.00984202 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755673184 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599769081 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.499173866 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511969977 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487989913 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496920924 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700965142 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755914799 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466426679 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482350961 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278127287 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.64121766 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492897418 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.693551154 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123933135 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181527131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611584921 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.482741029 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008255215 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755490629 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.573549817 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48199933 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076546682 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.508992029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.039799996 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.516848054 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490337992 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631504677 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493261316 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248786989 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524047589 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.638657755 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.257333187 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351463994 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.749245826 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.17358275 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.501395192 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230231918 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415471287 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756299789 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553555145 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493726725 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.613251155 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630009027 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.492320571 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.385496632 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484366516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337641956 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.194572175 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495597695 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225030855 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781841114 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.481759365 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.49198806 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507131677 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.494958259 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.7097098 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323139924 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709102657 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497474153 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.49430798 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.058817013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215054244 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529286516 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420120368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.489728164 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800611177 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.754028793 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508279115 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.937781238 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.197484654 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168391373 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.466869082 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507508485 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504123232 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386442521 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237281249 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.710475833 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136673483 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.153879779 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485785754 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791092575 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.491633566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.503083431 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769550137 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.491600344 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.495179343 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507174859 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.214514268 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.462429908 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.517343431 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496663522 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.433179816 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715907172 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.581151519 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430982508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.489784633 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.710609435 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.495223059 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60901531 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499712007 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.4916544 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487984556 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.25041653 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.772455441 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.493282559 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.477784282 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.477895852 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.502526851 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594436551 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796123198 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493916702 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.162015594 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.841126544 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.747541131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.494737393 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.477009689 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.491571511 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489914433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214077732 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.556988852 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.50112893 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186981032 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.498425798 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.531103613 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492817831 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.706437947 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700700528 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.495743478 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502935048 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489364411 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51193761 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.390480069 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.262218461 seconds)
  done (took 1738.618052807 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.531096332 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.505449295 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.517898568 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.517627595 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.497517818 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.640656259 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.571632604 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.561909541 seconds)
  done (took 53.74467923 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.503195102 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.651629778 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.525633298 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.497615703 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.50050362 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.506176632 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.038125697 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.530368404 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.4997536 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.500693558 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.506257028 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.507506677 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.263140717 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.500301974 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.506594719 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.476572252 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.49928353 seconds)
  done (took 68.421436111 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.504660713 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.752828708 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.555215829 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.494152787 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.514277786 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.519556829 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.357010475 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.588002084 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.500832358 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.900995488 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.155794525 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.495585881 seconds)
  done (took 83.74122107 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.509578786 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.50844651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.509660366 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.509534633 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.5107128 seconds)
  done (took 8.950659753 seconds)
done (took 2185.656081801 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.498811883 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.401682771 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.254838559 seconds)
  done (took 6.058745502 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.634615147 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.681872206 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.805117928 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.806791743 seconds)
  done (took 8.326955812 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.766588392 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.858860869 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.675569005 seconds)
  done (took 6.697053854 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.838534923 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.501375865 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.492831864 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.48808698 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.494541439 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.494387216 seconds)
  done (took 20.875850896 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.490593401 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.494002367 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.491492325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.493413698 seconds)
  done (took 7.368902754 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.465917734 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.206692796 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.475027175 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.492908717 seconds)
  done (took 19.037587019 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.237703001 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.24877043 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.234240431 seconds)
  done (took 8.11641336 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.521847003 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.517011175 seconds)
  done (took 4.43536724 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.802304344 seconds)
  done (took 3.199202249 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.504242118 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.544305321 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.808969939 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.733688775 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.5710848 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.499412383 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.544405828 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.016298694 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.69347013 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.430194227 seconds)
  done (took 35.745577717 seconds)
done (took 137.597343165 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.066208879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892193086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.68940584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.03982549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.722470857 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.689571417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.778006587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.005549859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.545671022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.534985522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.080743164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.722282168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.947566652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.896180983 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.949481314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.51260851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.723114184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.108264356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.489098156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.509273316 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.799942521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.673334026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.90747525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.694433953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.722261328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.637122542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.260168373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.514276947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.489442768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.279279294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.63750881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.490347526 seconds)
  done (took 206.408044815 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.497988519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.494415171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.490911467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.489548874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.492003697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.490303123 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.490566279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.510407234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.510253956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.50081905 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.490854013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.490319681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.514476175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.490184881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.493111463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.490105097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.492383772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.490139311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.489531862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.512360088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.49022491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.528930869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.493766475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.48963249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.490949798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.512509747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.492013704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.491405314 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.512739558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.513985126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.492787249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.491788016 seconds)
  done (took 209.321485575 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.491451588 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.49098923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.50225778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.492346514 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.512288423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.518099833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.492442531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.504155616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.492380961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.531070182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.492560608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.507875271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.493282408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.51591109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.492863683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.515688834 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.514104795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.511314493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.49113096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.503433098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.490995289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.492276457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.503542001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.498896819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.494126393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.493126943 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.510507551 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.496072066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.499141606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.492778411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.515444327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.492604688 seconds)
  done (took 209.44824237 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.698207759 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.49955743 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.500745814 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.458080864 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.501372861 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.500343402 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.500476901 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.691715528 seconds)
  done (took 15.753398893 seconds)
done (took 642.330223912 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.155803926 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.753197105 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.720115491 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.521803624 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.546738342 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.55443758 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.520828391 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.720562505 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.547832813 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.741388265 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.95306282 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.541755451 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.112969374 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.520097869 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.813276883 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.632684022 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.523084466 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.653591103 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.884888499 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.295211998 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.825616919 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.169008908 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.748581754 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.545685238 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.140959503 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.164578714 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.418191435 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.50323711 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.542543813 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.889568298 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.482714995 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.685458419 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.601288532 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.600477021 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.659068985 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.637361267 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.658997336 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.597817396 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.745171745 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.926937024 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.230987763 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.347102204 seconds)
  done (took 103.239075557 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.485850494 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.485835403 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.485035604 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.48427374 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.485882108 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.484781646 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.485065164 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.484276132 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.484524622 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.483462849 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.485023723 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.48614829 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.486407205 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.487135206 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.48487408 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.485799218 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.485185127 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.488010873 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.483961424 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.485455673 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.488325716 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.485671902 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.486574679 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.485730522 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.487255858 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.487912144 seconds)
  done (took 40.037003533 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.505027939 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.783125477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.971994249 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.511025912 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.504434117 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.509454639 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.601568103 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.509452856 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.508949319 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.508995481 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.674914868 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.509515579 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.544155816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.004371013 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.508926902 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.507121418 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.507169062 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.506119475 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.791249606 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.515558589 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.625011118 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.507582906 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.602591307 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.515952287 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.531412457 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.506842686 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.51254718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.092498602 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.532162865 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.676609126 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.542415161 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.60820053 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.067813484 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.008018026 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.540215877 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.516803546 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.507611958 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.680930982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.50943418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.507613098 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.603269665 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.508598299 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.984029568 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.219252654 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.53118318 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.50826684 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.116941981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.704075293 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.816331809 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.517849199 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011270879 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.512272686 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.510904964 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.510488641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.816562001 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.515973272 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.507523947 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.162691527 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.53845205 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.603560092 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.511377266 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.510094833 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.794208048 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.511766287 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.783468815 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.512306871 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.516621586 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.534664551 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.985007917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.511798138 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.243081567 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.533712811 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.510764528 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.680236214 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.788198162 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.153347144 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.537868326 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.803040285 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.087140365 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.627998729 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.514663492 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.084917947 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.631227462 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.515312644 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.513361084 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.513974662 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.51141919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.564112424 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.604569159 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.180426284 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.258669064 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.195051537 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.633029879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.524846584 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.511624151 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.166666594 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.537985099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.513202002 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.983966169 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.247096118 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.535483853 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.518954017 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.254078082 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.537737866 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.610443754 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.518559604 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.993275237 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.513280659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.565464323 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.513609549 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.518941365 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.540527248 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.609409434 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.517496503 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.514246522 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.215471068 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.712214359 seconds)
  done (took 199.717759572 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.519989674 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.50679436 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.507438751 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.507650336 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.507736951 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.516692098 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.505995275 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.508742411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.513501279 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.506128513 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.507762386 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.516282596 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.509938657 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.543052511 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.518745573 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.515051541 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.161772839 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.509977048 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.508413264 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.529725475 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.356632799 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.508897798 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.507584264 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.507748965 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.509142271 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.511095847 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.513257994 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.510810583 seconds)
  done (took 157.262228568 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.516251162 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.210766933 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.539807252 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.679375838 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.54341264 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.51476101 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.675894088 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.587895202 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.540196619 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.513866352 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.513568965 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.888591311 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.519315523 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.154380019 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.758913629 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.701022089 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.154201405 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.539770592 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.5149276 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.514316247 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.682319907 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.523627031 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.887709645 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.213377378 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.541470534 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.213740529 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.502786878 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.516953605 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.515290002 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.215861259 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.538708693 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.89133952 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.611831106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.591537311 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.239280262 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.176747879 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.17714248 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.703177309 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.51757361 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.51742803 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.515805411 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.500558297 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.214969993 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.543104074 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.518935053 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.208454132 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.543006868 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.519527981 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.523074386 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.516892248 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.590225376 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.614219026 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.917930482 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.22363029 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.638079905 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.529922851 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.684114907 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.951556849 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.528507224 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.157388904 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.50219551 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.225023572 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.542799126 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.500709261 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.519018743 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.523537189 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.704624308 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.683458598 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.157302702 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.542245671 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.157056344 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.726642236 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.519280038 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.51873531 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.520557346 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.223417649 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.181357107 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.72833511 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.686037608 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.765437158 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.505384278 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.518751445 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.504746488 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.617641849 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.52424743 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.228119586 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.184418746 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.543975292 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.522591188 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.520611231 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.522173829 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.742133053 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.248257731 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.642736538 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.157827233 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.922398622 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.899825338 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.524105464 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.593554914 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.543302865 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.902068463 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.523451233 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.592692622 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.028713287 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.910739948 seconds)
  done (took 183.572552428 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.812243337 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.930035278 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.627455134 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.693753396 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.197033101 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.13959007 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.947083191 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.696889617 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.654766603 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.827305397 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.86586392 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.616193615 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.775362791 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.61561613 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.376723371 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.641118636 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.658945727 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.703271329 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.717471441 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.708906476 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.273653456 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.842383223 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.743778911 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.608662365 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.628844328 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.430901826 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.170127951 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.130837326 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.727091829 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.049752599 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.115069398 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.822485914 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.642467497 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.328071541 seconds)
  done (took 74.144386481 seconds)
done (took 759.377406838 seconds)
SAVING RESULT...
DONE!
